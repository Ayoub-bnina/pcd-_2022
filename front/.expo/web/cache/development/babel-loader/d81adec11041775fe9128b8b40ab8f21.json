{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"disabled\", \"onValueChange\", \"color\", \"theme\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from \"../styles/colors\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport NativeSwitch from \"react-native-web/dist/exports/Switch\";\nimport setColor from 'color';\nimport { withTheme } from \"../core/theming\";\nvar version = NativeModules.PlatformConstants ? NativeModules.PlatformConstants.reactNativeVersion : undefined;\n\nvar Switch = function Switch(_ref) {\n  var value = _ref.value,\n      disabled = _ref.disabled,\n      onValueChange = _ref.onValueChange,\n      color = _ref.color,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var checkedColor = color || theme.colors.accent;\n  var onTintColor = Platform.OS === 'ios' ? checkedColor : disabled ? theme.dark ? setColor(white).alpha(0.1).rgb().string() : setColor(black).alpha(0.12).rgb().string() : setColor(checkedColor).alpha(0.5).rgb().string();\n  var thumbTintColor = Platform.OS === 'ios' ? undefined : disabled ? theme.dark ? grey800 : grey400 : value ? checkedColor : theme.dark ? grey400 : grey50;\n  var props = version && version.major === 0 && version.minor <= 56 ? {\n    onTintColor: onTintColor,\n    thumbTintColor: thumbTintColor\n  } : Platform.OS === 'web' ? {\n    activeTrackColor: onTintColor,\n    thumbColor: thumbTintColor,\n    activeThumbColor: checkedColor\n  } : {\n    thumbColor: thumbTintColor,\n    trackColor: {\n      true: onTintColor,\n      false: ''\n    }\n  };\n  return React.createElement(NativeSwitch, _extends({\n    value: value,\n    disabled: disabled,\n    onValueChange: disabled ? undefined : onValueChange\n  }, props, rest));\n};\n\nexport default withTheme(Switch);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Switch.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","grey400","grey800","grey50","white","black","setColor","withTheme","version","NativeModules","PlatformConstants","reactNativeVersion","undefined","Switch","value","disabled","onValueChange","color","theme","rest","checkedColor","colors","accent","onTintColor","Platform","OS","dark","alpha","rgb","string","thumbTintColor","props","major","minor","activeTrackColor","thumbColor","activeThumbColor","trackColor","true","false","createElement","NativeSwitch"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from '../styles/colors';\nimport { NativeModules, Platform, Switch as NativeSwitch } from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\nconst version = NativeModules.PlatformConstants ? NativeModules.PlatformConstants.reactNativeVersion : undefined;\n\n/**\n * Switch is a visual toggle between two mutually exclusive states â€” on and off.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n *\n *   const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n *\n *   return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Switch = ({\n  value,\n  disabled,\n  onValueChange,\n  color,\n  theme,\n  ...rest\n}) => {\n  const checkedColor = color || theme.colors.accent;\n  const onTintColor = Platform.OS === 'ios' ? checkedColor : disabled ? theme.dark ? setColor(white).alpha(0.1).rgb().string() : setColor(black).alpha(0.12).rgb().string() : setColor(checkedColor).alpha(0.5).rgb().string();\n  const thumbTintColor = Platform.OS === 'ios' ? undefined : disabled ? theme.dark ? grey800 : grey400 : value ? checkedColor : theme.dark ? grey400 : grey50;\n  const props = version && version.major === 0 && version.minor <= 56 ? {\n    onTintColor,\n    thumbTintColor\n  } : Platform.OS === 'web' ? {\n    activeTrackColor: onTintColor,\n    thumbColor: thumbTintColor,\n    activeThumbColor: checkedColor\n  } : {\n    thumbColor: thumbTintColor,\n    trackColor: {\n      true: onTintColor,\n      false: ''\n    }\n  };\n  return /*#__PURE__*/React.createElement(NativeSwitch, _extends({\n    value: value,\n    disabled: disabled,\n    onValueChange: disabled ? undefined : onValueChange\n  }, props, rest));\n};\n\nexport default withTheme(Switch);\n//# sourceMappingURL=Switch.js.map"]},"metadata":{},"sourceType":"module"}