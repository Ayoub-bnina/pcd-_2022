{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"onPress\", \"theme\", \"status\", \"value\", \"testID\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { RadioButtonContext } from \"./RadioButtonGroup\";\nimport { handlePress, isChecked } from \"./utils\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\n\nvar RadioButtonIOS = function RadioButtonIOS(_ref) {\n  var disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      theme = _ref.theme,\n      status = _ref.status,\n      value = _ref.value,\n      testID = _ref.testID,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var checkedColor = disabled ? theme.colors.disabled : rest.color || theme.colors.accent;\n  var rippleColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n  }\n\n  return React.createElement(RadioButtonContext.Consumer, null, function (context) {\n    var checked = isChecked({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status: status,\n      value: value\n    }) === 'checked';\n    return React.createElement(TouchableRipple, _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : function () {\n        handlePress({\n          onPress: onPress,\n          value: value,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange\n        });\n      },\n      accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n      accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled: disabled,\n        checked: checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID\n    }), React.createElement(View, {\n      style: {\n        opacity: checked ? 1 : 0\n      }\n    }, React.createElement(MaterialCommunityIcon, {\n      allowFontScaling: false,\n      name: \"check\",\n      size: 24,\n      color: checkedColor,\n      direction: \"ltr\"\n    })));\n  });\n};\n\nRadioButtonIOS.displayName = 'RadioButton.IOS';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default withTheme(RadioButtonIOS);\nvar RadioButtonIOSWithTheme = withTheme(RadioButtonIOS);\nexport { RadioButtonIOSWithTheme as RadioButtonIOS };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/RadioButton/RadioButtonIOS.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","RadioButtonContext","handlePress","isChecked","MaterialCommunityIcon","TouchableRipple","withTheme","RadioButtonIOS","disabled","onPress","theme","status","value","testID","rest","checkedColor","colors","accent","rippleColor","text","alpha","rgb","string","fade","createElement","Consumer","context","checked","contextValue","borderless","undefined","onValueChange","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","opacity","allowFontScaling","name","size","direction","displayName","StyleSheet","create","borderRadius","padding","RadioButtonIOSWithTheme"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport { RadioButtonContext } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst RadioButtonIOS = ({\n  disabled,\n  onPress,\n  theme,\n  status,\n  value,\n  testID,\n  ...rest\n}) => {\n  const checkedColor = disabled ? theme.colors.disabled : rest.color || theme.colors.accent;\n  let rippleColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n  }\n\n  return /*#__PURE__*/React.createElement(RadioButtonContext.Consumer, null, context => {\n    const checked = isChecked({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status,\n      value\n    }) === 'checked';\n    return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : () => {\n        handlePress({\n          onPress,\n          value,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange\n        });\n      } // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      ,\n      accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n      accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled,\n        checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID\n    }), /*#__PURE__*/React.createElement(View, {\n      style: {\n        opacity: checked ? 1 : 0\n      }\n    }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n      allowFontScaling: false,\n      name: \"check\",\n      size: 24,\n      color: checkedColor,\n      direction: \"ltr\"\n    })));\n  });\n};\n\nRadioButtonIOS.displayName = 'RadioButton.IOS';\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default withTheme(RadioButtonIOS); // @component-docs ignore-next-line\n\nconst RadioButtonIOSWithTheme = withTheme(RadioButtonIOS); // @component-docs ignore-next-line\n\nexport { RadioButtonIOSWithTheme as RadioButtonIOS };\n//# sourceMappingURL=RadioButtonIOS.js.map"]},"metadata":{},"sourceType":"module"}