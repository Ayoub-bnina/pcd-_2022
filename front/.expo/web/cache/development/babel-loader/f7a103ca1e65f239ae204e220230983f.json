{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"size\", \"style\", \"theme\", \"labelStyle\", \"color\"],\n    _excluded2 = [\"backgroundColor\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/colors\";\nimport getContrastingColor from \"../../utils/getContrastingColor\";\nvar defaultSize = 64;\n\nvar AvatarText = function AvatarText(_ref) {\n  var label = _ref.label,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? defaultSize : _ref$size,\n      style = _ref.style,\n      theme = _ref.theme,\n      labelStyle = _ref.labelStyle,\n      customColor = _ref.color,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      _ref2$backgroundColor = _ref2.backgroundColor,\n      backgroundColor = _ref2$backgroundColor === void 0 ? theme.colors.primary : _ref2$backgroundColor,\n      restStyle = _objectWithoutProperties(_ref2, _excluded2);\n\n  var textColor = customColor !== null && customColor !== void 0 ? customColor : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, styles.container, restStyle]\n  }, rest), React.createElement(Text, {\n    style: [styles.text, {\n      color: textColor,\n      fontSize: size / 2,\n      lineHeight: size\n    }, labelStyle],\n    numberOfLines: 1\n  }, label));\n};\n\nAvatarText.displayName = 'Avatar.Text';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});\nexport default withTheme(AvatarText);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Avatar/AvatarText.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Text","withTheme","white","getContrastingColor","defaultSize","AvatarText","label","size","style","theme","labelStyle","customColor","color","rest","StyleSheet","flatten","backgroundColor","colors","primary","restStyle","textColor","createElement","View","width","height","borderRadius","styles","container","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\nconst defaultSize = 64;\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  theme,\n  labelStyle,\n  color: customColor,\n  ...rest\n}) => {\n  const {\n    backgroundColor = theme.colors.primary,\n    ...restStyle\n  } = StyleSheet.flatten(style) || {};\n  const textColor = customColor !== null && customColor !== void 0 ? customColor : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor\n    }, styles.container, restStyle]\n  }, rest), /*#__PURE__*/React.createElement(Text, {\n    style: [styles.text, {\n      color: textColor,\n      fontSize: size / 2,\n      lineHeight: size\n    }, labelStyle],\n    numberOfLines: 1\n  }, label));\n};\n\nAvatarText.displayName = 'Avatar.Text';\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});\nexport default withTheme(AvatarText);\n//# sourceMappingURL=AvatarText.js.map"]},"metadata":{},"sourceType":"module"}