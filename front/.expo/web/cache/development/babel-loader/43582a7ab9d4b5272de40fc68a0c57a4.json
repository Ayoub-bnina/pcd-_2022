{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getStatusBarHeight, getBottomSpace } from 'react-native-iphone-x-helper';\nimport Surface from \"./Surface\";\nimport { useTheme } from \"../core/theming\";\nimport useAnimatedValue from \"../utils/useAnimatedValue\";\nvar DEFAULT_DURATION = 220;\nvar TOP_INSET = getStatusBarHeight(true);\nvar BOTTOM_INSET = getBottomSpace();\nexport default function Modal(_ref) {\n  var _ref$dismissable = _ref.dismissable,\n      dismissable = _ref$dismissable === void 0 ? true : _ref$dismissable,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible,\n      _ref$overlayAccessibi = _ref.overlayAccessibilityLabel,\n      overlayAccessibilityLabel = _ref$overlayAccessibi === void 0 ? 'Close modal' : _ref$overlayAccessibi,\n      onDismiss = _ref.onDismiss,\n      children = _ref.children,\n      contentContainerStyle = _ref.contentContainerStyle,\n      style = _ref.style;\n  var visibleRef = React.useRef(visible);\n  React.useEffect(function () {\n    visibleRef.current = visible;\n  });\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors,\n      animation = _useTheme.animation;\n\n  var opacity = useAnimatedValue(visible ? 1 : 0);\n\n  var _React$useState = React.useState(visible),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rendered = _React$useState2[0],\n      setRendered = _React$useState2[1];\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  var handleBack = function handleBack() {\n    if (dismissable) {\n      hideModal();\n    }\n\n    return true;\n  };\n\n  var subscription = React.useRef(undefined);\n\n  var showModal = function showModal() {\n    var _subscription$current;\n\n    if ((_subscription$current = subscription.current) !== null && _subscription$current !== void 0 && _subscription$current.remove) {\n      subscription.current.remove();\n    } else {\n      BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n\n    subscription.current = BackHandler.addEventListener('hardwareBackPress', handleBack);\n    var scale = animation.scale;\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  };\n\n  var hideModal = function hideModal() {\n    var _subscription$current2;\n\n    if ((_subscription$current2 = subscription.current) !== null && _subscription$current2 !== void 0 && _subscription$current2.remove) {\n      var _subscription$current3;\n\n      (_subscription$current3 = subscription.current) === null || _subscription$current3 === void 0 ? void 0 : _subscription$current3.remove();\n    } else {\n      BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n\n    var scale = animation.scale;\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start(function (_ref2) {\n      var finished = _ref2.finished;\n\n      if (!finished) {\n        return;\n      }\n\n      if (visible && onDismiss) {\n        onDismiss();\n      }\n\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  };\n\n  var prevVisible = React.useRef(null);\n  React.useEffect(function () {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n\n    prevVisible.current = visible;\n  });\n  if (!rendered) return null;\n  return React.createElement(Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: StyleSheet.absoluteFill,\n    onAccessibilityEscape: hideModal\n  }, React.createElement(TouchableWithoutFeedback, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? hideModal : undefined,\n    importantForAccessibility: \"no\"\n  }, React.createElement(Animated.View, {\n    style: [styles.backdrop, {\n      backgroundColor: colors.backdrop,\n      opacity: opacity\n    }]\n  })), React.createElement(View, {\n    style: [styles.wrapper, {\n      marginTop: TOP_INSET,\n      marginBottom: BOTTOM_INSET\n    }, style],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Surface, {\n    style: [{\n      opacity: opacity\n    }, styles.content, contentContainerStyle]\n  }, children)));\n}\nvar styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Modal.js"],"names":["React","getStatusBarHeight","getBottomSpace","Surface","useTheme","useAnimatedValue","DEFAULT_DURATION","TOP_INSET","BOTTOM_INSET","Modal","dismissable","visible","overlayAccessibilityLabel","onDismiss","children","contentContainerStyle","style","visibleRef","useRef","useEffect","current","colors","animation","opacity","useState","rendered","setRendered","handleBack","hideModal","subscription","undefined","showModal","_subscription$current","remove","BackHandler","removeEventListener","addEventListener","scale","Animated","timing","toValue","duration","easing","Easing","out","cubic","useNativeDriver","start","_subscription$current2","_subscription$current3","finished","prevVisible","createElement","View","pointerEvents","accessibilityViewIsModal","accessibilityLiveRegion","StyleSheet","absoluteFill","onAccessibilityEscape","TouchableWithoutFeedback","accessibilityLabel","accessibilityRole","disabled","onPress","importantForAccessibility","styles","backdrop","backgroundColor","wrapper","marginTop","marginBottom","content","create","flex","absoluteFillObject","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, BackHandler, Easing, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport { getStatusBarHeight, getBottomSpace } from 'react-native-iphone-x-helper';\nimport Surface from './Surface';\nimport { useTheme } from '../core/theming';\nimport useAnimatedValue from '../utils/useAnimatedValue';\nconst DEFAULT_DURATION = 220;\nconst TOP_INSET = getStatusBarHeight(true);\nconst BOTTOM_INSET = getBottomSpace();\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/modal.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showModal = () => setVisible(true);\n *   const hideModal = () => setVisible(false);\n *   const containerStyle = {backgroundColor: 'white', padding: 20};\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n *           <Text>Example Modal.  Click outside this area to dismiss.</Text>\n *         </Modal>\n *       </Portal>\n *       <Button style={{marginTop: 30}} onPress={showModal}>\n *         Show\n *       </Button>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nexport default function Modal({\n  dismissable = true,\n  visible = false,\n  overlayAccessibilityLabel = 'Close modal',\n  onDismiss,\n  children,\n  contentContainerStyle,\n  style\n}) {\n  const visibleRef = React.useRef(visible);\n  React.useEffect(() => {\n    visibleRef.current = visible;\n  });\n  const {\n    colors,\n    animation\n  } = useTheme();\n  const opacity = useAnimatedValue(visible ? 1 : 0);\n  const [rendered, setRendered] = React.useState(visible);\n\n  if (visible && !rendered) {\n    setRendered(true);\n  }\n\n  const handleBack = () => {\n    if (dismissable) {\n      hideModal();\n    }\n\n    return true;\n  };\n\n  const subscription = React.useRef(undefined);\n\n  const showModal = () => {\n    var _subscription$current;\n\n    if ((_subscription$current = subscription.current) !== null && _subscription$current !== void 0 && _subscription$current.remove) {\n      subscription.current.remove();\n    } else {\n      BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n\n    subscription.current = BackHandler.addEventListener('hardwareBackPress', handleBack);\n    const {\n      scale\n    } = animation;\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start();\n  };\n\n  const hideModal = () => {\n    var _subscription$current2;\n\n    if ((_subscription$current2 = subscription.current) !== null && _subscription$current2 !== void 0 && _subscription$current2.remove) {\n      var _subscription$current3;\n\n      (_subscription$current3 = subscription.current) === null || _subscription$current3 === void 0 ? void 0 : _subscription$current3.remove();\n    } else {\n      BackHandler.removeEventListener('hardwareBackPress', handleBack);\n    }\n\n    const {\n      scale\n    } = animation;\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: scale * DEFAULT_DURATION,\n      easing: Easing.out(Easing.cubic),\n      useNativeDriver: true\n    }).start(({\n      finished\n    }) => {\n      if (!finished) {\n        return;\n      }\n\n      if (visible && onDismiss) {\n        onDismiss();\n      }\n\n      if (visibleRef.current) {\n        showModal();\n      } else {\n        setRendered(false);\n      }\n    });\n  };\n\n  const prevVisible = React.useRef(null);\n  React.useEffect(() => {\n    if (prevVisible.current !== visible) {\n      if (visible) {\n        showModal();\n      } else {\n        hideModal();\n      }\n    }\n\n    prevVisible.current = visible;\n  });\n  if (!rendered) return null;\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: visible ? 'auto' : 'none',\n    accessibilityViewIsModal: true,\n    accessibilityLiveRegion: \"polite\",\n    style: StyleSheet.absoluteFill,\n    onAccessibilityEscape: hideModal\n  }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    accessibilityLabel: overlayAccessibilityLabel,\n    accessibilityRole: \"button\",\n    disabled: !dismissable,\n    onPress: dismissable ? hideModal : undefined,\n    importantForAccessibility: \"no\"\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.backdrop, {\n      backgroundColor: colors.backdrop,\n      opacity\n    }]\n  })), /*#__PURE__*/React.createElement(View, {\n    style: [styles.wrapper, {\n      marginTop: TOP_INSET,\n      marginBottom: BOTTOM_INSET\n    }, style],\n    pointerEvents: \"box-none\"\n  }, /*#__PURE__*/React.createElement(Surface, {\n    style: [{\n      opacity\n    }, styles.content, contentContainerStyle]\n  }, children)));\n}\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: { ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center'\n  },\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});\n//# sourceMappingURL=Modal.js.map"]},"metadata":{},"sourceType":"module"}