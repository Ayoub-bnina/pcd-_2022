{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"index\", \"total\", \"style\", \"theme\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { withTheme } from \"../../core/theming\";\nimport { grey200 } from \"../../styles/colors\";\n\nvar CardCover = function CardCover(_ref) {\n  var index = _ref.index,\n      total = _ref.total,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var roundness = theme.roundness;\n  var coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness\n    };\n  }\n\n  return React.createElement(View, {\n    style: [styles.container, coverStyle, style]\n  }, React.createElement(Image, _extends({}, rest, {\n    style: [styles.image, coverStyle]\n  })));\n};\n\nCardCover.displayName = 'Card.Cover';\nvar styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end'\n  }\n});\nexport default withTheme(CardCover);\nexport { CardCover };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Card/CardCover.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","withTheme","grey200","CardCover","index","total","style","theme","rest","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","createElement","View","styles","container","Image","image","displayName","StyleSheet","create","height","backgroundColor","overflow","flex","undefined","width","padding","justifyContent"],"mappings":";;;AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,SAAT;AACA,SAASC,OAAT;;AA2BA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAMZ;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,IACC;;AACJ,MACEC,SADF,GAEIF,KAFJ,CACEE,SADF;AAGA,MAAIC,UAAJ;;AAEA,MAAIN,KAAK,KAAK,CAAd,EAAiB;AACf,QAAIC,KAAK,KAAK,CAAd,EAAiB;AACfK,MAAAA,UAAU,GAAG;AACXC,QAAAA,YAAY,EAAEF;AADH,OAAb;AAGD,KAJD,MAIO;AACLC,MAAAA,UAAU,GAAG;AACXE,QAAAA,mBAAmB,EAAEH,SADV;AAEXI,QAAAA,oBAAoB,EAAEJ;AAFX,OAAb;AAID;AACF,GAXD,MAWO,IAAI,OAAOJ,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;AAC3DK,IAAAA,UAAU,GAAG;AACXI,MAAAA,sBAAsB,EAAEL;AADb,KAAb;AAGD;;AAED,SAAoBT,KAAK,CAACe,aAAN,CAAoBC,IAApB,EAA0B;AAC5CV,IAAAA,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmBR,UAAnB,EAA+BJ,KAA/B;AADqC,GAA1B,EAEJN,KAAK,CAACe,aAAN,CAAoBI,KAApB,EAA2BhC,QAAQ,CAAC,EAAD,EAAKqB,IAAL,EAAW;AAC5DF,IAAAA,KAAK,EAAE,CAACW,MAAM,CAACG,KAAR,EAAeV,UAAf;AADqD,GAAX,CAAnC,CAFI,CAApB;AAKD,CAlCD;;AAoCAP,SAAS,CAACkB,WAAV,GAAwB,YAAxB;AACA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,MAAM,EAAE,GADC;AAETC,IAAAA,eAAe,EAAEvB,OAFR;AAGTwB,IAAAA,QAAQ,EAAE;AAHD,GADoB;AAM/BN,EAAAA,KAAK,EAAE;AACLO,IAAAA,IAAI,EAAE,CADD;AAELH,IAAAA,MAAM,EAAEI,SAFH;AAGLC,IAAAA,KAAK,EAAED,SAHF;AAILE,IAAAA,OAAO,EAAE,EAJJ;AAKLC,IAAAA,cAAc,EAAE;AALX;AANwB,CAAlB,CAAf;AAcA,eAAe9B,SAAS,CAACE,SAAD,CAAxB;AAEA,SAASA,SAAT","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\n\n/**\n * A component to show a cover image inside a Card.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/card-cover.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://reactnative.dev/docs/image#props\n */\nconst CardCover = ({\n  index,\n  total,\n  style,\n  theme,\n  ...rest\n}) => {\n  const {\n    roundness\n  } = theme;\n  let coverStyle;\n\n  if (index === 0) {\n    if (total === 1) {\n      coverStyle = {\n        borderRadius: roundness\n      };\n    } else {\n      coverStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness\n      };\n    }\n  } else if (typeof total === 'number' && index === total - 1) {\n    coverStyle = {\n      borderBottomLeftRadius: roundness\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, coverStyle, style]\n  }, /*#__PURE__*/React.createElement(Image, _extends({}, rest, {\n    style: [styles.image, coverStyle]\n  })));\n};\n\nCardCover.displayName = 'Card.Cover';\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end'\n  }\n});\nexport default withTheme(CardCover); // @component-docs ignore-next-line\n\nexport { CardCover };\n//# sourceMappingURL=CardCover.js.map"]},"metadata":{},"sourceType":"module"}