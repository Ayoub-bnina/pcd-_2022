{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaConsumer } from 'react-native-safe-area-context';\nimport { StackActions, NavigationActions, SceneView } from 'react-navigation';\nimport { GestureHandlerRootView } from \"../GestureHandler\";\nimport CardStack from \"./CardStack\";\nimport KeyboardManager from \"../KeyboardManager\";\nimport HeaderContainer from \"../Header/HeaderContainer\";\nimport SafeAreaProviderCompat from \"../SafeAreaProviderCompat\";\nvar GestureHandlerWrapper = GestureHandlerRootView !== null && GestureHandlerRootView !== void 0 ? GestureHandlerRootView : View;\n\nvar isArrayEqual = function isArrayEqual(a, b) {\n  return a.length === b.length && a.every(function (it, index) {\n    return it === b[index];\n  });\n};\n\nvar StackView = function (_React$Component) {\n  _inherits(StackView, _React$Component);\n\n  var _super = _createSuper(StackView);\n\n  function StackView() {\n    var _this;\n\n    _classCallCheck(this, StackView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getGesturesEnabled\", function (_ref) {\n      var route = _ref.route;\n      var descriptor = _this.state.descriptors[route.key];\n\n      if (descriptor) {\n        var _descriptor$options3 = descriptor.options,\n            gestureEnabled = _descriptor$options3.gestureEnabled,\n            animationEnabled = _descriptor$options3.animationEnabled;\n\n        if (animationEnabled === false) {\n          return false;\n        }\n\n        return gestureEnabled !== undefined ? gestureEnabled : Platform.OS !== 'android';\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPreviousRoute\", function (_ref2) {\n      var route = _ref2.route;\n      var _this$state = _this.state,\n          closingRouteKeys = _this$state.closingRouteKeys,\n          replacingRouteKeys = _this$state.replacingRouteKeys;\n\n      var routes = _this.state.routes.filter(function (r) {\n        return r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key);\n      });\n\n      var index = routes.findIndex(function (r) {\n        return r.key === route.key;\n      });\n      return routes[index - 1];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderScene\", function (_ref3) {\n      var route = _ref3.route;\n      var descriptor = _this.state.descriptors[route.key] || _this.props.descriptors[route.key];\n\n      if (!descriptor) {\n        return null;\n      }\n\n      var navigation = descriptor.navigation,\n          getComponent = descriptor.getComponent;\n      var SceneComponent = getComponent();\n      return React.createElement(SceneView, {\n        screenProps: _this.props.screenProps,\n        navigation: navigation,\n        component: SceneComponent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderHeader\", function (props) {\n      return React.createElement(HeaderContainer, props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionComplete\", function () {\n      var _this$props2 = _this.props,\n          state = _this$props2.state,\n          navigation = _this$props2.navigation;\n\n      if (state.isTransitioning) {\n        navigation.dispatch(StackActions.completeTransition({\n          key: navigation.state.key,\n          toChildKey: state.routes[state.index].key\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenRoute\", function (_ref4) {\n      var route = _ref4.route;\n      var _this$props3 = _this.props,\n          state = _this$props3.state,\n          navigation = _this$props3.navigation;\n      var _this$state2 = _this.state,\n          closingRouteKeys = _this$state2.closingRouteKeys,\n          replacingRouteKeys = _this$state2.replacingRouteKeys;\n\n      _this.handleTransitionComplete();\n\n      if (closingRouteKeys.some(function (key) {\n        return key === route.key;\n      }) && replacingRouteKeys.every(function (key) {\n        return key !== route.key;\n      }) && !state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.dispatch(NavigationActions.navigate(route));\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.replacingRouteKeys.length ? state.routes.filter(function (r) {\n              return !state.replacingRouteKeys.includes(r.key);\n            }) : state.routes,\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            replacingRouteKeys: []\n          };\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseRoute\", function (_ref5) {\n      var route = _ref5.route;\n      var _this$props4 = _this.props,\n          state = _this$props4.state,\n          navigation = _this$props4.navigation;\n\n      if (state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.dispatch(StackActions.pop({\n          key: route.key,\n          prune: false\n        }));\n      } else {\n        _this.handleTransitionComplete();\n\n        _this.setState(function (state) {\n          return {\n            routes: state.routes.filter(function (r) {\n              return r.key !== route.key;\n            }),\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            })\n          };\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionStart\", function (_ref6, closing) {\n      var route = _ref6.route;\n\n      var _descriptor$options$o, _descriptor$options;\n\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key] || _this.state.descriptors[route.key];\n      descriptor === null || descriptor === void 0 ? void 0 : (_descriptor$options$o = (_descriptor$options = descriptor.options).onTransitionStart) === null || _descriptor$options$o === void 0 ? void 0 : _descriptor$options$o.call(_descriptor$options, {\n        closing: closing\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTransitionEnd\", function (_ref7, closing) {\n      var route = _ref7.route;\n\n      var _descriptor$options$o2, _descriptor$options2;\n\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key] || _this.state.descriptors[route.key];\n      descriptor === null || descriptor === void 0 ? void 0 : (_descriptor$options$o2 = (_descriptor$options2 = descriptor.options).onTransitionEnd) === null || _descriptor$options$o2 === void 0 ? void 0 : _descriptor$options$o2.call(_descriptor$options2, {\n        closing: closing\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(StackView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          state = _this$props.state,\n          navigation = _this$props.navigation,\n          keyboardHandlingEnabled = _this$props.keyboardHandlingEnabled,\n          _this$props$mode = _this$props.mode,\n          mode = _this$props$mode === void 0 ? 'card' : _this$props$mode,\n          _this$props$headerMod = _this$props.headerMode,\n          headerMode = _this$props$headerMod === void 0 ? mode === 'card' && Platform.OS === 'ios' ? 'float' : 'screen' : _this$props$headerMod,\n          _ = _this$props.descriptors,\n          rest = _objectWithoutProperties(_this$props, [\"state\", \"navigation\", \"keyboardHandlingEnabled\", \"mode\", \"headerMode\", \"descriptors\"]);\n\n      var _this$state3 = this.state,\n          routes = _this$state3.routes,\n          descriptors = _this$state3.descriptors,\n          openingRouteKeys = _this$state3.openingRouteKeys,\n          closingRouteKeys = _this$state3.closingRouteKeys;\n      return React.createElement(React.Fragment, null, React.createElement(GestureHandlerWrapper, {\n        style: styles.container\n      }, React.createElement(SafeAreaProviderCompat, null, React.createElement(SafeAreaConsumer, null, function (insets) {\n        return React.createElement(KeyboardManager, {\n          enabled: keyboardHandlingEnabled !== false\n        }, function (props) {\n          return React.createElement(CardStack, _extends({\n            mode: mode,\n            insets: insets,\n            getPreviousRoute: _this2.getPreviousRoute,\n            getGesturesEnabled: _this2.getGesturesEnabled,\n            routes: routes,\n            openingRouteKeys: openingRouteKeys,\n            closingRouteKeys: closingRouteKeys,\n            onOpenRoute: _this2.handleOpenRoute,\n            onCloseRoute: _this2.handleCloseRoute,\n            onTransitionStart: _this2.handleTransitionStart,\n            onTransitionEnd: _this2.handleTransitionEnd,\n            renderHeader: _this2.renderHeader,\n            renderScene: _this2.renderScene,\n            headerMode: headerMode,\n            state: state,\n            descriptors: descriptors\n          }, rest, props));\n        });\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(function (r) {\n        return r.key;\n      }), state.previousRoutes.map(function (r) {\n        return r.key;\n      }))) && state.routes.length) {\n        var _routes = state.routes;\n        var _previousRoutes = state.previousRoutes;\n        var _descriptors = props.descriptors;\n        var previousDescriptors = state.previousDescriptors;\n\n        if (props.descriptors !== state.previousDescriptors) {\n          _descriptors = state.routes.reduce(function (acc, route) {\n            acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n            return acc;\n          }, {});\n          previousDescriptors = props.descriptors;\n        }\n\n        if (props.state.routes !== state.previousRoutes) {\n          var map = props.state.routes.reduce(function (acc, route) {\n            acc[route.key] = route;\n            return acc;\n          }, {});\n          _routes = state.routes.map(function (route) {\n            return map[route.key] || route;\n          });\n          _previousRoutes = props.state.routes;\n        }\n\n        return {\n          routes: _routes,\n          previousRoutes: _previousRoutes,\n          descriptors: _descriptors,\n          previousDescriptors: previousDescriptors\n        };\n      }\n\n      var routes = props.state.index < props.state.routes.length - 1 ? props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n      var openingRouteKeys = state.openingRouteKeys,\n          closingRouteKeys = state.closingRouteKeys,\n          replacingRouteKeys = state.replacingRouteKeys,\n          previousRoutes = state.previousRoutes;\n      var previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n      var nextFocusedRoute = routes[routes.length - 1];\n\n      var isAnimationEnabled = function isAnimationEnabled(key) {\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return descriptor ? descriptor.options.animationEnabled !== false : true;\n      };\n\n      var getAnimationTypeForReplace = function getAnimationTypeForReplace(key) {\n        var _descriptor$options$a;\n\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return (_descriptor$options$a = descriptor.options.animationTypeForReplace) !== null && _descriptor$options$a !== void 0 ? _descriptor$options$a : 'push';\n      };\n\n      if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n        if (!previousRoutes.some(function (r) {\n          return r.key === nextFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n            openingRouteKeys = [].concat(_toConsumableArray(openingRouteKeys), [nextFocusedRoute.key]);\n            closingRouteKeys = closingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n\n            if (!routes.some(function (r) {\n              return r.key === previousFocusedRoute.key;\n            })) {\n              openingRouteKeys = openingRouteKeys.filter(function (key) {\n                return key !== previousFocusedRoute.key;\n              });\n\n              if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n                closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n                openingRouteKeys = openingRouteKeys.filter(function (key) {\n                  return key !== nextFocusedRoute.key;\n                });\n                routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n              } else {\n                replacingRouteKeys = [].concat(_toConsumableArray(replacingRouteKeys), [previousFocusedRoute.key]);\n                closingRouteKeys = closingRouteKeys.filter(function (key) {\n                  return key !== previousFocusedRoute.key;\n                });\n                routes = routes.slice();\n                routes.splice(routes.length - 1, 0, previousFocusedRoute);\n              }\n            }\n          }\n        } else if (!routes.some(function (r) {\n          return r.key === previousFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n            closingRouteKeys = [].concat(_toConsumableArray(closingRouteKeys), [previousFocusedRoute.key]);\n            openingRouteKeys = openingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            routes = [].concat(_toConsumableArray(routes), [previousFocusedRoute]);\n          }\n        } else {}\n      } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n        var _routes2;\n\n        routes = routes.slice();\n\n        (_routes2 = routes).splice.apply(_routes2, [routes.length - 1, 0].concat(_toConsumableArray(state.routes.filter(function (_ref8) {\n          var key = _ref8.key;\n          return isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false;\n        }))));\n      }\n\n      if (!routes.length) {\n        throw new Error('There should always be at least one route in the navigation state.');\n      }\n\n      var descriptors = routes.reduce(function (acc, route) {\n        acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n        return acc;\n      }, {});\n      return {\n        routes: routes,\n        previousRoutes: props.state.routes,\n        previousDescriptors: props.descriptors,\n        openingRouteKeys: openingRouteKeys,\n        closingRouteKeys: closingRouteKeys,\n        replacingRouteKeys: replacingRouteKeys,\n        descriptors: descriptors\n      };\n    }\n  }]);\n\n  return StackView;\n}(React.Component);\n\nexport { StackView as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-navigation-stack/lib/module/vendor/views/Stack/StackView.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","SafeAreaConsumer","StackActions","NavigationActions","SceneView","GestureHandlerRootView","CardStack","KeyboardManager","HeaderContainer","SafeAreaProviderCompat","GestureHandlerWrapper","View","isArrayEqual","a","b","every","it","index","StackView","args","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","route","descriptor","state","options","gestureEnabled","animationEnabled","undefined","Platform","OS","filter","r","includes","findIndex","props","navigation","getComponent","SceneComponent","createElement","screenProps","component","isTransitioning","dispatch","completeTransition","toChildKey","handleTransitionComplete","some","navigate","setState","pop","prune","closing","_descriptor$options$o","_descriptor$options","onTransitionStart","_descriptor$options$o2","_descriptor$options2","onTransitionEnd","_this$props","keyboardHandlingEnabled","mode","headerMode","_","rest","Fragment","style","styles","container","insets","enabled","getPreviousRoute","getGesturesEnabled","onOpenRoute","handleOpenRoute","onCloseRoute","handleCloseRoute","handleTransitionStart","handleTransitionEnd","renderHeader","renderScene","map","reduce","acc","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","getAnimationTypeForReplace","_descriptor$options$a","animationTypeForReplace","splice","Error","Component","StyleSheet","create","flex"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,wBAAT,CAAkCN,MAAlC,EAA0CO,QAA1C,EAAoD;AAAE,MAAIP,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAIJ,MAAM,GAAGY,6BAA6B,CAACR,MAAD,EAASO,QAAT,CAA1C;;AAA8D,MAAIN,GAAJ,EAASJ,CAAT;;AAAY,MAAIH,MAAM,CAACe,qBAAX,EAAkC;AAAE,QAAIC,gBAAgB,GAAGhB,MAAM,CAACe,qBAAP,CAA6BT,MAA7B,CAAvB;;AAA6D,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGa,gBAAgB,CAACX,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAAEI,MAAAA,GAAG,GAAGS,gBAAgB,CAACb,CAAD,CAAtB;AAA2B,UAAIU,QAAQ,CAACI,OAAT,CAAiBV,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAACP,MAAM,CAACQ,SAAP,CAAiBU,oBAAjB,CAAsCR,IAAtC,CAA2CJ,MAA3C,EAAmDC,GAAnD,CAAL,EAA8D;AAAUL,MAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAOL,MAAP;AAAgB;;AAE5e,SAASY,6BAAT,CAAuCR,MAAvC,EAA+CO,QAA/C,EAAyD;AAAE,MAAIP,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIiB,UAAU,GAAGnB,MAAM,CAACoB,IAAP,CAAYd,MAAZ,CAAjB;AAAsC,MAAIC,GAAJ,EAASJ,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgB,UAAU,CAACd,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEI,IAAAA,GAAG,GAAGY,UAAU,CAAChB,CAAD,CAAhB;AAAqB,QAAIU,QAAQ,CAACI,OAAT,CAAiBV,GAAjB,KAAyB,CAA7B,EAAgC;AAAUL,IAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;;AAAC,SAAOL,MAAP;AAAgB;;AAEnT,SAASmB,eAAT,CAAyBC,GAAzB,EAA8Bf,GAA9B,EAAmCgB,KAAnC,EAA0C;AAAE,MAAIhB,GAAG,IAAIe,GAAX,EAAgB;AAAEtB,IAAAA,MAAM,CAACwB,cAAP,CAAsBF,GAAtB,EAA2Bf,GAA3B,EAAgC;AAAEgB,MAAAA,KAAK,EAAEA,KAAT;AAAgBE,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEL,IAAAA,GAAG,CAACf,GAAD,CAAH,GAAWgB,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,OAAO,KAAKM,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,SAA1C,QAA2D,kBAA3D;AACA,SAASC,sBAAT;AACA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,OAAOC,eAAP;AACA,OAAOC,sBAAP;AACA,IAAMC,qBAAqB,GAAGL,sBAAsB,KAAK,IAA3B,IAAmCA,sBAAsB,KAAK,KAAK,CAAnE,GAAuEA,sBAAvE,GAAgGM,IAA9H;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUD,CAAC,CAACpC,MAAF,KAAaqC,CAAC,CAACrC,MAAf,IAAyBoC,CAAC,CAACE,KAAF,CAAQ,UAACC,EAAD,EAAKC,KAAL;AAAA,WAAeD,EAAE,KAAKF,CAAC,CAACG,KAAD,CAAvB;AAAA,GAAR,CAAnC;AAAA,CAArB;;IAEqBC,S;;;;;AACnB,uBAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACnB,oDAASA,IAAT;;AAEA1B,IAAAA,eAAe,gCAAO,OAAP,EAAgB;AAC7B2B,MAAAA,MAAM,EAAE,EADqB;AAE7BC,MAAAA,cAAc,EAAE,EAFa;AAG7BC,MAAAA,mBAAmB,EAAE,EAHQ;AAI7BC,MAAAA,gBAAgB,EAAE,EAJW;AAK7BC,MAAAA,gBAAgB,EAAE,EALW;AAM7BC,MAAAA,kBAAkB,EAAE,EANS;AAO7BC,MAAAA,WAAW,EAAE;AAPgB,KAAhB,CAAf;;AAUAjC,IAAAA,eAAe,gCAAO,oBAAP,EAA6B,gBAEtC;AAAA,UADJkC,KACI,QADJA,KACI;AACJ,UAAMC,UAAU,GAAG,MAAKC,KAAL,CAAWH,WAAX,CAAuBC,KAAK,CAAChD,GAA7B,CAAnB;;AAEA,UAAIiD,UAAJ,EAAgB;AACd,mCAGIA,UAAU,CAACE,OAHf;AAAA,YACEC,cADF,wBACEA,cADF;AAAA,YAEEC,gBAFF,wBAEEA,gBAFF;;AAKA,YAAIA,gBAAgB,KAAK,KAAzB,EAAgC;AAG9B,iBAAO,KAAP;AACD;;AAED,eAAOD,cAAc,KAAKE,SAAnB,GAA+BF,cAA/B,GAAgDG,QAAQ,CAACC,EAAT,KAAgB,SAAvE;AACD;;AAED,aAAO,KAAP;AACD,KArBc,CAAf;;AAuBA1C,IAAAA,eAAe,gCAAO,kBAAP,EAA2B,iBAEpC;AAAA,UADJkC,KACI,SADJA,KACI;AACJ,wBAGI,MAAKE,KAHT;AAAA,UACEL,gBADF,eACEA,gBADF;AAAA,UAEEC,kBAFF,eAEEA,kBAFF;;AAIA,UAAML,MAAM,GAAG,MAAKS,KAAL,CAAWT,MAAX,CAAkBgB,MAAlB,CAAyB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAAC1D,GAAF,KAAUgD,KAAK,CAAChD,GAAhB,IAAuB,CAAC6C,gBAAgB,CAACc,QAAjB,CAA0BD,CAAC,CAAC1D,GAA5B,CAAD,IAAqC,CAAC8C,kBAAkB,CAACa,QAAnB,CAA4BD,CAAC,CAAC1D,GAA9B,CAAjE;AAAA,OAA1B,CAAf;;AACA,UAAMsC,KAAK,GAAGG,MAAM,CAACmB,SAAP,CAAiB,UAAAF,CAAC;AAAA,eAAIA,CAAC,CAAC1D,GAAF,KAAUgD,KAAK,CAAChD,GAApB;AAAA,OAAlB,CAAd;AACA,aAAOyC,MAAM,CAACH,KAAK,GAAG,CAAT,CAAb;AACD,KAVc,CAAf;;AAYAxB,IAAAA,eAAe,gCAAO,aAAP,EAAsB,iBAE/B;AAAA,UADJkC,KACI,SADJA,KACI;AACJ,UAAMC,UAAU,GAAG,MAAKC,KAAL,CAAWH,WAAX,CAAuBC,KAAK,CAAChD,GAA7B,KAAqC,MAAK6D,KAAL,CAAWd,WAAX,CAAuBC,KAAK,CAAChD,GAA7B,CAAxD;;AAEA,UAAI,CAACiD,UAAL,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,UACEa,UADF,GAGIb,UAHJ,CACEa,UADF;AAAA,UAEEC,YAFF,GAGId,UAHJ,CAEEc,YAFF;AAIA,UAAMC,cAAc,GAAGD,YAAY,EAAnC;AACA,aAAoB1C,KAAK,CAAC4C,aAAN,CAAoBxC,SAApB,EAA+B;AACjDyC,QAAAA,WAAW,EAAE,MAAKL,KAAL,CAAWK,WADyB;AAEjDJ,QAAAA,UAAU,EAAEA,UAFqC;AAGjDK,QAAAA,SAAS,EAAEH;AAHsC,OAA/B,CAApB;AAKD,KAnBc,CAAf;;AAqBAlD,IAAAA,eAAe,gCAAO,cAAP,EAAuB,UAAA+C,KAAK,EAAI;AAC7C,aAAoBxC,KAAK,CAAC4C,aAAN,CAAoBpC,eAApB,EAAqCgC,KAArC,CAApB;AACD,KAFc,CAAf;;AAIA/C,IAAAA,eAAe,gCAAO,0BAAP,EAAmC,YAAM;AACtD,yBAGI,MAAK+C,KAHT;AAAA,UACEX,KADF,gBACEA,KADF;AAAA,UAEEY,UAFF,gBAEEA,UAFF;;AAKA,UAAIZ,KAAK,CAACkB,eAAV,EAA2B;AACzBN,QAAAA,UAAU,CAACO,QAAX,CAAoB9C,YAAY,CAAC+C,kBAAb,CAAgC;AAClDtE,UAAAA,GAAG,EAAE8D,UAAU,CAACZ,KAAX,CAAiBlD,GAD4B;AAElDuE,UAAAA,UAAU,EAAErB,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACZ,KAAnB,EAA0BtC;AAFY,SAAhC,CAApB;AAID;AACF,KAZc,CAAf;;AAcAc,IAAAA,eAAe,gCAAO,iBAAP,EAA0B,iBAEnC;AAAA,UADJkC,KACI,SADJA,KACI;AACJ,yBAGI,MAAKa,KAHT;AAAA,UACEX,KADF,gBACEA,KADF;AAAA,UAEEY,UAFF,gBAEEA,UAFF;AAIA,yBAGI,MAAKZ,KAHT;AAAA,UACEL,gBADF,gBACEA,gBADF;AAAA,UAEEC,kBAFF,gBAEEA,kBAFF;;AAIA,YAAK0B,wBAAL;;AAEA,UAAI3B,gBAAgB,CAAC4B,IAAjB,CAAsB,UAAAzE,GAAG;AAAA,eAAIA,GAAG,KAAKgD,KAAK,CAAChD,GAAlB;AAAA,OAAzB,KAAmD8C,kBAAkB,CAACV,KAAnB,CAAyB,UAAApC,GAAG;AAAA,eAAIA,GAAG,KAAKgD,KAAK,CAAChD,GAAlB;AAAA,OAA5B,CAAnD,IAAyG,CAACkD,KAAK,CAACT,MAAN,CAAagC,IAAb,CAAkB,UAAAf,CAAC;AAAA,eAAIA,CAAC,CAAC1D,GAAF,KAAUgD,KAAK,CAAChD,GAApB;AAAA,OAAnB,CAA9G,EAA2J;AAGzJ8D,QAAAA,UAAU,CAACO,QAAX,CAAoB7C,iBAAiB,CAACkD,QAAlB,CAA2B1B,KAA3B,CAApB;AACD,OAJD,MAIO;AACL,cAAK2B,QAAL,CAAc,UAAAzB,KAAK;AAAA,iBAAK;AACtBT,YAAAA,MAAM,EAAES,KAAK,CAACJ,kBAAN,CAAyBhD,MAAzB,GAAkCoD,KAAK,CAACT,MAAN,CAAagB,MAAb,CAAoB,UAAAC,CAAC;AAAA,qBAAI,CAACR,KAAK,CAACJ,kBAAN,CAAyBa,QAAzB,CAAkCD,CAAC,CAAC1D,GAApC,CAAL;AAAA,aAArB,CAAlC,GAAwGkD,KAAK,CAACT,MADhG;AAEtBG,YAAAA,gBAAgB,EAAEM,KAAK,CAACN,gBAAN,CAAuBa,MAAvB,CAA8B,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAKgD,KAAK,CAAChD,GAAlB;AAAA,aAAjC,CAFI;AAGtB6C,YAAAA,gBAAgB,EAAEK,KAAK,CAACL,gBAAN,CAAuBY,MAAvB,CAA8B,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAKgD,KAAK,CAAChD,GAAlB;AAAA,aAAjC,CAHI;AAItB8C,YAAAA,kBAAkB,EAAE;AAJE,WAAL;AAAA,SAAnB;AAMD;AACF,KAzBc,CAAf;;AA2BAhC,IAAAA,eAAe,gCAAO,kBAAP,EAA2B,iBAEpC;AAAA,UADJkC,KACI,SADJA,KACI;AACJ,yBAGI,MAAKa,KAHT;AAAA,UACEX,KADF,gBACEA,KADF;AAAA,UAEEY,UAFF,gBAEEA,UAFF;;AAKA,UAAIZ,KAAK,CAACT,MAAN,CAAagC,IAAb,CAAkB,UAAAf,CAAC;AAAA,eAAIA,CAAC,CAAC1D,GAAF,KAAUgD,KAAK,CAAChD,GAApB;AAAA,OAAnB,CAAJ,EAAiD;AAK/C8D,QAAAA,UAAU,CAACO,QAAX,CAAoB9C,YAAY,CAACqD,GAAb,CAAiB;AACnC5E,UAAAA,GAAG,EAAEgD,KAAK,CAAChD,GADwB;AAEnC6E,UAAAA,KAAK,EAAE;AAF4B,SAAjB,CAApB;AAID,OATD,MASO;AACL,cAAKL,wBAAL;;AAEA,cAAKG,QAAL,CAAc,UAAAzB,KAAK;AAAA,iBAAK;AACtBT,YAAAA,MAAM,EAAES,KAAK,CAACT,MAAN,CAAagB,MAAb,CAAoB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC1D,GAAF,KAAUgD,KAAK,CAAChD,GAApB;AAAA,aAArB,CADc;AAEtB4C,YAAAA,gBAAgB,EAAEM,KAAK,CAACN,gBAAN,CAAuBa,MAAvB,CAA8B,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAKgD,KAAK,CAAChD,GAAlB;AAAA,aAAjC,CAFI;AAGtB6C,YAAAA,gBAAgB,EAAEK,KAAK,CAACL,gBAAN,CAAuBY,MAAvB,CAA8B,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAKgD,KAAK,CAAChD,GAAlB;AAAA,aAAjC;AAHI,WAAL;AAAA,SAAnB;AAKD;AACF,KA1Bc,CAAf;;AA4BAc,IAAAA,eAAe,gCAAO,uBAAP,EAAgC,iBAE5CgE,OAF4C,EAEhC;AAAA,UADb9B,KACa,SADbA,KACa;;AACb,UAAI+B,qBAAJ,EAA2BC,mBAA3B;;AAEA,UACEjC,WADF,GAEI,MAAKc,KAFT,CACEd,WADF;AAGA,UAAME,UAAU,GAAGF,WAAW,CAACC,KAAK,CAAChD,GAAP,CAAX,IAA0B,MAAKkD,KAAL,CAAWH,WAAX,CAAuBC,KAAK,CAAChD,GAA7B,CAA7C;AACAiD,MAAAA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwD,CAAC8B,qBAAqB,GAAG,CAACC,mBAAmB,GAAG/B,UAAU,CAACE,OAAlC,EAA2C8B,iBAApE,MAA2F,IAA3F,IAAmGF,qBAAqB,KAAK,KAAK,CAAlI,GAAsI,KAAK,CAA3I,GAA+IA,qBAAqB,CAAC5E,IAAtB,CAA2B6E,mBAA3B,EAAgD;AACrPF,QAAAA,OAAO,EAAPA;AADqP,OAAhD,CAAvM;AAGD,KAZc,CAAf;;AAcAhE,IAAAA,eAAe,gCAAO,qBAAP,EAA8B,iBAE1CgE,OAF0C,EAE9B;AAAA,UADb9B,KACa,SADbA,KACa;;AACb,UAAIkC,sBAAJ,EAA4BC,oBAA5B;;AAEA,UACEpC,WADF,GAEI,MAAKc,KAFT,CACEd,WADF;AAGA,UAAME,UAAU,GAAGF,WAAW,CAACC,KAAK,CAAChD,GAAP,CAAX,IAA0B,MAAKkD,KAAL,CAAWH,WAAX,CAAuBC,KAAK,CAAChD,GAA7B,CAA7C;AACAiD,MAAAA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwD,CAACiC,sBAAsB,GAAG,CAACC,oBAAoB,GAAGlC,UAAU,CAACE,OAAnC,EAA4CiC,eAAtE,MAA2F,IAA3F,IAAmGF,sBAAsB,KAAK,KAAK,CAAnI,GAAuI,KAAK,CAA5I,GAAgJA,sBAAsB,CAAC/E,IAAvB,CAA4BgF,oBAA5B,EAAkD;AACxPL,QAAAA,OAAO,EAAPA;AADwP,OAAlD,CAAxM;AAGD,KAZc,CAAf;;AA5JmB;AAyKpB;;;;WA6ID,kBAAS;AAAA;;AACD,UAAAO,WAAW,GAAG,KAAKxB,KAAnB;AAAA,UAEJX,KAFI,GAUFmC,WAVE,CAEJnC,KAFI;AAAA,UAIJY,UAJI,GAUFuB,WAVE,CAIJvB,UAJI;AAAA,UAKJwB,uBALI,GAUFD,WAVE,CAKJC,uBALI;AAAA,6BAUFD,WAVE,CAMJE,IANI;AAAA,UAMJA,IANI,iCAMG,MANH;AAAA,kCAUFF,WAVE,CAOJG,UAPI;AAAA,UAOJA,UAPI,sCAOSD,IAAI,KAAK,MAAT,IAAmBhC,QAAQ,CAACC,EAAT,KAAgB,KAAnC,GAA2C,OAA3C,GAAqD,QAP9D;AAAA,UASSiC,CATT,GAUFJ,WAVE,CASJtC,WATI;AAAA,UAWA2C,IAXA,GAWOrF,wBAAwB,CAACgF,WAAD,EAAc,CAAC,OAAD,EAAU,YAAV,EAAwB,yBAAxB,EAAmD,MAAnD,EAA2D,YAA3D,EAAyE,aAAzE,CAAd,CAX/B;;AAaN,yBAKI,KAAKnC,KALT;AAAA,UACET,MADF,gBACEA,MADF;AAAA,UAEEM,WAFF,gBAEEA,WAFF;AAAA,UAGEH,gBAHF,gBAGEA,gBAHF;AAAA,UAIEC,gBAJF,gBAIEA,gBAJF;AAMA,aAAoBxB,KAAK,CAAC4C,aAAN,CAAoB5C,KAAK,CAACsE,QAA1B,EAAoC,IAApC,EAAuDtE,KAAK,CAAC4C,aAAN,CAAoBlC,qBAApB,EAA2C;AACpH6D,QAAAA,KAAK,EAAEC,MAAM,CAACC;AADsG,OAA3C,EAE3DzE,KAAK,CAAC4C,aAAN,CAAoBnC,sBAApB,EAA4C,IAA5C,EAA+DT,KAAK,CAAC4C,aAAN,CAAoB3C,gBAApB,EAAsC,IAAtC,EAA4C,UAAAyE,MAAM;AAAA,eAAiB1E,KAAK,CAAC4C,aAAN,CAAoBrC,eAApB,EAAqC;AACrLoE,UAAAA,OAAO,EAAEV,uBAAuB,KAAK;AADgJ,SAArC,EAE/I,UAAAzB,KAAK;AAAA,iBAAiBxC,KAAK,CAAC4C,aAAN,CAAoBtC,SAApB,EAA+BnC,QAAQ,CAAC;AAC/D+F,YAAAA,IAAI,EAAEA,IADyD;AAE/DQ,YAAAA,MAAM,EAAEA,MAFuD;AAG/DE,YAAAA,gBAAgB,EAAE,MAAI,CAACA,gBAHwC;AAI/DC,YAAAA,kBAAkB,EAAE,MAAI,CAACA,kBAJsC;AAK/DzD,YAAAA,MAAM,EAAEA,MALuD;AAM/DG,YAAAA,gBAAgB,EAAEA,gBAN6C;AAO/DC,YAAAA,gBAAgB,EAAEA,gBAP6C;AAQ/DsD,YAAAA,WAAW,EAAE,MAAI,CAACC,eAR6C;AAS/DC,YAAAA,YAAY,EAAE,MAAI,CAACC,gBAT4C;AAU/DrB,YAAAA,iBAAiB,EAAE,MAAI,CAACsB,qBAVuC;AAW/DnB,YAAAA,eAAe,EAAE,MAAI,CAACoB,mBAXyC;AAY/DC,YAAAA,YAAY,EAAE,MAAI,CAACA,YAZ4C;AAa/DC,YAAAA,WAAW,EAAE,MAAI,CAACA,WAb6C;AAc/DlB,YAAAA,UAAU,EAAEA,UAdmD;AAe/DtC,YAAAA,KAAK,EAAEA,KAfwD;AAgB/DH,YAAAA,WAAW,EAAEA;AAhBkD,WAAD,EAiB7D2C,IAjB6D,EAiBvD7B,KAjBuD,CAAvC,CAAjB;AAAA,SAF0I,CAAjB;AAAA,OAAlD,CAA/D,CAF2D,CAAvD,CAApB;AAsBD;;;WArLD,kCAAgCA,KAAhC,EAAuCX,KAAvC,EAA8C;AAE5C,UAAI,CAACW,KAAK,CAACX,KAAN,CAAYT,MAAZ,KAAuBS,KAAK,CAACR,cAA7B,IAA+CT,YAAY,CAAC4B,KAAK,CAACX,KAAN,CAAYT,MAAZ,CAAmBkE,GAAnB,CAAuB,UAAAjD,CAAC;AAAA,eAAIA,CAAC,CAAC1D,GAAN;AAAA,OAAxB,CAAD,EAAqCkD,KAAK,CAACR,cAAN,CAAqBiE,GAArB,CAAyB,UAAAjD,CAAC;AAAA,eAAIA,CAAC,CAAC1D,GAAN;AAAA,OAA1B,CAArC,CAA5D,KAA2IkD,KAAK,CAACT,MAAN,CAAa3C,MAA5J,EAAoK;AAClK,YAAI2C,OAAM,GAAGS,KAAK,CAACT,MAAnB;AACA,YAAIC,eAAc,GAAGQ,KAAK,CAACR,cAA3B;AACA,YAAIK,YAAW,GAAGc,KAAK,CAACd,WAAxB;AACA,YAAIJ,mBAAmB,GAAGO,KAAK,CAACP,mBAAhC;;AAEA,YAAIkB,KAAK,CAACd,WAAN,KAAsBG,KAAK,CAACP,mBAAhC,EAAqD;AACnDI,UAAAA,YAAW,GAAGG,KAAK,CAACT,MAAN,CAAamE,MAAb,CAAoB,UAACC,GAAD,EAAM7D,KAAN,EAAgB;AAChD6D,YAAAA,GAAG,CAAC7D,KAAK,CAAChD,GAAP,CAAH,GAAiB6D,KAAK,CAACd,WAAN,CAAkBC,KAAK,CAAChD,GAAxB,KAAgCkD,KAAK,CAACH,WAAN,CAAkBC,KAAK,CAAChD,GAAxB,CAAjD;AACA,mBAAO6G,GAAP;AACD,WAHa,EAGX,EAHW,CAAd;AAIAlE,UAAAA,mBAAmB,GAAGkB,KAAK,CAACd,WAA5B;AACD;;AAED,YAAIc,KAAK,CAACX,KAAN,CAAYT,MAAZ,KAAuBS,KAAK,CAACR,cAAjC,EAAiD;AAE/C,cAAMiE,GAAG,GAAG9C,KAAK,CAACX,KAAN,CAAYT,MAAZ,CAAmBmE,MAAnB,CAA0B,UAACC,GAAD,EAAM7D,KAAN,EAAgB;AACpD6D,YAAAA,GAAG,CAAC7D,KAAK,CAAChD,GAAP,CAAH,GAAiBgD,KAAjB;AACA,mBAAO6D,GAAP;AACD,WAHW,EAGT,EAHS,CAAZ;AAIApE,UAAAA,OAAM,GAAGS,KAAK,CAACT,MAAN,CAAakE,GAAb,CAAiB,UAAA3D,KAAK;AAAA,mBAAI2D,GAAG,CAAC3D,KAAK,CAAChD,GAAP,CAAH,IAAkBgD,KAAtB;AAAA,WAAtB,CAAT;AACAN,UAAAA,eAAc,GAAGmB,KAAK,CAACX,KAAN,CAAYT,MAA7B;AACD;;AAED,eAAO;AACLA,UAAAA,MAAM,EAANA,OADK;AAELC,UAAAA,cAAc,EAAdA,eAFK;AAGLK,UAAAA,WAAW,EAAXA,YAHK;AAILJ,UAAAA,mBAAmB,EAAnBA;AAJK,SAAP;AAMD;;AAID,UAAIF,MAAM,GAAGoB,KAAK,CAACX,KAAN,CAAYZ,KAAZ,GAAoBuB,KAAK,CAACX,KAAN,CAAYT,MAAZ,CAAmB3C,MAAnB,GAA4B,CAAhD,GAEb+D,KAAK,CAACX,KAAN,CAAYT,MAAZ,CAAmBqE,KAAnB,CAAyB,CAAzB,EAA4BjD,KAAK,CAACX,KAAN,CAAYZ,KAAZ,GAAoB,CAAhD,CAFa,GAEwCuB,KAAK,CAACX,KAAN,CAAYT,MAFjE;AAIA,UACEG,gBADF,GAKIM,KALJ,CACEN,gBADF;AAAA,UAEEC,gBAFF,GAKIK,KALJ,CAEEL,gBAFF;AAAA,UAGEC,kBAHF,GAKII,KALJ,CAGEJ,kBAHF;AAAA,UAIEJ,cAJF,GAKIQ,KALJ,CAIER,cAJF;AAMA,UAAMqE,oBAAoB,GAAGrE,cAAc,CAACA,cAAc,CAAC5C,MAAf,GAAwB,CAAzB,CAA3C;AACA,UAAMkH,gBAAgB,GAAGvE,MAAM,CAACA,MAAM,CAAC3C,MAAP,GAAgB,CAAjB,CAA/B;;AAEA,UAAMmH,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAjH,GAAG,EAAI;AAChC,YAAMiD,UAAU,GAAGY,KAAK,CAACd,WAAN,CAAkB/C,GAAlB,KAA0BkD,KAAK,CAACH,WAAN,CAAkB/C,GAAlB,CAA7C;AACA,eAAOiD,UAAU,GAAGA,UAAU,CAACE,OAAX,CAAmBE,gBAAnB,KAAwC,KAA3C,GAAmD,IAApE;AACD,OAHD;;AAKA,UAAM6D,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAlH,GAAG,EAAI;AACxC,YAAImH,qBAAJ;;AAEA,YAAMlE,UAAU,GAAGY,KAAK,CAACd,WAAN,CAAkB/C,GAAlB,KAA0BkD,KAAK,CAACH,WAAN,CAAkB/C,GAAlB,CAA7C;AACA,eAAO,CAACmH,qBAAqB,GAAGlE,UAAU,CAACE,OAAX,CAAmBiE,uBAA5C,MAAyE,IAAzE,IAAiFD,qBAAqB,KAAK,KAAK,CAAhH,GAAoHA,qBAApH,GAA4I,MAAnJ;AACD,OALD;;AAOA,UAAIJ,oBAAoB,IAAIA,oBAAoB,CAAC/G,GAArB,KAA6BgH,gBAAgB,CAAChH,GAA1E,EAA+E;AAG7E,YAAI,CAAC0C,cAAc,CAAC+B,IAAf,CAAoB,UAAAf,CAAC;AAAA,iBAAIA,CAAC,CAAC1D,GAAF,KAAUgH,gBAAgB,CAAChH,GAA/B;AAAA,SAArB,CAAL,EAA+D;AAG7D,cAAIiH,kBAAkB,CAACD,gBAAgB,CAAChH,GAAlB,CAAlB,IAA4C,CAAC4C,gBAAgB,CAACe,QAAjB,CAA0BqD,gBAAgB,CAAChH,GAA3C,CAAjD,EAAkG;AAGhG4C,YAAAA,gBAAgB,gCAAOA,gBAAP,IAAyBoE,gBAAgB,CAAChH,GAA1C,EAAhB;AACA6C,YAAAA,gBAAgB,GAAGA,gBAAgB,CAACY,MAAjB,CAAwB,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAKgH,gBAAgB,CAAChH,GAA7B;AAAA,aAA3B,CAAnB;AACA8C,YAAAA,kBAAkB,GAAGA,kBAAkB,CAACW,MAAnB,CAA0B,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAKgH,gBAAgB,CAAChH,GAA7B;AAAA,aAA7B,CAArB;;AAEA,gBAAI,CAACyC,MAAM,CAACgC,IAAP,CAAY,UAAAf,CAAC;AAAA,qBAAIA,CAAC,CAAC1D,GAAF,KAAU+G,oBAAoB,CAAC/G,GAAnC;AAAA,aAAb,CAAL,EAA2D;AAEzD4C,cAAAA,gBAAgB,GAAGA,gBAAgB,CAACa,MAAjB,CAAwB,UAAAzD,GAAG;AAAA,uBAAIA,GAAG,KAAK+G,oBAAoB,CAAC/G,GAAjC;AAAA,eAA3B,CAAnB;;AAEA,kBAAIkH,0BAA0B,CAACF,gBAAgB,CAAChH,GAAlB,CAA1B,KAAqD,KAAzD,EAAgE;AAC9D6C,gBAAAA,gBAAgB,gCAAOA,gBAAP,IAAyBkE,oBAAoB,CAAC/G,GAA9C,EAAhB;AAIA4C,gBAAAA,gBAAgB,GAAGA,gBAAgB,CAACa,MAAjB,CAAwB,UAAAzD,GAAG;AAAA,yBAAIA,GAAG,KAAKgH,gBAAgB,CAAChH,GAA7B;AAAA,iBAA3B,CAAnB;AAEAyC,gBAAAA,MAAM,gCAAOA,MAAP,IAAesE,oBAAf,EAAN;AACD,eARD,MAQO;AACLjE,gBAAAA,kBAAkB,gCAAOA,kBAAP,IAA2BiE,oBAAoB,CAAC/G,GAAhD,EAAlB;AACA6C,gBAAAA,gBAAgB,GAAGA,gBAAgB,CAACY,MAAjB,CAAwB,UAAAzD,GAAG;AAAA,yBAAIA,GAAG,KAAK+G,oBAAoB,CAAC/G,GAAjC;AAAA,iBAA3B,CAAnB;AAIAyC,gBAAAA,MAAM,GAAGA,MAAM,CAACqE,KAAP,EAAT;AACArE,gBAAAA,MAAM,CAAC4E,MAAP,CAAc5E,MAAM,CAAC3C,MAAP,GAAgB,CAA9B,EAAiC,CAAjC,EAAoCiH,oBAApC;AACD;AACF;AACF;AACF,SAjCD,MAiCO,IAAI,CAACtE,MAAM,CAACgC,IAAP,CAAY,UAAAf,CAAC;AAAA,iBAAIA,CAAC,CAAC1D,GAAF,KAAU+G,oBAAoB,CAAC/G,GAAnC;AAAA,SAAb,CAAL,EAA2D;AAEhE,cAAIiH,kBAAkB,CAACF,oBAAoB,CAAC/G,GAAtB,CAAlB,IAAgD,CAAC6C,gBAAgB,CAACc,QAAjB,CAA0BoD,oBAAoB,CAAC/G,GAA/C,CAArD,EAA0G;AACxG6C,YAAAA,gBAAgB,gCAAOA,gBAAP,IAAyBkE,oBAAoB,CAAC/G,GAA9C,EAAhB;AAGA4C,YAAAA,gBAAgB,GAAGA,gBAAgB,CAACa,MAAjB,CAAwB,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAK+G,oBAAoB,CAAC/G,GAAjC;AAAA,aAA3B,CAAnB;AACA8C,YAAAA,kBAAkB,GAAGA,kBAAkB,CAACW,MAAnB,CAA0B,UAAAzD,GAAG;AAAA,qBAAIA,GAAG,KAAK+G,oBAAoB,CAAC/G,GAAjC;AAAA,aAA7B,CAArB;AAEAyC,YAAAA,MAAM,gCAAOA,MAAP,IAAesE,oBAAf,EAAN;AACD;AACF,SAXM,MAWA,CAGN;AACF,OAnDD,MAmDO,IAAIjE,kBAAkB,CAAChD,MAAnB,IAA6B+C,gBAAgB,CAAC/C,MAAlD,EAA0D;AAAA;;AAE/D2C,QAAAA,MAAM,GAAGA,MAAM,CAACqE,KAAP,EAAT;;AACA,oBAAArE,MAAM,EAAC4E,MAAP,kBAAc5E,MAAM,CAAC3C,MAAP,GAAgB,CAA9B,EAAiC,CAAjC,4BAAuCoD,KAAK,CAACT,MAAN,CAAagB,MAAb,CAAoB;AAAA,cACzDzD,GADyD,SACzDA,GADyD;AAAA,iBAErDiH,kBAAkB,CAACjH,GAAD,CAAlB,GAA0B8C,kBAAkB,CAACa,QAAnB,CAA4B3D,GAA5B,KAAoC6C,gBAAgB,CAACc,QAAjB,CAA0B3D,GAA1B,CAA9D,GAA+F,KAF1C;AAAA,SAApB,CAAvC;AAGD;;AAED,UAAI,CAACyC,MAAM,CAAC3C,MAAZ,EAAoB;AAClB,cAAM,IAAIwH,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,UAAMvE,WAAW,GAAGN,MAAM,CAACmE,MAAP,CAAc,UAACC,GAAD,EAAM7D,KAAN,EAAgB;AAChD6D,QAAAA,GAAG,CAAC7D,KAAK,CAAChD,GAAP,CAAH,GAAiB6D,KAAK,CAACd,WAAN,CAAkBC,KAAK,CAAChD,GAAxB,KAAgCkD,KAAK,CAACH,WAAN,CAAkBC,KAAK,CAAChD,GAAxB,CAAjD;AACA,eAAO6G,GAAP;AACD,OAHmB,EAGjB,EAHiB,CAApB;AAIA,aAAO;AACLpE,QAAAA,MAAM,EAANA,MADK;AAELC,QAAAA,cAAc,EAAEmB,KAAK,CAACX,KAAN,CAAYT,MAFvB;AAGLE,QAAAA,mBAAmB,EAAEkB,KAAK,CAACd,WAHtB;AAILH,QAAAA,gBAAgB,EAAhBA,gBAJK;AAKLC,QAAAA,gBAAgB,EAAhBA,gBALK;AAMLC,QAAAA,kBAAkB,EAAlBA,kBANK;AAOLC,QAAAA,WAAW,EAAXA;AAPK,OAAP;AASD;;;;EArToC1B,KAAK,CAACkG,S;;SAAxBhF,S;AAoWrB,IAAMsD,MAAM,GAAG2B,UAAU,CAACC,MAAX,CAAkB;AAC/B3B,EAAAA,SAAS,EAAE;AACT4B,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { View, Platform, StyleSheet } from 'react-native';\nimport { SafeAreaConsumer } from 'react-native-safe-area-context';\nimport { StackActions, NavigationActions, SceneView } from 'react-navigation';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport CardStack from './CardStack';\nimport KeyboardManager from '../KeyboardManager';\nimport HeaderContainer from '../Header/HeaderContainer';\nimport SafeAreaProviderCompat from '../SafeAreaProviderCompat';\nconst GestureHandlerWrapper = GestureHandlerRootView !== null && GestureHandlerRootView !== void 0 ? GestureHandlerRootView : View;\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\n\nconst isArrayEqual = (a, b) => a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport default class StackView extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n\n    _defineProperty(this, \"getGesturesEnabled\", ({\n      route\n    }) => {\n      const descriptor = this.state.descriptors[route.key];\n\n      if (descriptor) {\n        const {\n          gestureEnabled,\n          animationEnabled\n        } = descriptor.options;\n\n        if (animationEnabled === false) {\n          // When animation is disabled, also disable gestures\n          // The gesture to dismiss a route will look weird when not animated\n          return false;\n        }\n\n        return gestureEnabled !== undefined ? gestureEnabled : Platform.OS !== 'android';\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"getPreviousRoute\", ({\n      route\n    }) => {\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      const routes = this.state.routes.filter(r => r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key));\n      const index = routes.findIndex(r => r.key === route.key);\n      return routes[index - 1];\n    });\n\n    _defineProperty(this, \"renderScene\", ({\n      route\n    }) => {\n      const descriptor = this.state.descriptors[route.key] || this.props.descriptors[route.key];\n\n      if (!descriptor) {\n        return null;\n      }\n\n      const {\n        navigation,\n        getComponent\n      } = descriptor;\n      const SceneComponent = getComponent();\n      return /*#__PURE__*/React.createElement(SceneView, {\n        screenProps: this.props.screenProps,\n        navigation: navigation,\n        component: SceneComponent\n      });\n    });\n\n    _defineProperty(this, \"renderHeader\", props => {\n      return /*#__PURE__*/React.createElement(HeaderContainer, props);\n    });\n\n    _defineProperty(this, \"handleTransitionComplete\", () => {\n      const {\n        state,\n        navigation\n      } = this.props;\n\n      if (state.isTransitioning) {\n        navigation.dispatch(StackActions.completeTransition({\n          key: navigation.state.key,\n          toChildKey: state.routes[state.index].key\n        }));\n      }\n    });\n\n    _defineProperty(this, \"handleOpenRoute\", ({\n      route\n    }) => {\n      const {\n        state,\n        navigation\n      } = this.props;\n      const {\n        closingRouteKeys,\n        replacingRouteKeys\n      } = this.state;\n      this.handleTransitionComplete();\n\n      if (closingRouteKeys.some(key => key === route.key) && replacingRouteKeys.every(key => key !== route.key) && !state.routes.some(r => r.key === route.key)) {\n        // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n        // So we need to add this route back to the state\n        navigation.dispatch(NavigationActions.navigate(route));\n      } else {\n        this.setState(state => ({\n          routes: state.replacingRouteKeys.length ? state.routes.filter(r => !state.replacingRouteKeys.includes(r.key)) : state.routes,\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key),\n          replacingRouteKeys: []\n        }));\n      }\n    });\n\n    _defineProperty(this, \"handleCloseRoute\", ({\n      route\n    }) => {\n      const {\n        state,\n        navigation\n      } = this.props;\n\n      if (state.routes.some(r => r.key === route.key)) {\n        // If a route exists in state, trigger a pop\n        // This will happen in when the route was closed from the card component\n        // e.g. When the close animation triggered from a gesture ends\n        // @ts-ignore\n        navigation.dispatch(StackActions.pop({\n          key: route.key,\n          prune: false\n        }));\n      } else {\n        this.handleTransitionComplete(); // We need to clean up any state tracking the route and pop it immediately\n\n        this.setState(state => ({\n          routes: state.routes.filter(r => r.key !== route.key),\n          openingRouteKeys: state.openingRouteKeys.filter(key => key !== route.key),\n          closingRouteKeys: state.closingRouteKeys.filter(key => key !== route.key)\n        }));\n      }\n    });\n\n    _defineProperty(this, \"handleTransitionStart\", ({\n      route\n    }, closing) => {\n      var _descriptor$options$o, _descriptor$options;\n\n      const {\n        descriptors\n      } = this.props;\n      const descriptor = descriptors[route.key] || this.state.descriptors[route.key];\n      descriptor === null || descriptor === void 0 ? void 0 : (_descriptor$options$o = (_descriptor$options = descriptor.options).onTransitionStart) === null || _descriptor$options$o === void 0 ? void 0 : _descriptor$options$o.call(_descriptor$options, {\n        closing\n      });\n    });\n\n    _defineProperty(this, \"handleTransitionEnd\", ({\n      route\n    }, closing) => {\n      var _descriptor$options$o2, _descriptor$options2;\n\n      const {\n        descriptors\n      } = this.props;\n      const descriptor = descriptors[route.key] || this.state.descriptors[route.key];\n      descriptor === null || descriptor === void 0 ? void 0 : (_descriptor$options$o2 = (_descriptor$options2 = descriptor.options).onTransitionEnd) === null || _descriptor$options$o2 === void 0 ? void 0 : _descriptor$options$o2.call(_descriptor$options2, {\n        closing\n      });\n    });\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // If there was no change in routes, we don't need to compute anything\n    if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(r => r.key), state.previousRoutes.map(r => r.key))) && state.routes.length) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce((acc, route) => {\n          acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n          return acc;\n        }, {});\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce((acc, route) => {\n          acc[route.key] = route;\n          return acc;\n        }, {});\n        routes = state.routes.map(route => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors\n      };\n    } // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n\n    let routes = props.state.index < props.state.routes.length - 1 ? // Remove any extra routes from the state\n    // The last visible route should be the focused route, i.e. at current index\n    props.state.routes.slice(0, props.state.index + 1) : props.state.routes; // Now we need to determine which routes were added and removed\n\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes\n    } = state;\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = key => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n\n    const getAnimationTypeForReplace = key => {\n      var _descriptor$options$a;\n\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n      return (_descriptor$options$a = descriptor.options.animationTypeForReplace) !== null && _descriptor$options$a !== void 0 ? _descriptor$options$a : 'push';\n    };\n\n    if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n      if (!previousRoutes.some(r => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n        if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n          closingRouteKeys = closingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n          replacingRouteKeys = replacingRouteKeys.filter(key => key !== nextFocusedRoute.key);\n\n          if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n            openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key]; // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n\n              openingRouteKeys = openingRouteKeys.filter(key => key !== nextFocusedRoute.key); // Keep the route being removed at the end to animate it out\n\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [...replacingRouteKeys, previousFocusedRoute.key];\n              closingRouteKeys = closingRouteKeys.filter(key => key !== previousFocusedRoute.key); // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some(r => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n        if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key]; // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n\n          openingRouteKeys = openingRouteKeys.filter(key => key !== previousFocusedRoute.key);\n          replacingRouteKeys = replacingRouteKeys.filter(key => key !== previousFocusedRoute.key); // Keep a copy of route being removed in the state to be able to animate it\n\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {// Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(routes.length - 1, 0, ...state.routes.filter(({\n        key\n      }) => isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false));\n    }\n\n    if (!routes.length) {\n      throw new Error('There should always be at least one route in the navigation state.');\n    }\n\n    const descriptors = routes.reduce((acc, route) => {\n      acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n      return acc;\n    }, {});\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      navigation,\n      keyboardHandlingEnabled,\n      mode = 'card',\n      headerMode = mode === 'card' && Platform.OS === 'ios' ? 'float' : 'screen',\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"state\", \"navigation\", \"keyboardHandlingEnabled\", \"mode\", \"headerMode\", \"descriptors\"]);\n\n    const {\n      routes,\n      descriptors,\n      openingRouteKeys,\n      closingRouteKeys\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GestureHandlerWrapper, {\n      style: styles.container\n    }, /*#__PURE__*/React.createElement(SafeAreaProviderCompat, null, /*#__PURE__*/React.createElement(SafeAreaConsumer, null, insets => /*#__PURE__*/React.createElement(KeyboardManager, {\n      enabled: keyboardHandlingEnabled !== false\n    }, props => /*#__PURE__*/React.createElement(CardStack, _extends({\n      mode: mode,\n      insets: insets,\n      getPreviousRoute: this.getPreviousRoute,\n      getGesturesEnabled: this.getGesturesEnabled,\n      routes: routes,\n      openingRouteKeys: openingRouteKeys,\n      closingRouteKeys: closingRouteKeys,\n      onOpenRoute: this.handleOpenRoute,\n      onCloseRoute: this.handleCloseRoute,\n      onTransitionStart: this.handleTransitionStart,\n      onTransitionEnd: this.handleTransitionEnd,\n      renderHeader: this.renderHeader,\n      renderScene: this.renderScene,\n      headerMode: headerMode,\n      state: state,\n      descriptors: descriptors\n    }, rest, props)))))));\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=StackView.js.map"]},"metadata":{},"sourceType":"module"}