{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Card from \"./Card\";\nimport HeaderHeightContext from \"../../utils/HeaderHeightContext\";\nimport HeaderShownContext from \"../../utils/HeaderShownContext\";\nimport PreviousSceneContext from \"../../utils/PreviousSceneContext\";\nimport useTheme from \"../../../utils/useTheme\";\nvar EPSILON = 0.1;\n\nfunction CardContainer(_ref) {\n  var active = _ref.active,\n      cardOverlay = _ref.cardOverlay,\n      cardOverlayEnabled = _ref.cardOverlayEnabled,\n      cardShadowEnabled = _ref.cardShadowEnabled,\n      cardStyle = _ref.cardStyle,\n      cardStyleInterpolator = _ref.cardStyleInterpolator,\n      closing = _ref.closing,\n      gesture = _ref.gesture,\n      focused = _ref.focused,\n      gestureDirection = _ref.gestureDirection,\n      gestureEnabled = _ref.gestureEnabled,\n      gestureResponseDistance = _ref.gestureResponseDistance,\n      gestureVelocityImpact = _ref.gestureVelocityImpact,\n      getPreviousScene = _ref.getPreviousScene,\n      getFocusedRoute = _ref.getFocusedRoute,\n      mode = _ref.mode,\n      headerMode = _ref.headerMode,\n      headerShown = _ref.headerShown,\n      headerStyleInterpolator = _ref.headerStyleInterpolator,\n      hasAbsoluteHeader = _ref.hasAbsoluteHeader,\n      headerHeight = _ref.headerHeight,\n      onHeaderHeightChange = _ref.onHeaderHeightChange,\n      index = _ref.index,\n      layout = _ref.layout,\n      onCloseRoute = _ref.onCloseRoute,\n      onOpenRoute = _ref.onOpenRoute,\n      onPageChangeCancel = _ref.onPageChangeCancel,\n      onPageChangeConfirm = _ref.onPageChangeConfirm,\n      onPageChangeStart = _ref.onPageChangeStart,\n      onTransitionEnd = _ref.onTransitionEnd,\n      onTransitionStart = _ref.onTransitionStart,\n      renderHeader = _ref.renderHeader,\n      renderScene = _ref.renderScene,\n      safeAreaInsetBottom = _ref.safeAreaInsetBottom,\n      safeAreaInsetLeft = _ref.safeAreaInsetLeft,\n      safeAreaInsetRight = _ref.safeAreaInsetRight,\n      safeAreaInsetTop = _ref.safeAreaInsetTop,\n      scene = _ref.scene,\n      transitionSpec = _ref.transitionSpec;\n  React.useEffect(function () {\n    onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm();\n  }, [active, onPageChangeConfirm]);\n\n  var handleOpen = function handleOpen() {\n    onTransitionEnd === null || onTransitionEnd === void 0 ? void 0 : onTransitionEnd({\n      route: scene.route\n    }, false);\n    onOpenRoute({\n      route: scene.route\n    });\n  };\n\n  var handleClose = function handleClose() {\n    onTransitionEnd === null || onTransitionEnd === void 0 ? void 0 : onTransitionEnd({\n      route: scene.route\n    }, true);\n    onCloseRoute({\n      route: scene.route\n    });\n  };\n\n  var handleTransitionStart = function handleTransitionStart(_ref2) {\n    var closing = _ref2.closing;\n\n    if (active && closing) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm();\n    } else {\n      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    }\n\n    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n      route: scene.route\n    }, closing);\n  };\n\n  var insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState('box-none'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pointerEvents = _React$useState2[0],\n      setPointerEvents = _React$useState2[1];\n\n  React.useEffect(function () {\n    var _scene$progress$next, _scene$progress$next$;\n\n    var listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, function (_ref3) {\n      var value = _ref3.value;\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return function () {\n      if (listener) {\n        var _scene$progress$next2, _scene$progress$next3;\n\n        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n  var isCurrentHeaderShown = headerMode !== 'none' && headerShown !== false;\n  var previousScene = getPreviousScene({\n    route: scene.route\n  });\n  return React.createElement(Card, {\n    index: index,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransitionStart: handleTransitionStart,\n    onGestureBegin: onPageChangeStart,\n    onGestureCanceled: onPageChangeCancel,\n    gestureEnabled: gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode === 'screen' && mode === 'card',\n    containerStyle: hasAbsoluteHeader ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: colors.background\n    }, cardStyle],\n    style: StyleSheet.absoluteFill\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.scene\n  }, React.createElement(PreviousSceneContext.Provider, {\n    value: previousScene\n  }, React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || isCurrentHeaderShown\n  }, React.createElement(HeaderHeightContext.Provider, {\n    value: headerHeight\n  }, renderScene({\n    route: scene.route\n  }))))), headerMode === 'screen' ? renderHeader({\n    mode: 'screen',\n    layout: layout,\n    insets: insets,\n    scenes: [previousScene, scene],\n    getPreviousScene: getPreviousScene,\n    getFocusedRoute: getFocusedRoute,\n    gestureDirection: gestureDirection,\n    styleInterpolator: headerStyleInterpolator,\n    onContentHeightChange: onHeaderHeightChange\n  }) : null));\n}\n\nexport default React.memo(CardContainer);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-navigation-stack/lib/module/vendor/views/Stack/CardContainer.js"],"names":["React","Card","HeaderHeightContext","HeaderShownContext","PreviousSceneContext","useTheme","EPSILON","CardContainer","active","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","closing","gesture","focused","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","getPreviousScene","getFocusedRoute","mode","headerMode","headerShown","headerStyleInterpolator","hasAbsoluteHeader","headerHeight","onHeaderHeightChange","index","layout","onCloseRoute","onOpenRoute","onPageChangeCancel","onPageChangeConfirm","onPageChangeStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","transitionSpec","useEffect","handleOpen","route","handleClose","handleTransitionStart","insets","top","right","bottom","left","colors","useState","pointerEvents","setPointerEvents","_scene$progress$next","_scene$progress$next$","listener","progress","next","addListener","call","value","_scene$progress$next2","_scene$progress$next3","removeListener","isParentHeaderShown","useContext","isCurrentHeaderShown","previousScene","createElement","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","StyleSheet","absoluteFill","View","styles","container","Provider","scenes","onContentHeightChange","memo","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Card from './Card';\nimport HeaderHeightContext from '../../utils/HeaderHeightContext';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nimport useTheme from '../../../utils/useTheme';\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  active,\n  cardOverlay,\n  cardOverlayEnabled,\n  cardShadowEnabled,\n  cardStyle,\n  cardStyleInterpolator,\n  closing,\n  gesture,\n  focused,\n  gestureDirection,\n  gestureEnabled,\n  gestureResponseDistance,\n  gestureVelocityImpact,\n  getPreviousScene,\n  getFocusedRoute,\n  mode,\n  headerMode,\n  headerShown,\n  headerStyleInterpolator,\n  hasAbsoluteHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  index,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onPageChangeCancel,\n  onPageChangeConfirm,\n  onPageChangeStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n  transitionSpec\n}) {\n  React.useEffect(() => {\n    onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm();\n  }, [active, onPageChangeConfirm]);\n\n  const handleOpen = () => {\n    onTransitionEnd === null || onTransitionEnd === void 0 ? void 0 : onTransitionEnd({\n      route: scene.route\n    }, false);\n    onOpenRoute({\n      route: scene.route\n    });\n  };\n\n  const handleClose = () => {\n    onTransitionEnd === null || onTransitionEnd === void 0 ? void 0 : onTransitionEnd({\n      route: scene.route\n    }, true);\n    onCloseRoute({\n      route: scene.route\n    });\n  };\n\n  const handleTransitionStart = ({\n    closing\n  }) => {\n    if (active && closing) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm();\n    } else {\n      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    }\n\n    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n      route: scene.route\n    }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n  const {\n    colors\n  } = useTheme();\n  const [pointerEvents, setPointerEvents] = React.useState('box-none');\n  React.useEffect(() => {\n    var _scene$progress$next, _scene$progress$next$;\n\n    // @ts-expect-error: AnimatedInterpolation optionally has addListener, but the type defs don't think so\n    const listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, ({\n      value\n    }) => {\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return () => {\n      if (listener) {\n        var _scene$progress$next2, _scene$progress$next3;\n\n        // @ts-expect-error: AnimatedInterpolation optionally has removedListener, but the type defs don't think so\n        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const isCurrentHeaderShown = headerMode !== 'none' && headerShown !== false;\n  const previousScene = getPreviousScene({\n    route: scene.route\n  });\n  return /*#__PURE__*/React.createElement(Card, {\n    index: index,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransitionStart: handleTransitionStart,\n    onGestureBegin: onPageChangeStart,\n    onGestureCanceled: onPageChangeCancel,\n    gestureEnabled: gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode === 'screen' && mode === 'card',\n    containerStyle: hasAbsoluteHeader ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: colors.background\n    }, cardStyle],\n    style: StyleSheet.absoluteFill\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.container\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.scene\n  }, /*#__PURE__*/React.createElement(PreviousSceneContext.Provider, {\n    value: previousScene\n  }, /*#__PURE__*/React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || isCurrentHeaderShown\n  }, /*#__PURE__*/React.createElement(HeaderHeightContext.Provider, {\n    value: headerHeight\n  }, renderScene({\n    route: scene.route\n  }))))), headerMode === 'screen' ? renderHeader({\n    mode: 'screen',\n    layout,\n    insets,\n    scenes: [previousScene, scene],\n    getPreviousScene,\n    getFocusedRoute,\n    gestureDirection,\n    styleInterpolator: headerStyleInterpolator,\n    onContentHeightChange: onHeaderHeightChange\n  }) : null));\n}\n\nexport default React.memo(CardContainer);\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=CardContainer.js.map"]},"metadata":{},"sourceType":"module"}