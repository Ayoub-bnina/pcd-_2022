{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"status\", \"theme\", \"disabled\", \"onPress\", \"testID\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\nvar ANIMATION_DURATION = 100;\n\nvar CheckboxAndroid = function CheckboxAndroid(_ref) {\n  var status = _ref.status,\n      theme = _ref.theme,\n      disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      testID = _ref.testID,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n      scaleAnim = _React$useRef.current;\n\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    var checked = status === 'checked';\n    Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 0.85,\n      duration: checked ? ANIMATION_DURATION * scale : 0,\n      useNativeDriver: false\n    }), Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: checked ? ANIMATION_DURATION * scale : ANIMATION_DURATION * scale * 1.75,\n      useNativeDriver: false\n    })]).start();\n  }, [status, scaleAnim, scale]);\n  var checked = status === 'checked';\n  var indeterminate = status === 'indeterminate';\n  var checkedColor = rest.color || theme.colors.accent;\n  var uncheckedColor = rest.uncheckedColor || color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  var rippleColor, checkboxColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n    checkboxColor = theme.colors.disabled;\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n    checkboxColor = checked ? checkedColor : uncheckedColor;\n  }\n\n  var borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0]\n  });\n  var icon = indeterminate ? 'minus-box' : checked ? 'checkbox-marked' : 'checkbox-blank-outline';\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled: disabled,\n      checked: checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID\n  }), React.createElement(Animated.View, {\n    style: {\n      transform: [{\n        scale: scaleAnim\n      }]\n    }\n  }, React.createElement(MaterialCommunityIcon, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: checkboxColor,\n    direction: \"ltr\"\n  }), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.fillContainer]\n  }, React.createElement(Animated.View, {\n    style: [styles.fill, {\n      borderColor: checkboxColor\n    }, {\n      borderWidth: borderWidth\n    }]\n  }))));\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fill: {\n    height: 14,\n    width: 14\n  }\n});\nexport default withTheme(CheckboxAndroid);\nvar CheckboxAndroidWithTheme = withTheme(CheckboxAndroid);\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Checkbox/CheckboxAndroid.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","MaterialCommunityIcon","TouchableRipple","withTheme","ANIMATION_DURATION","CheckboxAndroid","status","theme","disabled","onPress","testID","rest","useRef","Animated","Value","scaleAnim","current","isFirstRendering","scale","animation","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","checkedColor","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","checkboxColor","fade","borderWidth","interpolate","inputRange","outputRange","icon","createElement","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","transform","allowFontScaling","name","size","direction","StyleSheet","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","CheckboxAndroidWithTheme"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\n\nconst CheckboxAndroid = ({\n  status,\n  theme,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}) => {\n  const {\n    current: scaleAnim\n  } = React.useRef(new Animated.Value(1));\n  const isFirstRendering = React.useRef(true);\n  const {\n    animation: {\n      scale\n    }\n  } = theme;\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n    Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 0.85,\n      duration: checked ? ANIMATION_DURATION * scale : 0,\n      useNativeDriver: false\n    }), Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: checked ? ANIMATION_DURATION * scale : ANIMATION_DURATION * scale * 1.75,\n      useNativeDriver: false\n    })]).start();\n  }, [status, scaleAnim, scale]);\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n  const checkedColor = rest.color || theme.colors.accent;\n  const uncheckedColor = rest.uncheckedColor || color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  let rippleColor, checkboxColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n    checkboxColor = theme.colors.disabled;\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n    checkboxColor = checked ? checkedColor : uncheckedColor;\n  }\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0]\n  });\n  const icon = indeterminate ? 'minus-box' : checked ? 'checkbox-marked' : 'checkbox-blank-outline';\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled,\n      checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID\n  }), /*#__PURE__*/React.createElement(Animated.View, {\n    style: {\n      transform: [{\n        scale: scaleAnim\n      }]\n    }\n  }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: checkboxColor,\n    direction: \"ltr\"\n  }), /*#__PURE__*/React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.fillContainer]\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.fill, {\n      borderColor: checkboxColor\n    }, {\n      borderWidth\n    }]\n  }))));\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fill: {\n    height: 14,\n    width: 14\n  }\n});\nexport default withTheme(CheckboxAndroid); // @component-docs ignore-next-line\n\nconst CheckboxAndroidWithTheme = withTheme(CheckboxAndroid); // @component-docs ignore-next-line\n\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };\n//# sourceMappingURL=CheckboxAndroid.js.map"]},"metadata":{},"sourceType":"module"}