{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"active\", \"theme\", \"style\", \"onPress\", \"accessibilityLabel\", \"right\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DrawerItem = function DrawerItem(_ref) {\n  var icon = _ref.icon,\n      label = _ref.label,\n      active = _ref.active,\n      theme = _ref.theme,\n      style = _ref.style,\n      onPress = _ref.onPress,\n      accessibilityLabel = _ref.accessibilityLabel,\n      right = _ref.right,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var colors = theme.colors,\n      roundness = theme.roundness;\n  var backgroundColor = active ? color(colors.primary).alpha(0.12).rgb().string() : 'transparent';\n  var contentColor = active ? colors.primary : color(colors.text).alpha(0.68).rgb().string();\n  var font = theme.fonts.medium;\n  var labelMargin = icon ? 32 : 0;\n  return React.createElement(View, rest, React.createElement(TouchableRipple, {\n    borderless: true,\n    delayPressIn: 0,\n    onPress: onPress,\n    style: [styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: roundness\n    }, style],\n    accessibilityTraits: active ? ['button', 'selected'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel\n  }, React.createElement(View, {\n    style: styles.wrapper\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: contentColor\n  }) : null, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, _objectSpread(_objectSpread({\n      color: contentColor\n    }, font), {}, {\n      marginLeft: labelMargin\n    })]\n  }, label)), right === null || right === void 0 ? void 0 : right({\n    color: contentColor\n  }))));\n};\n\nDrawerItem.displayName = 'Drawer.Item';\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    marginRight: 32\n  }\n});\nexport default withTheme(DrawerItem);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Drawer/DrawerItem.js"],"names":["color","React","Text","Icon","TouchableRipple","withTheme","DrawerItem","icon","label","active","theme","style","onPress","accessibilityLabel","right","rest","colors","roundness","backgroundColor","primary","alpha","rgb","string","contentColor","text","font","fonts","medium","labelMargin","createElement","View","borderless","delayPressIn","styles","container","borderRadius","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","wrapper","content","source","size","selectable","numberOfLines","marginLeft","displayName","StyleSheet","create","marginHorizontal","marginVertical","flexDirection","alignItems","padding","flex","marginRight"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/drawer-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *    <Drawer.Item\n *      style={{ backgroundColor: '#64ffda' }}\n *      icon=\"star\"\n *      label=\"First Item\"\n *    />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerItem = ({\n  icon,\n  label,\n  active,\n  theme,\n  style,\n  onPress,\n  accessibilityLabel,\n  right,\n  ...rest\n}) => {\n  const {\n    colors,\n    roundness\n  } = theme;\n  const backgroundColor = active ? color(colors.primary).alpha(0.12).rgb().string() : 'transparent';\n  const contentColor = active ? colors.primary : color(colors.text).alpha(0.68).rgb().string();\n  const font = theme.fonts.medium;\n  const labelMargin = icon ? 32 : 0;\n  return /*#__PURE__*/React.createElement(View, rest, /*#__PURE__*/React.createElement(TouchableRipple, {\n    borderless: true,\n    delayPressIn: 0,\n    onPress: onPress,\n    style: [styles.container, {\n      backgroundColor,\n      borderRadius: roundness\n    }, style] // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: active ? ['button', 'selected'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.wrapper\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.content\n  }, icon ? /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: contentColor\n  }) : null, /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, {\n      color: contentColor,\n      ...font,\n      marginLeft: labelMargin\n    }]\n  }, label)), right === null || right === void 0 ? void 0 : right({\n    color: contentColor\n  }))));\n};\n\nDrawerItem.displayName = 'Drawer.Item';\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    marginRight: 32\n  }\n});\nexport default withTheme(DrawerItem);\n//# sourceMappingURL=DrawerItem.js.map"]},"metadata":{},"sourceType":"module"}