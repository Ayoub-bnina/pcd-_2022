{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"numeric\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\n\nvar DataTableCell = function DataTableCell(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      numeric = _ref.numeric,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [styles.container, numeric && styles.right, style]\n  }), React.createElement(Text, {\n    numberOfLines: 1\n  }, children));\n};\n\nDataTableCell.displayName = 'DataTable.Cell';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/DataTable/DataTableCell.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Text","TouchableRipple","DataTableCell","children","style","numeric","rest","createElement","styles","container","right","numberOfLines","displayName","StyleSheet","create","flex","flexDirection","alignItems","justifyContent"],"mappings":";;;AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,IAAP;AACA,OAAOC,eAAP;;AAgCA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MACpBC,QADoB,QACpBA,QADoB;AAAA,MAEpBC,KAFoB,QAEpBA,KAFoB;AAAA,MAGpBC,OAHoB,QAGpBA,OAHoB;AAAA,MAIjBC,IAJiB;;AAAA,SAKHP,KAAK,CAACQ,aAAN,CAAoBN,eAApB,EAAqCf,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAW;AACzEF,IAAAA,KAAK,EAAE,CAACI,MAAM,CAACC,SAAR,EAAmBJ,OAAO,IAAIG,MAAM,CAACE,KAArC,EAA4CN,KAA5C;AADkE,GAAX,CAA7C,EAEFL,KAAK,CAACQ,aAAN,CAAoBP,IAApB,EAA0B;AACzCW,IAAAA,aAAa,EAAE;AAD0B,GAA1B,EAEdR,QAFc,CAFE,CALG;AAAA,CAAtB;;AAWAD,aAAa,CAACU,WAAd,GAA4B,gBAA5B;AACA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,cAAc,EAAE;AADX;AANwB,CAAlB,CAAf;AAUA,eAAehB,aAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\nconst DataTableCell = ({\n  children,\n  style,\n  numeric,\n  ...rest\n}) => /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n  style: [styles.container, numeric && styles.right, style]\n}), /*#__PURE__*/React.createElement(Text, {\n  numberOfLines: 1\n}, children));\n\nDataTableCell.displayName = 'DataTable.Cell';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;\n//# sourceMappingURL=DataTableCell.js.map"]},"metadata":{},"sourceType":"module"}