{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"children\", \"icon\", \"avatar\", \"selected\", \"disabled\", \"accessibilityLabel\", \"closeIconAccessibilityLabel\", \"onPress\", \"onLongPress\", \"onClose\", \"closeIcon\", \"textStyle\", \"style\", \"theme\", \"testID\", \"selectedColor\", \"ellipsizeMode\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Icon from \"./Icon\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport TouchableRipple from \"./TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../core/theming\";\nimport { black, white } from \"../styles/colors\";\n\nvar Chip = function Chip(_ref) {\n  var _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'flat' : _ref$mode,\n      children = _ref.children,\n      icon = _ref.icon,\n      avatar = _ref.avatar,\n      _ref$selected = _ref.selected,\n      selected = _ref$selected === void 0 ? false : _ref$selected,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      accessibilityLabel = _ref.accessibilityLabel,\n      _ref$closeIconAccessi = _ref.closeIconAccessibilityLabel,\n      closeIconAccessibilityLabel = _ref$closeIconAccessi === void 0 ? 'Close' : _ref$closeIconAccessi,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      onClose = _ref.onClose,\n      closeIcon = _ref.closeIcon,\n      textStyle = _ref.textStyle,\n      style = _ref.style,\n      theme = _ref.theme,\n      testID = _ref.testID,\n      selectedColor = _ref.selectedColor,\n      ellipsizeMode = _ref.ellipsizeMode,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      elevation = _React$useRef.current;\n\n  var handlePressIn = function handlePressIn() {\n    var scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: 4,\n      duration: 200 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n\n  var handlePressOut = function handlePressOut() {\n    var scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n\n  var dark = theme.dark,\n      colors = theme.colors;\n  var defaultBackgroundColor = mode === 'outlined' ? colors.surface : dark ? '#383838' : '#ebebeb';\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      _ref2$backgroundColor = _ref2.backgroundColor,\n      backgroundColor = _ref2$backgroundColor === void 0 ? defaultBackgroundColor : _ref2$backgroundColor,\n      _ref2$borderRadius = _ref2.borderRadius,\n      borderRadius = _ref2$borderRadius === void 0 ? 16 : _ref2$borderRadius;\n\n  var borderColor = mode === 'outlined' ? color(selectedColor !== undefined ? selectedColor : color(dark ? white : black)).alpha(0.29).rgb().string() : backgroundColor;\n  var textColor = disabled ? colors.disabled : color(selectedColor !== undefined ? selectedColor : colors.text).alpha(0.87).rgb().string();\n  var iconColor = disabled ? colors.disabled : color(selectedColor !== undefined ? selectedColor : colors.text).alpha(0.54).rgb().string();\n  var backgroundColorString = typeof backgroundColor === 'string' ? backgroundColor : defaultBackgroundColor;\n  var selectedBackgroundColor = (dark ? color(backgroundColorString).lighten(mode === 'outlined' ? 0.2 : 0.4) : color(backgroundColorString).darken(mode === 'outlined' ? 0.08 : 0.2)).rgb().string();\n  var underlayColor = selectedColor ? color(selectedColor).fade(0.5).rgb().string() : selectedBackgroundColor;\n  var accessibilityTraits = ['button'];\n  var accessibilityState = {\n    selected: selected,\n    disabled: disabled\n  };\n\n  if (selected) {\n    accessibilityTraits.push('selected');\n  }\n\n  if (disabled) {\n    accessibilityTraits.push('disabled');\n  }\n\n  return React.createElement(Surface, _extends({\n    style: [styles.container, {\n      elevation: Platform.OS === 'android' ? elevation : 0,\n      backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n      borderColor: borderColor,\n      borderRadius: borderRadius\n    }, style]\n  }, rest), React.createElement(TouchableRipple, {\n    borderless: true,\n    delayPressIn: 0,\n    style: [{\n      borderRadius: borderRadius\n    }, styles.touchable],\n    onPress: onPress,\n    onLongPress: onLongPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    underlayColor: underlayColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: accessibilityTraits,\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: accessibilityState,\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, {\n      paddingRight: onClose ? 32 : 4\n    }]\n  }, avatar && !icon ? React.createElement(View, {\n    style: [styles.avatarWrapper, disabled && {\n      opacity: 0.26\n    }]\n  }, React.isValidElement(avatar) ? React.cloneElement(avatar, {\n    style: [styles.avatar, avatar.props.style]\n  }) : avatar) : null, icon || selected ? React.createElement(View, {\n    style: [styles.icon, avatar ? [styles.avatar, styles.avatarSelected] : null]\n  }, icon ? React.createElement(Icon, {\n    source: icon,\n    color: avatar ? white : iconColor,\n    size: 18\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: \"check\",\n    color: avatar ? white : iconColor,\n    size: 18,\n    direction: \"ltr\"\n  })) : null, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.text, _objectSpread(_objectSpread({}, theme.fonts.regular), {}, {\n      color: textColor,\n      marginRight: onClose ? 0 : 8,\n      marginLeft: avatar || icon || selected ? 4 : 8\n    }), textStyle],\n    ellipsizeMode: ellipsizeMode\n  }, children))), onClose ? React.createElement(View, {\n    style: styles.closeButtonStyle\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: onClose,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityLabel: closeIconAccessibilityLabel\n  }, React.createElement(View, {\n    style: [styles.icon, styles.closeIcon]\n  }, closeIcon ? React.createElement(Icon, {\n    source: closeIcon,\n    color: iconColor,\n    size: 16\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: \"close-circle\",\n    size: 16,\n    color: iconColor,\n    direction: \"ltr\"\n  })))) : null);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({\n      default: 'column',\n      web: 'row'\n    })\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n    flexGrow: 1\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center'\n  },\n  closeIcon: {\n    marginRight: 4\n  },\n  text: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12\n  },\n  avatarWrapper: {\n    marginRight: 4\n  },\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)'\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  touchable: {\n    flexGrow: 1\n  }\n});\nexport default withTheme(Chip);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Chip.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","Icon","MaterialCommunityIcon","Surface","Text","TouchableRipple","withTheme","black","white","Chip","mode","children","icon","avatar","selected","disabled","accessibilityLabel","closeIconAccessibilityLabel","onPress","onLongPress","onClose","closeIcon","textStyle","style","theme","testID","selectedColor","ellipsizeMode","rest","useRef","Animated","Value","elevation","current","handlePressIn","scale","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","dark","colors","defaultBackgroundColor","surface","StyleSheet","flatten","backgroundColor","borderRadius","borderColor","undefined","alpha","rgb","string","textColor","text","iconColor","backgroundColorString","selectedBackgroundColor","lighten","darken","underlayColor","fade","accessibilityTraits","accessibilityState","push","createElement","styles","container","Platform","OS","borderless","delayPressIn","touchable","onPressIn","onPressOut","accessibilityComponentType","accessibilityRole","View","content","paddingRight","avatarWrapper","opacity","isValidElement","cloneElement","props","avatarSelected","size","name","direction","selectable","numberOfLines","fonts","regular","marginRight","marginLeft","closeButtonStyle","TouchableWithoutFeedback","create","borderWidth","hairlineWidth","borderStyle","flexDirection","select","default","web","alignItems","paddingLeft","position","flexGrow","padding","alignSelf","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","top","left","right","justifyContent"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport color from 'color';\nimport Icon from './Icon';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport TouchableRipple from './TouchableRipple/TouchableRipple';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\n\n/**\n * Chips can be used to display entities in small blocks.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/chip-1.png\" />\n *     <figcaption>Flat chip</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/chip-2.png\" />\n *     <figcaption>Outlined chip</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Chip = ({\n  mode = 'flat',\n  children,\n  icon,\n  avatar,\n  selected = false,\n  disabled = false,\n  accessibilityLabel,\n  closeIconAccessibilityLabel = 'Close',\n  onPress,\n  onLongPress,\n  onClose,\n  closeIcon,\n  textStyle,\n  style,\n  theme,\n  testID,\n  selectedColor,\n  ellipsizeMode,\n  ...rest\n}) => {\n  const {\n    current: elevation\n  } = React.useRef(new Animated.Value(0));\n\n  const handlePressIn = () => {\n    const {\n      scale\n    } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: 4,\n      duration: 200 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n\n  const handlePressOut = () => {\n    const {\n      scale\n    } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n\n  const {\n    dark,\n    colors\n  } = theme;\n  const defaultBackgroundColor = mode === 'outlined' ? colors.surface : dark ? '#383838' : '#ebebeb';\n  const {\n    backgroundColor = defaultBackgroundColor,\n    borderRadius = 16\n  } = StyleSheet.flatten(style) || {};\n  const borderColor = mode === 'outlined' ? color(selectedColor !== undefined ? selectedColor : color(dark ? white : black)).alpha(0.29).rgb().string() : backgroundColor;\n  const textColor = disabled ? colors.disabled : color(selectedColor !== undefined ? selectedColor : colors.text).alpha(0.87).rgb().string();\n  const iconColor = disabled ? colors.disabled : color(selectedColor !== undefined ? selectedColor : colors.text).alpha(0.54).rgb().string();\n  const backgroundColorString = typeof backgroundColor === 'string' ? backgroundColor : defaultBackgroundColor;\n  const selectedBackgroundColor = (dark ? color(backgroundColorString).lighten(mode === 'outlined' ? 0.2 : 0.4) : color(backgroundColorString).darken(mode === 'outlined' ? 0.08 : 0.2)).rgb().string();\n  const underlayColor = selectedColor ? color(selectedColor).fade(0.5).rgb().string() : selectedBackgroundColor;\n  const accessibilityTraits = ['button'];\n  const accessibilityState = {\n    selected,\n    disabled\n  };\n\n  if (selected) {\n    accessibilityTraits.push('selected');\n  }\n\n  if (disabled) {\n    accessibilityTraits.push('disabled');\n  }\n\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [styles.container, {\n      elevation: Platform.OS === 'android' ? elevation : 0,\n      backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n      borderColor,\n      borderRadius\n    }, style]\n  }, rest), /*#__PURE__*/React.createElement(TouchableRipple, {\n    borderless: true,\n    delayPressIn: 0,\n    style: [{\n      borderRadius\n    }, styles.touchable],\n    onPress: onPress,\n    onLongPress: onLongPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    underlayColor: underlayColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: accessibilityTraits,\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: accessibilityState,\n    testID: testID\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, {\n      paddingRight: onClose ? 32 : 4\n    }]\n  }, avatar && !icon ? /*#__PURE__*/React.createElement(View, {\n    style: [styles.avatarWrapper, disabled && {\n      opacity: 0.26\n    }]\n  }, /*#__PURE__*/React.isValidElement(avatar) ? /*#__PURE__*/React.cloneElement(avatar, {\n    style: [styles.avatar, avatar.props.style]\n  }) : avatar) : null, icon || selected ? /*#__PURE__*/React.createElement(View, {\n    style: [styles.icon, avatar ? [styles.avatar, styles.avatarSelected] : null]\n  }, icon ? /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    color: avatar ? white : iconColor,\n    size: 18\n  }) : /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: \"check\",\n    color: avatar ? white : iconColor,\n    size: 18,\n    direction: \"ltr\"\n  })) : null, /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.text, { ...theme.fonts.regular,\n      color: textColor,\n      marginRight: onClose ? 0 : 8,\n      marginLeft: avatar || icon || selected ? 4 : 8\n    }, textStyle],\n    ellipsizeMode: ellipsizeMode\n  }, children))), onClose ? /*#__PURE__*/React.createElement(View, {\n    style: styles.closeButtonStyle\n  }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    onPress: onClose // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityLabel: closeIconAccessibilityLabel\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.icon, styles.closeIcon]\n  }, closeIcon ? /*#__PURE__*/React.createElement(Icon, {\n    source: closeIcon,\n    color: iconColor,\n    size: 16\n  }) : /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: \"close-circle\",\n    size: 16,\n    color: iconColor,\n    direction: \"ltr\"\n  })))) : null);\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({\n      default: 'column',\n      web: 'row'\n    })\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n    flexGrow: 1\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center'\n  },\n  closeIcon: {\n    marginRight: 4\n  },\n  text: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12\n  },\n  avatarWrapper: {\n    marginRight: 4\n  },\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)'\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  touchable: {\n    flexGrow: 1\n  }\n});\nexport default withTheme(Chip);\n//# sourceMappingURL=Chip.js.map"]},"metadata":{},"sourceType":"module"}