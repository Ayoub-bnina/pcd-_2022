{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"name\", \"onPress\", \"forceTextInputFocus\", \"color\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport IconButton from \"../../IconButton\";\nexport var ICON_SIZE = 24;\nvar ICON_OFFSET = 12;\nvar StyleContext = React.createContext({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: function forceFocus() {}\n});\n\nvar IconAdornment = function IconAdornment(_ref) {\n  var icon = _ref.icon,\n      topPosition = _ref.topPosition,\n      side = _ref.side,\n      isTextInputFocused = _ref.isTextInputFocused,\n      forceFocus = _ref.forceFocus;\n\n  var style = _defineProperty({\n    top: topPosition\n  }, side, ICON_OFFSET);\n\n  var contextState = {\n    style: style,\n    isTextInputFocused: isTextInputFocused,\n    forceFocus: forceFocus\n  };\n  return React.createElement(StyleContext.Provider, {\n    value: contextState\n  }, icon);\n};\n\nvar TextInputIcon = function TextInputIcon(_ref2) {\n  var name = _ref2.name,\n      onPress = _ref2.onPress,\n      forceTextInputFocus = _ref2.forceTextInputFocus,\n      color = _ref2.color,\n      rest = _objectWithoutProperties(_ref2, _excluded);\n\n  var _React$useContext = React.useContext(StyleContext),\n      style = _React$useContext.style,\n      isTextInputFocused = _React$useContext.isTextInputFocused,\n      forceFocus = _React$useContext.forceFocus;\n\n  var onPressWithFocusControl = React.useCallback(function () {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n\n    onPress === null || onPress === void 0 ? void 0 : onPress();\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, React.createElement(IconButton, _extends({\n    icon: name,\n    style: styles.iconButton,\n    size: ICON_SIZE,\n    onPress: onPressWithFocusControl,\n    color: typeof color === 'function' ? color(isTextInputFocused) : color\n  }, rest)));\n};\n\nTextInputIcon.displayName = 'TextInput.Icon';\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconButton: {\n    margin: 0\n  }\n});\nexport default TextInputIcon;\nexport { IconAdornment };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/TextInput/Adornment/TextInputIcon.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","IconButton","ICON_SIZE","ICON_OFFSET","StyleContext","createContext","style","isTextInputFocused","forceFocus","IconAdornment","icon","topPosition","side","top","contextState","createElement","Provider","value","TextInputIcon","name","onPress","forceTextInputFocus","color","rest","useContext","onPressWithFocusControl","useCallback","View","styles","container","iconButton","size","displayName","defaultProps","StyleSheet","create","position","width","height","justifyContent","alignItems","margin"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport IconButton from '../../IconButton';\nexport const ICON_SIZE = 24;\nconst ICON_OFFSET = 12;\nconst StyleContext = /*#__PURE__*/React.createContext({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {}\n});\n\nconst IconAdornment = ({\n  icon,\n  topPosition,\n  side,\n  isTextInputFocused,\n  forceFocus\n}) => {\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET\n  };\n  const contextState = {\n    style,\n    isTextInputFocused,\n    forceFocus\n  };\n  return /*#__PURE__*/React.createElement(StyleContext.Provider, {\n    value: contextState\n  }, icon);\n};\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon name=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\n\nconst TextInputIcon = ({\n  name,\n  onPress,\n  forceTextInputFocus,\n  color,\n  ...rest\n}) => {\n  const {\n    style,\n    isTextInputFocused,\n    forceFocus\n  } = React.useContext(StyleContext);\n  const onPressWithFocusControl = React.useCallback(() => {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n\n    onPress === null || onPress === void 0 ? void 0 : onPress();\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(IconButton, _extends({\n    icon: name,\n    style: styles.iconButton,\n    size: ICON_SIZE,\n    onPress: onPressWithFocusControl,\n    color: typeof color === 'function' ? color(isTextInputFocused) : color\n  }, rest)));\n};\n\nTextInputIcon.displayName = 'TextInput.Icon';\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true\n};\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconButton: {\n    margin: 0\n  }\n});\nexport default TextInputIcon; // @component-docs ignore-next-line\n\nexport { IconAdornment };\n//# sourceMappingURL=TextInputIcon.js.map"]},"metadata":{},"sourceType":"module"}