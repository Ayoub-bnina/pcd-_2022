{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime/helpers/objectSpread\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"route\", \"style\", \"children\", \"borderless\", \"centered\", \"rippleColor\"],\n    _excluded2 = [\"component\"];\n\nfunction _ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : _ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getBottomSpace } from 'react-native-iphone-x-helper';\nimport color from 'color';\nimport overlay from \"../../styles/overlay\";\nimport Icon from \"../Icon\";\nimport Surface from \"../Surface\";\nimport Badge from \"../Badge\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\nimport useAnimatedValue from \"../../utils/useAnimatedValue\";\nimport useAnimatedValueArray from \"../../utils/useAnimatedValueArray\";\nimport useLayout from \"../../utils/useLayout\";\nimport useIsKeyboardShown from \"../../utils/useIsKeyboardShown\";\nimport BottomNavigationRouteScreen from \"./BottomNavigationRouteScreen\";\nvar MIN_RIPPLE_SCALE = 0.001;\nvar MIN_TAB_WIDTH = 96;\nvar MAX_TAB_WIDTH = 168;\nvar BAR_HEIGHT = 56;\nvar BOTTOM_INSET = getBottomSpace();\nvar FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\n\nvar Touchable = function Touchable(_ref) {\n  var _0 = _ref.route,\n      style = _ref.style,\n      children = _ref.children,\n      borderless = _ref.borderless,\n      centered = _ref.centered,\n      rippleColor = _ref.rippleColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return TouchableRipple.supported ? React.createElement(TouchableRipple, _extends({}, rest, {\n    disabled: rest.disabled || undefined,\n    borderless: borderless,\n    centered: centered,\n    rippleColor: rippleColor,\n    style: style\n  }), children) : React.createElement(TouchableWithoutFeedback, rest, React.createElement(View, {\n    style: style\n  }, children));\n};\n\nvar SceneComponent = React.memo(function (_ref2) {\n  var component = _ref2.component,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  return React.createElement(component, rest);\n});\n\nvar BottomNavigation = function BottomNavigation(_ref3) {\n  var navigationState = _ref3.navigationState,\n      renderScene = _ref3.renderScene,\n      renderIcon = _ref3.renderIcon,\n      renderLabel = _ref3.renderLabel,\n      _ref3$renderTouchable = _ref3.renderTouchable,\n      renderTouchable = _ref3$renderTouchable === void 0 ? function (props) {\n    return React.createElement(Touchable, props);\n  } : _ref3$renderTouchable,\n      _ref3$getLabelText = _ref3.getLabelText,\n      getLabelText = _ref3$getLabelText === void 0 ? function (_ref4) {\n    var route = _ref4.route;\n    return route.title;\n  } : _ref3$getLabelText,\n      _ref3$getBadge = _ref3.getBadge,\n      getBadge = _ref3$getBadge === void 0 ? function (_ref5) {\n    var route = _ref5.route;\n    return route.badge;\n  } : _ref3$getBadge,\n      _ref3$getColor = _ref3.getColor,\n      getColor = _ref3$getColor === void 0 ? function (_ref6) {\n    var route = _ref6.route;\n    return route.color;\n  } : _ref3$getColor,\n      _ref3$getAccessibilit = _ref3.getAccessibilityLabel,\n      getAccessibilityLabel = _ref3$getAccessibilit === void 0 ? function (_ref7) {\n    var route = _ref7.route;\n    return route.accessibilityLabel;\n  } : _ref3$getAccessibilit,\n      _ref3$getTestID = _ref3.getTestID,\n      getTestID = _ref3$getTestID === void 0 ? function (_ref8) {\n    var route = _ref8.route;\n    return route.testID;\n  } : _ref3$getTestID,\n      activeColor = _ref3.activeColor,\n      inactiveColor = _ref3.inactiveColor,\n      _ref3$keyboardHidesNa = _ref3.keyboardHidesNavigationBar,\n      keyboardHidesNavigationBar = _ref3$keyboardHidesNa === void 0 ? true : _ref3$keyboardHidesNa,\n      barStyle = _ref3.barStyle,\n      _ref3$labeled = _ref3.labeled,\n      labeled = _ref3$labeled === void 0 ? true : _ref3$labeled,\n      style = _ref3.style,\n      theme = _ref3.theme,\n      _ref3$sceneAnimationE = _ref3.sceneAnimationEnabled,\n      sceneAnimationEnabled = _ref3$sceneAnimationE === void 0 ? false : _ref3$sceneAnimationE,\n      onTabPress = _ref3.onTabPress,\n      onIndexChange = _ref3.onIndexChange,\n      _ref3$shifting = _ref3.shifting,\n      shifting = _ref3$shifting === void 0 ? navigationState.routes.length > 3 : _ref3$shifting,\n      safeAreaInsets = _ref3.safeAreaInsets;\n\n  var _safeAreaInsets$left, _safeAreaInsets$right, _safeAreaInsets$botto;\n\n  var scale = theme.animation.scale;\n  var focusedKey = navigationState.routes[navigationState.index].key;\n  var visibleAnim = useAnimatedValue(1);\n  var tabsAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 1 : 0;\n  }));\n  var offsetsAnims = useAnimatedValueArray(navigationState.routes.map(function (_, i) {\n    return i === navigationState.index ? 0 : 1;\n  }));\n  var indexAnim = useAnimatedValue(navigationState.index);\n  var rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n\n  var _useLayout = useLayout(),\n      _useLayout2 = _slicedToArray(_useLayout, 2),\n      layout = _useLayout2[0],\n      onLayout = _useLayout2[1];\n\n  var _React$useState = React.useState([focusedKey]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n\n  if (!loaded.includes(focusedKey)) {\n    setLoaded(function (loaded) {\n      return [].concat(_toConsumableArray(loaded), [focusedKey]);\n    });\n  }\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      keyboardVisible = _React$useState4[0],\n      setKeyboardVisible = _React$useState4[1];\n\n  var handleKeyboardShow = React.useCallback(function () {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [scale, visibleAnim]);\n  var handleKeyboardHide = React.useCallback(function () {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(function () {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n  var animateToIndex = React.useCallback(function (index) {\n    rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    Animated.parallel([Animated.timing(rippleAnim, {\n      toValue: 1,\n      duration: shifting ? 400 * scale : 0,\n      useNativeDriver: true\n    })].concat(_toConsumableArray(navigationState.routes.map(function (_, i) {\n      return Animated.timing(tabsAnims[i], {\n        toValue: i === index ? 1 : 0,\n        duration: shifting ? 150 * scale : 0,\n        useNativeDriver: true\n      });\n    })))).start(function (_ref9) {\n      var finished = _ref9.finished;\n      tabsAnims.map(function (tab, i) {\n        return tab.setValue(i === index ? 1 : 0);\n      });\n      indexAnim.setValue(index);\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      if (finished) {\n        offsetsAnims.forEach(function (offset, i) {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  }, [indexAnim, shifting, navigationState.routes, offsetsAnims, rippleAnim, scale, tabsAnims]);\n  React.useEffect(function () {\n    animateToIndex(navigationState.index);\n  }, []);\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide\n  });\n  var prevNavigationState = React.useRef();\n  React.useEffect(function () {\n    offsetsAnims.forEach(function (offset, i) {\n      var _prevNavigationState$;\n\n      if (i === navigationState.index || i === ((_prevNavigationState$ = prevNavigationState.current) === null || _prevNavigationState$ === void 0 ? void 0 : _prevNavigationState$.index)) {\n        offset.setValue(0);\n      }\n    });\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  var handleTabPress = function handleTabPress(index) {\n    var event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: function preventDefault() {\n        event.defaultPrevented = true;\n      }\n    };\n    onTabPress === null || onTabPress === void 0 ? void 0 : onTabPress(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  var jumpTo = React.useCallback(function (key) {\n    var index = navigationState.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n    onIndexChange(index);\n  }, [navigationState.routes, onIndexChange]);\n  var routes = navigationState.routes;\n  var colors = theme.colors,\n      isDarkTheme = theme.dark,\n      mode = theme.mode;\n\n  var _ref10 = StyleSheet.flatten(barStyle) || {},\n      customBackground = _ref10.backgroundColor,\n      _ref10$elevation = _ref10.elevation,\n      elevation = _ref10$elevation === void 0 ? 4 : _ref10$elevation;\n\n  var approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n  var backgroundColor = shifting ? indexAnim.interpolate({\n    inputRange: routes.map(function (_, i) {\n      return i;\n    }),\n    outputRange: routes.map(function (route) {\n      return getColor({\n        route: route\n      }) || approxBackgroundColor;\n    })\n  }) : approxBackgroundColor;\n  var isDark = typeof approxBackgroundColor === 'string' ? !color(approxBackgroundColor).isLight() : true;\n  var textColor = isDark ? white : black;\n  var activeTintColor = typeof activeColor !== 'undefined' ? activeColor : textColor;\n  var inactiveTintColor = typeof inactiveColor !== 'undefined' ? inactiveColor : color(textColor).alpha(0.5).rgb().string();\n  var touchColor = color(activeColor || activeTintColor).alpha(0.12).rgb().string();\n  var maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  var maxTabBarWidth = maxTabWidth * routes.length;\n  var tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  var tabWidth = tabBarWidth / routes.length;\n  var rippleSize = layout.width / 4;\n  var insets = {\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : 0,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : 0,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : BOTTOM_INSET\n  };\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: [styles.content, {\n      backgroundColor: colors.background\n    }]\n  }, routes.map(function (route, index) {\n    if (!loaded.includes(route.key)) {\n      return null;\n    }\n\n    var focused = navigationState.index === index;\n    var opacity = sceneAnimationEnabled ? tabsAnims[index] : focused ? 1 : 0;\n    var top = sceneAnimationEnabled ? offsetsAnims[index].interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, FAR_FAR_AWAY]\n    }) : focused ? 0 : FAR_FAR_AWAY;\n    return React.createElement(BottomNavigationRouteScreen, {\n      key: route.key,\n      pointerEvents: focused ? 'auto' : 'none',\n      accessibilityElementsHidden: !focused,\n      importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n      index: index,\n      visibility: opacity,\n      style: [StyleSheet.absoluteFill, {\n        opacity: opacity\n      }],\n      collapsable: false,\n      removeClippedSubviews: Platform.OS === 'ios' ? navigationState.index !== index : true\n    }, React.createElement(Animated.View, {\n      style: [styles.content, {\n        top: top\n      }]\n    }, renderScene({\n      route: route,\n      jumpTo: jumpTo\n    })));\n  })), React.createElement(Surface, {\n    style: [styles.bar, keyboardHidesNavigationBar ? {\n      transform: [{\n        translateY: visibleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      position: keyboardVisible ? 'absolute' : null\n    } : null, barStyle],\n    pointerEvents: layout.measured ? keyboardHidesNavigationBar && keyboardVisible ? 'none' : 'auto' : 'none',\n    onLayout: onLayout\n  }, React.createElement(Animated.View, {\n    style: [styles.barContent, {\n      backgroundColor: backgroundColor\n    }]\n  }, React.createElement(View, {\n    style: [styles.items, {\n      marginBottom: insets.bottom,\n      marginHorizontal: Math.max(insets.left, insets.right),\n      maxWidth: maxTabBarWidth\n    }],\n    accessibilityRole: 'tablist'\n  }, shifting ? React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.ripple, {\n      top: (BAR_HEIGHT - rippleSize) / 2,\n      left: tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n      height: rippleSize,\n      width: rippleSize,\n      borderRadius: rippleSize / 2,\n      backgroundColor: getColor({\n        route: routes[navigationState.index]\n      }),\n      transform: [{\n        scale: rippleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 8]\n        })\n      }],\n      opacity: rippleAnim.interpolate({\n        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n        outputRange: [0, 0, 1, 1]\n      })\n    }]\n  }) : null, routes.map(function (route, index) {\n    var focused = navigationState.index === index;\n    var active = tabsAnims[index];\n    var scale = labeled && shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n    var translateY = labeled ? shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [7, 0]\n    }) : 0 : 7;\n    var activeOpacity = active;\n    var inactiveOpacity = active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    });\n    var badge = getBadge({\n      route: route\n    });\n    return renderTouchable({\n      key: route.key,\n      route: route,\n      borderless: true,\n      centered: true,\n      rippleColor: touchColor,\n      onPress: function onPress() {\n        return handleTabPress(index);\n      },\n      testID: getTestID({\n        route: route\n      }),\n      accessibilityLabel: getAccessibilityLabel({\n        route: route\n      }),\n      accessibilityTraits: focused ? ['button', 'selected'] : 'button',\n      accessibilityComponentType: 'button',\n      accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n      accessibilityState: {\n        selected: focused\n      },\n      style: styles.item,\n      children: React.createElement(View, {\n        pointerEvents: \"none\"\n      }, React.createElement(Animated.View, {\n        style: [styles.iconContainer, {\n          transform: [{\n            translateY: translateY\n          }]\n        }]\n      }, React.createElement(Animated.View, {\n        style: [styles.iconWrapper, {\n          opacity: activeOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: true,\n        color: activeTintColor\n      }) : React.createElement(Icon, {\n        source: route.icon,\n        color: activeTintColor,\n        size: 24\n      })), React.createElement(Animated.View, {\n        style: [styles.iconWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route: route,\n        focused: false,\n        color: inactiveTintColor\n      }) : React.createElement(Icon, {\n        source: route.icon,\n        color: inactiveTintColor,\n        size: 24\n      })), React.createElement(View, {\n        style: [styles.badgeContainer, {\n          right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - 2\n        }]\n      }, typeof badge === 'boolean' ? React.createElement(Badge, {\n        visible: badge,\n        size: 8\n      }) : React.createElement(Badge, {\n        visible: badge != null,\n        size: 16\n      }, badge))), labeled ? React.createElement(Animated.View, {\n        style: [styles.labelContainer, {\n          transform: [{\n            scale: scale\n          }]\n        }]\n      }, React.createElement(Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: activeOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: true,\n        color: activeTintColor\n      }) : React.createElement(Text, {\n        style: [styles.label, {\n          color: activeTintColor\n        }]\n      }, getLabelText({\n        route: route\n      }))), shifting ? null : React.createElement(Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route: route,\n        focused: false,\n        color: inactiveTintColor\n      }) : React.createElement(Text, {\n        selectable: false,\n        style: [styles.label, {\n          color: inactiveTintColor\n        }]\n      }, getLabelText({\n        route: route\n      })))) : React.createElement(View, {\n        style: styles.labelContainer\n      }))\n    });\n  })))));\n};\n\nBottomNavigation.SceneMap = function (scenes) {\n  return function (_ref11) {\n    var route = _ref11.route,\n        jumpTo = _ref11.jumpTo;\n    return React.createElement(SceneComponent, {\n      key: route.key,\n      component: scenes[route.key ? route.key : ''],\n      route: route,\n      jumpTo: jumpTo\n    });\n  };\n};\n\nexport default withTheme(BottomNavigation);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: _objectSpread({\n    flexDirection: 'row'\n  }, Platform.OS === 'web' ? {\n    width: '100%'\n  } : null),\n  item: {\n    flex: 1,\n    paddingVertical: 6\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  iconWrapper: _objectSpread2(_objectSpread2({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'center'\n  }),\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: _objectSpread3({}, StyleSheet.absoluteFillObject),\n  label: _objectSpread2({\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  }, Platform.OS === 'web' ? {\n    whiteSpace: 'nowrap',\n    alignSelf: 'center'\n  } : null),\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/BottomNavigation/BottomNavigation.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","getBottomSpace","color","overlay","Icon","Surface","Badge","TouchableRipple","Text","black","white","withTheme","useAnimatedValue","useAnimatedValueArray","useLayout","useIsKeyboardShown","BottomNavigationRouteScreen","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","BOTTOM_INSET","FAR_FAR_AWAY","Platform","OS","Touchable","_0","route","style","children","borderless","centered","rippleColor","rest","supported","createElement","disabled","undefined","TouchableWithoutFeedback","View","SceneComponent","memo","component","BottomNavigation","navigationState","renderScene","renderIcon","renderLabel","renderTouchable","props","getLabelText","title","getBadge","badge","getColor","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","theme","sceneAnimationEnabled","onTabPress","onIndexChange","shifting","routes","safeAreaInsets","_safeAreaInsets$left","_safeAreaInsets$right","_safeAreaInsets$botto","scale","animation","focusedKey","index","visibleAnim","tabsAnims","map","_","offsetsAnims","indexAnim","rippleAnim","layout","onLayout","useState","loaded","setLoaded","includes","keyboardVisible","setKeyboardVisible","handleKeyboardShow","useCallback","Animated","timing","toValue","duration","useNativeDriver","start","handleKeyboardHide","animateToIndex","setValue","parallel","finished","tab","forEach","offset","useEffect","onShow","onHide","prevNavigationState","useRef","_prevNavigationState$","current","handleTabPress","event","defaultPrevented","preventDefault","jumpTo","findIndex","colors","isDarkTheme","dark","mode","StyleSheet","flatten","customBackground","backgroundColor","elevation","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","width","tabWidth","rippleSize","insets","left","right","bottom","styles","container","content","background","focused","opacity","top","pointerEvents","accessibilityElementsHidden","importantForAccessibility","visibility","absoluteFill","collapsable","removeClippedSubviews","bar","transform","translateY","height","position","measured","barContent","items","marginBottom","marginHorizontal","max","maxWidth","accessibilityRole","ripple","borderRadius","active","activeOpacity","inactiveOpacity","onPress","accessibilityTraits","accessibilityComponentType","accessibilityState","selected","item","iconContainer","iconWrapper","icon","size","badgeContainer","String","visible","labelContainer","labelWrapper","label","selectable","SceneMap","scenes","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","alignSelf","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { View, Animated, TouchableWithoutFeedback, StyleSheet, Platform } from 'react-native';\nimport { getBottomSpace } from 'react-native-iphone-x-helper';\nimport color from 'color';\nimport overlay from '../../styles/overlay';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport Badge from '../Badge';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport useAnimatedValue from '../../utils/useAnimatedValue';\nimport useAnimatedValueArray from '../../utils/useAnimatedValueArray';\nimport useLayout from '../../utils/useLayout';\nimport useIsKeyboardShown from '../../utils/useIsKeyboardShown';\nimport BottomNavigationRouteScreen from './BottomNavigationRouteScreen';\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\n\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst BOTTOM_INSET = getBottomSpace();\nconst FAR_FAR_AWAY = Platform.OS === 'web' ? 0 : 9999;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}) => TouchableRipple.supported ? /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n  disabled: rest.disabled || undefined,\n  borderless: borderless,\n  centered: centered,\n  rippleColor: rippleColor,\n  style: style\n}), children) : /*#__PURE__*/React.createElement(TouchableWithoutFeedback, rest, /*#__PURE__*/React.createElement(View, {\n  style: style\n}, children));\n\nconst SceneComponent = /*#__PURE__*/React.memo(({\n  component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(component, rest));\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tabs](https://github.com/react-navigation/react-navigation/tree/main/packages/material-bottom-tabs) and consult [createMaterialBottomTabNavigator](https://reactnavigation.org/docs/material-bottom-tab-navigator/) documentation.\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * const MyComponent = () => {\n *   const [index, setIndex] = React.useState(0);\n *   const [routes] = React.useState([\n *     { key: 'music', title: 'Music', icon: 'queue-music' },\n *     { key: 'albums', title: 'Albums', icon: 'album' },\n *     { key: 'recents', title: 'Recents', icon: 'history' },\n *   ]);\n *\n *   const renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   return (\n *     <BottomNavigation\n *       navigationState={{ index, routes }}\n *       onIndexChange={setIndex}\n *       renderScene={renderScene}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst BottomNavigation = ({\n  navigationState,\n  renderScene,\n  renderIcon,\n  renderLabel,\n  renderTouchable = props => /*#__PURE__*/React.createElement(Touchable, props),\n  getLabelText = ({\n    route\n  }) => route.title,\n  getBadge = ({\n    route\n  }) => route.badge,\n  getColor = ({\n    route\n  }) => route.color,\n  getAccessibilityLabel = ({\n    route\n  }) => route.accessibilityLabel,\n  getTestID = ({\n    route\n  }) => route.testID,\n  activeColor,\n  inactiveColor,\n  keyboardHidesNavigationBar = true,\n  barStyle,\n  labeled = true,\n  style,\n  theme,\n  sceneAnimationEnabled = false,\n  onTabPress,\n  onIndexChange,\n  shifting = navigationState.routes.length > 3,\n  safeAreaInsets\n}) => {\n  var _safeAreaInsets$left, _safeAreaInsets$right, _safeAreaInsets$botto;\n\n  const {\n    scale\n  } = theme.animation;\n  const focusedKey = navigationState.routes[navigationState.index].key;\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n\n  const visibleAnim = useAnimatedValue(1);\n  /**\n   * Active state of individual tab items, active state is 1 and inactive state is 0.\n   */\n\n  const tabsAnims = useAnimatedValueArray(navigationState.routes.map( // focused === 1, unfocused === 0\n  (_, i) => i === navigationState.index ? 1 : 0));\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecessary re-renders.\n   */\n\n  const offsetsAnims = useAnimatedValueArray(navigationState.routes.map( // offscreen === 1, normal === 0\n  (_, i) => i === navigationState.index ? 0 : 1));\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * We don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n\n  const indexAnim = useAnimatedValue(navigationState.index);\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n\n  const rippleAnim = useAnimatedValue(MIN_RIPPLE_SCALE);\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n\n  const [layout, onLayout] = useLayout();\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n\n  const [loaded, setLoaded] = React.useState([focusedKey]);\n\n  if (!loaded.includes(focusedKey)) {\n    // Set the current tab to be loaded if it was not loaded before\n    setLoaded(loaded => [...loaded, focusedKey]);\n  }\n  /**\n   * Track whether the keyboard is visible to show and hide the navigation bar.\n   */\n\n\n  const [keyboardVisible, setKeyboardVisible] = React.useState(false);\n  const handleKeyboardShow = React.useCallback(() => {\n    setKeyboardVisible(true);\n    Animated.timing(visibleAnim, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [scale, visibleAnim]);\n  const handleKeyboardHide = React.useCallback(() => {\n    Animated.timing(visibleAnim, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true\n    }).start(() => {\n      setKeyboardVisible(false);\n    });\n  }, [scale, visibleAnim]);\n  const animateToIndex = React.useCallback(index => {\n    // Reset the ripple to avoid glitch if it's currently animating\n    rippleAnim.setValue(MIN_RIPPLE_SCALE);\n    Animated.parallel([Animated.timing(rippleAnim, {\n      toValue: 1,\n      duration: shifting ? 400 * scale : 0,\n      useNativeDriver: true\n    }), ...navigationState.routes.map((_, i) => Animated.timing(tabsAnims[i], {\n      toValue: i === index ? 1 : 0,\n      duration: shifting ? 150 * scale : 0,\n      useNativeDriver: true\n    }))]).start(({\n      finished\n    }) => {\n      // Workaround a bug in native animations where this is reset after first animation\n      tabsAnims.map((tab, i) => tab.setValue(i === index ? 1 : 0)); // Update the index to change bar's background color and then hide the ripple\n\n      indexAnim.setValue(index);\n      rippleAnim.setValue(MIN_RIPPLE_SCALE);\n\n      if (finished) {\n        // Position all inactive screens offscreen to save memory usage\n        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n        offsetsAnims.forEach((offset, i) => {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  }, [indexAnim, shifting, navigationState.routes, offsetsAnims, rippleAnim, scale, tabsAnims]);\n  React.useEffect(() => {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    animateToIndex(navigationState.index); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useIsKeyboardShown({\n    onShow: handleKeyboardShow,\n    onHide: handleKeyboardHide\n  });\n  const prevNavigationState = React.useRef();\n  React.useEffect(() => {\n    // Reset offsets of previous and current tabs before animation\n    offsetsAnims.forEach((offset, i) => {\n      var _prevNavigationState$;\n\n      if (i === navigationState.index || i === ((_prevNavigationState$ = prevNavigationState.current) === null || _prevNavigationState$ === void 0 ? void 0 : _prevNavigationState$.index)) {\n        offset.setValue(0);\n      }\n    });\n    animateToIndex(navigationState.index);\n  }, [navigationState.index, animateToIndex, offsetsAnims]);\n\n  const handleTabPress = index => {\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      }\n    };\n    onTabPress === null || onTabPress === void 0 ? void 0 : onTabPress(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  const jumpTo = React.useCallback(key => {\n    const index = navigationState.routes.findIndex(route => route.key === key);\n    onIndexChange(index);\n  }, [navigationState.routes, onIndexChange]);\n  const {\n    routes\n  } = navigationState;\n  const {\n    colors,\n    dark: isDarkTheme,\n    mode\n  } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4\n  } = StyleSheet.flatten(barStyle) || {};\n  const approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n  const backgroundColor = shifting ? indexAnim.interpolate({\n    inputRange: routes.map((_, i) => i),\n    // FIXME: does outputRange support ColorValue or just strings?\n    // @ts-expect-error\n    outputRange: routes.map(route => getColor({\n      route\n    }) || approxBackgroundColor)\n  }) : approxBackgroundColor;\n  const isDark = typeof approxBackgroundColor === 'string' ? !color(approxBackgroundColor).isLight() : true;\n  const textColor = isDark ? white : black;\n  const activeTintColor = typeof activeColor !== 'undefined' ? activeColor : textColor;\n  const inactiveTintColor = typeof inactiveColor !== 'undefined' ? inactiveColor : color(textColor).alpha(0.5).rgb().string();\n  const touchColor = color(activeColor || activeTintColor).alpha(0.12).rgb().string();\n  const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n  const maxTabBarWidth = maxTabWidth * routes.length;\n  const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n  const tabWidth = tabBarWidth / routes.length;\n  const rippleSize = layout.width / 4;\n  const insets = {\n    left: (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : 0,\n    right: (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : 0,\n    bottom: (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : BOTTOM_INSET\n  };\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, {\n      backgroundColor: colors.background\n    }]\n  }, routes.map((route, index) => {\n    if (!loaded.includes(route.key)) {\n      // Don't render a screen if we've never navigated to it\n      return null;\n    }\n\n    const focused = navigationState.index === index;\n    const opacity = sceneAnimationEnabled ? tabsAnims[index] : focused ? 1 : 0;\n    const top = sceneAnimationEnabled ? offsetsAnims[index].interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, FAR_FAR_AWAY]\n    }) : focused ? 0 : FAR_FAR_AWAY;\n    return /*#__PURE__*/React.createElement(BottomNavigationRouteScreen, {\n      key: route.key,\n      pointerEvents: focused ? 'auto' : 'none',\n      accessibilityElementsHidden: !focused,\n      importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n      index: index,\n      visibility: opacity,\n      style: [StyleSheet.absoluteFill, {\n        opacity\n      }],\n      collapsable: false,\n      removeClippedSubviews: // On iOS, set removeClippedSubviews to true only when not focused\n      // This is an workaround for a bug where the clipped view never re-appears\n      Platform.OS === 'ios' ? navigationState.index !== index : true\n    }, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.content, {\n        top\n      }]\n    }, renderScene({\n      route,\n      jumpTo\n    })));\n  })), /*#__PURE__*/React.createElement(Surface, {\n    style: [styles.bar, keyboardHidesNavigationBar ? {\n      // When the keyboard is shown, slide down the navigation bar\n      transform: [{\n        translateY: visibleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height, 0]\n        })\n      }],\n      // Absolutely position the navigation bar so that the content is below it\n      // This is needed to avoid gap at bottom when the navigation bar is hidden\n      position: keyboardVisible ? 'absolute' : null\n    } : null, barStyle],\n    pointerEvents: layout.measured ? keyboardHidesNavigationBar && keyboardVisible ? 'none' : 'auto' : 'none',\n    onLayout: onLayout\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.barContent, {\n      backgroundColor\n    }]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.items, {\n      marginBottom: insets.bottom,\n      marginHorizontal: Math.max(insets.left, insets.right),\n      maxWidth: maxTabBarWidth\n    }],\n    accessibilityRole: 'tablist'\n  }, shifting ? /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [styles.ripple, {\n      // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n      // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n      top: (BAR_HEIGHT - rippleSize) / 2,\n      left: tabWidth * (navigationState.index + 0.5) - rippleSize / 2,\n      height: rippleSize,\n      width: rippleSize,\n      borderRadius: rippleSize / 2,\n      backgroundColor: getColor({\n        route: routes[navigationState.index]\n      }),\n      transform: [{\n        // Scale to twice the size  to ensure it covers the whole navigation bar\n        scale: rippleAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 8]\n        })\n      }],\n      opacity: rippleAnim.interpolate({\n        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n        outputRange: [0, 0, 1, 1]\n      })\n    }]\n  }) : null, routes.map((route, index) => {\n    const focused = navigationState.index === index;\n    const active = tabsAnims[index]; // Scale the label up\n\n    const scale = labeled && shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1; // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n\n    const translateY = labeled ? shifting ? active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [7, 0]\n    }) : 0 : 7; // We render the active icon and label on top of inactive ones and cross-fade them on change.\n    // This trick gives the illusion that we are animating between active and inactive colors.\n    // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n\n    const activeOpacity = active;\n    const inactiveOpacity = active.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    });\n    const badge = getBadge({\n      route\n    });\n    return renderTouchable({\n      key: route.key,\n      route,\n      borderless: true,\n      centered: true,\n      rippleColor: touchColor,\n      onPress: () => handleTabPress(index),\n      testID: getTestID({\n        route\n      }),\n      accessibilityLabel: getAccessibilityLabel({\n        route\n      }),\n      // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      accessibilityTraits: focused ? ['button', 'selected'] : 'button',\n      accessibilityComponentType: 'button',\n      accessibilityRole: Platform.OS === 'ios' ? 'button' : 'tab',\n      accessibilityState: {\n        selected: focused\n      },\n      style: styles.item,\n      children: /*#__PURE__*/React.createElement(View, {\n        pointerEvents: \"none\"\n      }, /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.iconContainer, {\n          transform: [{\n            translateY\n          }]\n        }]\n      }, /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.iconWrapper, {\n          opacity: activeOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route,\n        focused: true,\n        color: activeTintColor\n      }) : /*#__PURE__*/React.createElement(Icon, {\n        source: route.icon,\n        color: activeTintColor,\n        size: 24\n      })), /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.iconWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderIcon ? renderIcon({\n        route,\n        focused: false,\n        color: inactiveTintColor\n      }) : /*#__PURE__*/React.createElement(Icon, {\n        source: route.icon,\n        color: inactiveTintColor,\n        size: 24\n      })), /*#__PURE__*/React.createElement(View, {\n        style: [styles.badgeContainer, {\n          right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - 2\n        }]\n      }, typeof badge === 'boolean' ? /*#__PURE__*/React.createElement(Badge, {\n        visible: badge,\n        size: 8\n      }) : /*#__PURE__*/React.createElement(Badge, {\n        visible: badge != null,\n        size: 16\n      }, badge))), labeled ? /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.labelContainer, {\n          transform: [{\n            scale\n          }]\n        }]\n      }, /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: activeOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route,\n        focused: true,\n        color: activeTintColor\n      }) : /*#__PURE__*/React.createElement(Text, {\n        style: [styles.label, {\n          color: activeTintColor\n        }]\n      }, getLabelText({\n        route\n      }))), shifting ? null : /*#__PURE__*/React.createElement(Animated.View, {\n        style: [styles.labelWrapper, {\n          opacity: inactiveOpacity\n        }]\n      }, renderLabel ? renderLabel({\n        route,\n        focused: false,\n        color: inactiveTintColor\n      }) : /*#__PURE__*/React.createElement(Text, {\n        selectable: false,\n        style: [styles.label, {\n          color: inactiveTintColor\n        }]\n      }, getLabelText({\n        route\n      })))) : /*#__PURE__*/React.createElement(View, {\n        style: styles.labelContainer\n      }))\n    });\n  })))));\n};\n/**\n * Function which takes a map of route keys to components.\n * Pure components are used to minimize re-rendering of the pages.\n * This drastically improves the animation performance.\n */\n\n\nBottomNavigation.SceneMap = scenes => {\n  return ({\n    route,\n    jumpTo\n  }) => /*#__PURE__*/React.createElement(SceneComponent, {\n    key: route.key,\n    component: scenes[route.key ? route.key : ''],\n    route: route,\n    jumpTo: jumpTo\n  });\n};\n\nexport default withTheme(BottomNavigation);\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: {\n    flexDirection: 'row',\n    ...(Platform.OS === 'web' ? {\n      width: '100%'\n    } : null)\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  iconWrapper: { ...StyleSheet.absoluteFillObject,\n    alignItems: 'center'\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: { ...StyleSheet.absoluteFillObject\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  label: {\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web' ? {\n      whiteSpace: 'nowrap',\n      alignSelf: 'center'\n    } : null)\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2\n  }\n});\n//# sourceMappingURL=BottomNavigation.js.map"]},"metadata":{},"sourceType":"module"}