{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"color\", \"size\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar MaterialCommunityIcons;\n\ntry {\n  MaterialCommunityIcons = require(\"@expo/vector-icons/MaterialCommunityIcons\").default;\n} catch (e) {\n  var isErrorLogged = false;\n\n  MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n    var name = _ref.name,\n        color = _ref.color,\n        size = _ref.size,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n\n      console.warn(\"Tried to use the icon '\" + name + \"' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\", \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n      isErrorLogged = true;\n    }\n\n    return React.createElement(Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color: color,\n        fontSize: size\n      }],\n      pointerEvents: \"none\",\n      selectable: false\n    }), \"\\u25A1\");\n  };\n}\n\nexport var accessibilityProps = Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\n\nvar defaultIcon = function defaultIcon(_ref2) {\n  var name = _ref2.name,\n      color = _ref2.color,\n      size = _ref2.size,\n      direction = _ref2.direction,\n      allowFontScaling = _ref2.allowFontScaling;\n  return React.createElement(MaterialCommunityIcons, _extends({\n    allowFontScaling: allowFontScaling,\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }],\n      lineHeight: size\n    }, styles.icon],\n    pointerEvents: \"none\",\n    selectable: false\n  }, accessibilityProps));\n};\n\nvar styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport default defaultIcon;","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/MaterialCommunityIcon.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","rest","test","message","console","error","warn","createElement","Text","style","styles","icon","fontSize","pointerEvents","selectable","accessibilityProps","Platform","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","allowFontScaling","transform","scaleX","lineHeight","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { StyleSheet, Text, Platform } from 'react-native';\nlet MaterialCommunityIcons;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false; // Fallback component for icons\n\n  MaterialCommunityIcons = ({\n    name,\n    color,\n    size,\n    ...rest\n  }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n\n      console.warn(`Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`, `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`);\n      isErrorLogged = true;\n    }\n\n    return /*#__PURE__*/React.createElement(Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color,\n        fontSize: size\n      }] // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n      ,\n      pointerEvents: \"none\",\n      selectable: false\n    }), \"\\u25A1\");\n  };\n}\n\nexport const accessibilityProps = Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\n\nconst defaultIcon = ({\n  name,\n  color,\n  size,\n  direction,\n  allowFontScaling\n}) => /*#__PURE__*/React.createElement(MaterialCommunityIcons, _extends({\n  allowFontScaling: allowFontScaling,\n  name: name,\n  color: color,\n  size: size,\n  style: [{\n    transform: [{\n      scaleX: direction === 'rtl' ? -1 : 1\n    }],\n    lineHeight: size\n  }, styles.icon],\n  pointerEvents: \"none\",\n  selectable: false\n}, accessibilityProps));\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport default defaultIcon;\n//# sourceMappingURL=MaterialCommunityIcon.js.map"]},"metadata":{},"sourceType":"module"}