{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { ListAccordionGroupContext } from \"./ListAccordionGroup\";\n\nvar ListAccordion = function ListAccordion(_ref) {\n  var left = _ref.left,\n      right = _ref.right,\n      title = _ref.title,\n      description = _ref.description,\n      children = _ref.children,\n      theme = _ref.theme,\n      titleStyle = _ref.titleStyle,\n      descriptionStyle = _ref.descriptionStyle,\n      _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n      titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n      _ref$descriptionNumbe = _ref.descriptionNumberOfLines,\n      descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,\n      style = _ref.style,\n      id = _ref.id,\n      testID = _ref.testID,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      expandedProp = _ref.expanded,\n      accessibilityLabel = _ref.accessibilityLabel;\n\n  var _React$useState = React.useState(expandedProp || false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var handlePressAction = function handlePressAction() {\n    onPress === null || onPress === void 0 ? void 0 : onPress();\n\n    if (expandedProp === undefined) {\n      setExpanded(function (expanded) {\n        return !expanded;\n      });\n    }\n  };\n\n  var titleColor = color(theme.colors.text).alpha(0.87).rgb().string();\n  var descriptionColor = color(theme.colors.text).alpha(0.54).rgb().string();\n  var expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n  var groupContext = React.useContext(ListAccordionGroupContext);\n\n  if (groupContext !== null && !id) {\n    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n  }\n\n  var isExpanded = groupContext ? groupContext.expandedId === id : expandedInternal;\n  var handlePress = groupContext && id !== undefined ? function () {\n    return groupContext.onAccordionPress(id);\n  } : handlePressAction;\n  return React.createElement(View, null, React.createElement(View, {\n    style: {\n      backgroundColor: theme.colors.background\n    }\n  }, React.createElement(TouchableRipple, {\n    style: [styles.container, style],\n    onPress: handlePress,\n    onLongPress: onLongPress,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: isExpanded\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    delayPressIn: 0,\n    borderless: true\n  }, React.createElement(View, {\n    style: styles.row,\n    pointerEvents: \"none\"\n  }, left ? left({\n    color: isExpanded ? theme.colors.primary : descriptionColor\n  }) : null, React.createElement(View, {\n    style: [styles.item, styles.content]\n  }, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: titleNumberOfLines,\n    style: [styles.title, {\n      color: isExpanded ? theme.colors.primary : titleColor\n    }, titleStyle]\n  }, title), description ? React.createElement(Text, {\n    selectable: false,\n    numberOfLines: descriptionNumberOfLines,\n    style: [styles.description, {\n      color: descriptionColor\n    }, descriptionStyle]\n  }, description) : null), React.createElement(View, {\n    style: [styles.item, description ? styles.multiline : undefined]\n  }, right ? right({\n    isExpanded: isExpanded\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: isExpanded ? 'chevron-up' : 'chevron-down',\n    color: titleColor,\n    size: 24,\n    direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n  }))))), isExpanded ? React.Children.map(children, function (child) {\n    if (left && React.isValidElement(child) && !child.props.left && !child.props.right) {\n      return React.cloneElement(child, {\n        style: [styles.child, child.props.style]\n      });\n    }\n\n    return child;\n  }) : null);\n};\n\nListAccordion.displayName = 'List.Accordion';\nvar styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    margin: 8\n  },\n  child: {\n    paddingLeft: 64\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(ListAccordion);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/List/ListAccordion.js"],"names":["color","React","TouchableRipple","MaterialCommunityIcon","Text","withTheme","ListAccordionGroupContext","ListAccordion","left","right","title","description","children","theme","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","onPress","onLongPress","expandedProp","expanded","accessibilityLabel","useState","setExpanded","handlePressAction","undefined","titleColor","colors","text","alpha","rgb","string","descriptionColor","expandedInternal","groupContext","useContext","Error","isExpanded","expandedId","handlePress","onAccordionPress","createElement","View","backgroundColor","background","styles","container","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","delayPressIn","borderless","row","pointerEvents","primary","item","content","selectable","numberOfLines","multiline","name","size","direction","I18nManager","isRTL","Children","map","child","isValidElement","props","cloneElement","displayName","StyleSheet","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, I18nManager } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { ListAccordionGroupContext } from './ListAccordionGroup';\n\n/**\n * A component used to display an expandable list item.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-accordion-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-accordion-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [expanded, setExpanded] = React.useState(true);\n *\n *   const handlePress = () => setExpanded(!expanded);\n *\n *   return (\n *     <List.Section title=\"Accordions\">\n *       <List.Accordion\n *         title=\"Uncontrolled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *\n *       <List.Accordion\n *         title=\"Controlled Accordion\"\n *         left={props => <List.Icon {...props} icon=\"folder\" />}\n *         expanded={expanded}\n *         onPress={handlePress}>\n *         <List.Item title=\"First item\" />\n *         <List.Item title=\"Second item\" />\n *       </List.Accordion>\n *     </List.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst ListAccordion = ({\n  left,\n  right,\n  title,\n  description,\n  children,\n  theme,\n  titleStyle,\n  descriptionStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  style,\n  id,\n  testID,\n  onPress,\n  onLongPress,\n  expanded: expandedProp,\n  accessibilityLabel\n}) => {\n  const [expanded, setExpanded] = React.useState(expandedProp || false);\n\n  const handlePressAction = () => {\n    onPress === null || onPress === void 0 ? void 0 : onPress();\n\n    if (expandedProp === undefined) {\n      // Only update state of the `expanded` prop was not passed\n      // If it was passed, the component will act as a controlled component\n      setExpanded(expanded => !expanded);\n    }\n  };\n\n  const titleColor = color(theme.colors.text).alpha(0.87).rgb().string();\n  const descriptionColor = color(theme.colors.text).alpha(0.54).rgb().string();\n  const expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n  const groupContext = React.useContext(ListAccordionGroupContext);\n\n  if (groupContext !== null && !id) {\n    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n  }\n\n  const isExpanded = groupContext ? groupContext.expandedId === id : expandedInternal;\n  const handlePress = groupContext && id !== undefined ? () => groupContext.onAccordionPress(id) : handlePressAction;\n  return /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {\n    style: {\n      backgroundColor: theme.colors.background\n    }\n  }, /*#__PURE__*/React.createElement(TouchableRipple, {\n    style: [styles.container, style],\n    onPress: handlePress,\n    onLongPress: onLongPress // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: isExpanded\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    delayPressIn: 0,\n    borderless: true\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.row,\n    pointerEvents: \"none\"\n  }, left ? left({\n    color: isExpanded ? theme.colors.primary : descriptionColor\n  }) : null, /*#__PURE__*/React.createElement(View, {\n    style: [styles.item, styles.content]\n  }, /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: titleNumberOfLines,\n    style: [styles.title, {\n      color: isExpanded ? theme.colors.primary : titleColor\n    }, titleStyle]\n  }, title), description ? /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: descriptionNumberOfLines,\n    style: [styles.description, {\n      color: descriptionColor\n    }, descriptionStyle]\n  }, description) : null), /*#__PURE__*/React.createElement(View, {\n    style: [styles.item, description ? styles.multiline : undefined]\n  }, right ? right({\n    isExpanded: isExpanded\n  }) : /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    name: isExpanded ? 'chevron-up' : 'chevron-down',\n    color: titleColor,\n    size: 24,\n    direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n  }))))), isExpanded ? React.Children.map(children, child => {\n    if (left && /*#__PURE__*/React.isValidElement(child) && !child.props.left && !child.props.right) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        style: [styles.child, child.props.style]\n      });\n    }\n\n    return child;\n  }) : null);\n};\n\nListAccordion.displayName = 'List.Accordion';\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    margin: 8\n  },\n  child: {\n    paddingLeft: 64\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(ListAccordion);\n//# sourceMappingURL=ListAccordion.js.map"]},"metadata":{},"sourceType":"module"}