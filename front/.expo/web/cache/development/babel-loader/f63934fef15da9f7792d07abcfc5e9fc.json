{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"inset\", \"style\", \"theme\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../core/theming\";\nimport { black, white } from \"../styles/colors\";\n\nvar Divider = function Divider(_ref) {\n  var inset = _ref.inset,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isDarkTheme = theme.dark;\n  return React.createElement(View, _extends({}, rest, {\n    style: [isDarkTheme ? styles.dark : styles.light, inset && styles.inset, style]\n  }));\n};\n\nvar styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth\n  },\n  dark: {\n    backgroundColor: color(white).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth\n  },\n  inset: {\n    marginLeft: 72\n  }\n});\nexport default withTheme(Divider);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Divider.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","withTheme","black","white","Divider","inset","style","theme","rest","isDarkTheme","dark","createElement","View","styles","light","StyleSheet","create","backgroundColor","alpha","rgb","string","height","hairlineWidth","marginLeft"],"mappings":";;;AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT;AACA,SAASC,KAAT,EAAgBC,KAAhB;;AA6BA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAKV;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,IACC;;AACJ,MACQC,WADR,GAEIF,KAFJ,CACEG,IADF;AAGA,SAAoBX,KAAK,CAACY,aAAN,CAAoBC,IAApB,EAA0B1B,QAAQ,CAAC,EAAD,EAAKsB,IAAL,EAAW;AAC/DF,IAAAA,KAAK,EAAE,CAACG,WAAW,GAAGI,MAAM,CAACH,IAAV,GAAiBG,MAAM,CAACC,KAApC,EAA2CT,KAAK,IAAIQ,MAAM,CAACR,KAA3D,EAAkEC,KAAlE;AADwD,GAAX,CAAlC,CAApB;AAGD,CAZD;;AAcA,IAAMO,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,KAAK,EAAE;AACLG,IAAAA,eAAe,EAAEjB,KAAK,CAACE,KAAD,CAAL,CAAagB,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EADZ;AAELC,IAAAA,MAAM,EAAEN,UAAU,CAACO;AAFd,GADwB;AAK/BZ,EAAAA,IAAI,EAAE;AACJO,IAAAA,eAAe,EAAEjB,KAAK,CAACG,KAAD,CAAL,CAAae,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EADb;AAEJC,IAAAA,MAAM,EAAEN,UAAU,CAACO;AAFf,GALyB;AAS/BjB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,UAAU,EAAE;AADP;AATwB,CAAlB,CAAf;AAaA,eAAetB,SAAS,CAACG,OAAD,CAAxB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({\n  inset,\n  style,\n  theme,\n  ...rest\n}) => {\n  const {\n    dark: isDarkTheme\n  } = theme;\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    style: [isDarkTheme ? styles.dark : styles.light, inset && styles.inset, style]\n  }));\n};\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth\n  },\n  dark: {\n    backgroundColor: color(white).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth\n  },\n  inset: {\n    marginLeft: 72\n  }\n});\nexport default withTheme(Divider);\n//# sourceMappingURL=Divider.js.map"]},"metadata":{},"sourceType":"module"}