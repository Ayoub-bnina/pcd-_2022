{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime/helpers/objectSpread\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nexport var getCombinedStyles = function getCombinedStyles(_ref) {\n  var isAnimatedFromRight = _ref.isAnimatedFromRight,\n      isIconStatic = _ref.isIconStatic,\n      distance = _ref.distance,\n      animFAB = _ref.animFAB;\n  var isRTL = I18nManager.isRTL;\n  var defaultPositionStyles = {\n    left: -distance,\n    right: undefined\n  };\n  var combinedStyles = {\n    innerWrapper: _objectSpread({}, defaultPositionStyles),\n    iconWrapper: _objectSpread2({}, defaultPositionStyles),\n    absoluteFill: {}\n  };\n  var animatedFromRight = isAnimatedFromRight && !isRTL;\n  var animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  var animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  var animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [distance, 0]\n      })\n    }];\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [Math.abs(distance) / 2, Math.abs(distance)]\n      })\n    }];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [0, distance]\n      })\n    }];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? distance : animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [distance, distance * 2]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, Math.abs(distance) / 2]\n      })\n    }];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [-distance, -distance * 2]\n      }) : -distance\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n  }\n\n  return combinedStyles;\n};","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/FAB/AnimatedFAB/utils.js"],"names":["getCombinedStyles","isAnimatedFromRight","isIconStatic","distance","animFAB","isRTL","I18nManager","defaultPositionStyles","left","right","undefined","combinedStyles","innerWrapper","iconWrapper","absoluteFill","animatedFromRight","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","transform","translateX","interpolate","inputRange","outputRange","Math","abs"],"mappings":"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","sourcesContent":["import { I18nManager } from 'react-native';\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB\n}) => {\n  const {\n    isRTL\n  } = I18nManager;\n  const defaultPositionStyles = {\n    left: -distance,\n    right: undefined\n  };\n  const combinedStyles = {\n    innerWrapper: { ...defaultPositionStyles\n    },\n    iconWrapper: { ...defaultPositionStyles\n    },\n    absoluteFill: {}\n  };\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [distance, 0]\n      })\n    }];\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [Math.abs(distance) / 2, Math.abs(distance)]\n      })\n    }];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [0, distance]\n      })\n    }];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? distance : animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [distance, distance * 2]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, Math.abs(distance) / 2]\n      })\n    }];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [-distance, -distance * 2]\n      }) : -distance\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n  }\n\n  return combinedStyles;\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}