{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime/helpers/objectSpread\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport { Appearance } from \"react-native-web/dist/index\";\nimport { ThemeProvider } from \"./theming\";\nimport { Provider as SettingsProvider } from \"./settings\";\nimport MaterialCommunityIcon from \"../components/MaterialCommunityIcon\";\nimport PortalHost from \"../components/Portal/PortalHost\";\nimport DefaultTheme from \"../styles/DefaultTheme\";\nimport DarkTheme from \"../styles/DarkTheme\";\n\nvar Provider = function Provider(_ref) {\n  var props = _extends({}, _ref);\n\n  var colorSchemeName = !props.theme && (Appearance === null || Appearance === void 0 ? void 0 : Appearance.getColorScheme()) || 'light';\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reduceMotionEnabled = _React$useState2[0],\n      setReduceMotionEnabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colorSchemeName),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorScheme = _React$useState4[0],\n      setColorScheme = _React$useState4[1];\n\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(function () {\n    var subscription;\n\n    if (!props.theme) {\n      subscription = AccessibilityInfo.addEventListener('reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n\n        if ((_subscription = subscription) !== null && _subscription !== void 0 && _subscription.remove) {\n          subscription.remove();\n        } else {\n          AccessibilityInfo.removeEventListener('reduceMotionChanged', setReduceMotionEnabled);\n        }\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n\n    if (!props.theme) {\n      appearanceSubscription = Appearance === null || Appearance === void 0 ? void 0 : Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return function () {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance === null || Appearance === void 0 ? void 0 : Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  var getTheme = function getTheme() {\n    var providedTheme = props.theme;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      var theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n      return _objectSpread(_objectSpread({}, theme), {}, {\n        animation: _objectSpread2(_objectSpread2({}, theme.animation), {}, {\n          scale: reduceMotionEnabled ? 0 : 1\n        })\n      });\n    }\n  };\n\n  var children = props.children,\n      settings = props.settings;\n  return React.createElement(PortalHost, null, React.createElement(SettingsProvider, {\n    value: settings || {\n      icon: MaterialCommunityIcon\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\n\nexport default Provider;","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/core/Provider.js"],"names":["React","Appearance","ThemeProvider","Provider","SettingsProvider","MaterialCommunityIcon","PortalHost","DefaultTheme","DarkTheme","props","colorSchemeName","theme","getColorScheme","useState","reduceMotionEnabled","setReduceMotionEnabled","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","AccessibilityInfo","addEventListener","_subscription","remove","removeEventListener","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","providedTheme","animation","scale","children","settings","createElement","value","icon"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { AccessibilityInfo, Appearance } from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\n\nconst Provider = ({ ...props\n}) => {\n  const colorSchemeName = !props.theme && (Appearance === null || Appearance === void 0 ? void 0 : Appearance.getColorScheme()) || 'light';\n  const [reduceMotionEnabled, setReduceMotionEnabled] = React.useState(false);\n  const [colorScheme, setColorScheme] = React.useState(colorSchemeName);\n\n  const handleAppearanceChange = preferences => {\n    const {\n      colorScheme\n    } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription;\n\n    if (!props.theme) {\n      subscription = AccessibilityInfo.addEventListener('reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return () => {\n      if (!props.theme) {\n        var _subscription;\n\n        if ((_subscription = subscription) !== null && _subscription !== void 0 && _subscription.remove) {\n          subscription.remove();\n        } else {\n          AccessibilityInfo.removeEventListener('reduceMotionChanged', setReduceMotionEnabled);\n        }\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(() => {\n    let appearanceSubscription;\n\n    if (!props.theme) {\n      appearanceSubscription = Appearance === null || Appearance === void 0 ? void 0 : Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance === null || Appearance === void 0 ? void 0 : Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const {\n      theme: providedTheme\n    } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n      return { ...theme,\n        animation: { ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1\n        }\n      };\n    }\n  };\n\n  const {\n    children,\n    settings\n  } = props;\n  return /*#__PURE__*/React.createElement(PortalHost, null, /*#__PURE__*/React.createElement(SettingsProvider, {\n    value: settings || {\n      icon: MaterialCommunityIcon\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\n\nexport default Provider;\n//# sourceMappingURL=Provider.js.map"]},"metadata":{},"sourceType":"module"}