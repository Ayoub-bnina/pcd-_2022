{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport conditional from \"../utils/conditional\";\nvar add = Animated.add,\n    multiply = Animated.multiply;\nexport function forHorizontalIOS(_ref) {\n  var current = _ref.current,\n      next = _ref.next,\n      inverted = _ref.inverted,\n      screen = _ref.layouts.screen;\n  var translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  var shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [{\n        translateX: translateFocused\n      }, {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity: shadowOpacity\n    }\n  };\n}\nexport function forVerticalIOS(_ref2) {\n  var current = _ref2.current,\n      inverted = _ref2.inverted,\n      screen = _ref2.layouts.screen;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forModalPresentationIOS(_ref3) {\n  var index = _ref3.index,\n      current = _ref3.current,\n      next = _ref3.next,\n      inverted = _ref3.inverted,\n      screen = _ref3.layouts.screen,\n      insets = _ref3.insets;\n  var isLandscape = screen.width > screen.height;\n  var topOffset = isLandscape ? 0 : 10;\n  var statusBarHeight = insets.top;\n  var aspectRatio = screen.height / screen.width;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, index === 0 ? 0 : topOffset, (index === 0 ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  var overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  var scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  var borderRadius = isLandscape ? 0 : index === 0 ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, isIphoneX() ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      marginTop: index === 0 ? 0 : statusBarHeight,\n      marginBottom: index === 0 ? 0 : topOffset,\n      transform: [{\n        translateY: translateY\n      }, {\n        scale: scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromBottomAndroid(_ref4) {\n  var current = _ref4.current,\n      inverted = _ref4.inverted,\n      screen = _ref4.layouts.screen,\n      closing = _ref4.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1]\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forRevealFromBottomAndroid(_ref5) {\n  var current = _ref5.current,\n      next = _ref5.next,\n      inverted = _ref5.inverted,\n      screen = _ref5.layouts.screen;\n  var containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forScaleFromCenterAndroid(_ref6) {\n  var current = _ref6.current,\n      next = _ref6.next,\n      closing = _ref6.closing;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 0.8, 1, 1.2, 2],\n    outputRange: [0, 0.5, 1, 0.33, 0]\n  });\n  var scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.9, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.1]\n  }));\n  return {\n    containerStyle: {\n      opacity: opacity,\n      transform: [{\n        scale: scale\n      }]\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-navigation-stack/lib/module/vendor/TransitionConfigs/CardStyleInterpolators.js"],"names":["isIphoneX","conditional","add","Animated","multiply","forHorizontalIOS","current","next","inverted","screen","layouts","translateFocused","progress","interpolate","inputRange","outputRange","width","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","forVerticalIOS","translateY","height","forModalPresentationIOS","index","insets","isLandscape","topOffset","statusBarHeight","top","aspectRatio","scale","borderRadius","overflow","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","forFadeFromBottomAndroid","closing","forRevealFromBottomAndroid","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle","forScaleFromCenterAndroid","forNoAnimation"],"mappings":";AACA,SAASA,SAAT,QAA0B,8BAA1B;AACA,OAAOC,WAAP;AACA,IACEC,GADF,GAGIC,QAHJ,CACED,GADF;AAAA,IAEEE,QAFF,GAGID,QAHJ,CAEEC,QAFF;AAQA,OAAO,SAASC,gBAAT,OAOJ;AAAA,MANDC,OAMC,QANDA,OAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAFCC,MAED,QAHDC,OAGC,CAFCD,MAED;AACD,MAAME,gBAAgB,GAAGP,QAAQ,CAACE,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAC7DC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADiD;AAE7DC,IAAAA,WAAW,EAAE,CAACN,MAAM,CAACO,KAAR,EAAe,CAAf,CAFgD;AAG7DC,IAAAA,WAAW,EAAE;AAHgD,GAA7B,CAAD,EAI7BT,QAJ6B,CAAjC;AAKA,MAAMU,kBAAkB,GAAGX,IAAI,GAAGH,QAAQ,CAACG,IAAI,CAACK,QAAL,CAAcC,WAAd,CAA0B;AACnEC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADuD;AAEnEC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAIN,MAAM,CAACO,KAAP,GAAe,CAAC,GAApB,CAFsD;AAGnEC,IAAAA,WAAW,EAAE;AAHsD,GAA1B,CAAD,EAItCT,QAJsC,CAAX,GAIf,CAJhB;AAKA,MAAMW,cAAc,GAAGb,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAClDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADsC;AAElDC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,IAAJ,CAFqC;AAGlDE,IAAAA,WAAW,EAAE;AAHqC,GAA7B,CAAvB;AAKA,MAAMG,aAAa,GAAGd,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AACjDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADqC;AAEjDC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,CAFoC;AAGjDE,IAAAA,WAAW,EAAE;AAHoC,GAA7B,CAAtB;AAKA,SAAO;AACLI,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,CACX;AACEC,QAAAA,UAAU,EAAEZ;AADd,OADW,EAIX;AACEY,QAAAA,UAAU,EAAEL;AADd,OAJW;AADF,KADN;AAULM,IAAAA,YAAY,EAAE;AACZC,MAAAA,OAAO,EAAEN;AADG,KAVT;AAaLO,IAAAA,WAAW,EAAE;AACXN,MAAAA,aAAa,EAAbA;AADW;AAbR,GAAP;AAiBD;AAKD,OAAO,SAASO,cAAT,QAMJ;AAAA,MALDrB,OAKC,SALDA,OAKC;AAAA,MAJDE,QAIC,SAJDA,QAIC;AAAA,MAFCC,MAED,SAHDC,OAGC,CAFCD,MAED;AACD,MAAMmB,UAAU,GAAGxB,QAAQ,CAACE,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AACvDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD2C;AAEvDC,IAAAA,WAAW,EAAE,CAACN,MAAM,CAACoB,MAAR,EAAgB,CAAhB,CAF0C;AAGvDZ,IAAAA,WAAW,EAAE;AAH0C,GAA7B,CAAD,EAIvBT,QAJuB,CAA3B;AAKA,SAAO;AACLa,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,CACX;AACEM,QAAAA,UAAU,EAAVA;AADF,OADW;AADF;AADN,GAAP;AAQD;AAKD,OAAO,SAASE,uBAAT,QASJ;AAAA,MARDC,KAQC,SARDA,KAQC;AAAA,MAPDzB,OAOC,SAPDA,OAOC;AAAA,MANDC,IAMC,SANDA,IAMC;AAAA,MALDC,QAKC,SALDA,QAKC;AAAA,MAHCC,MAGD,SAJDC,OAIC,CAHCD,MAGD;AAAA,MADDuB,MACC,SADDA,MACC;AACD,MAAMC,WAAW,GAAGxB,MAAM,CAACO,KAAP,GAAeP,MAAM,CAACoB,MAA1C;AACA,MAAMK,SAAS,GAAGD,WAAW,GAAG,CAAH,GAAO,EAApC;AACA,MAAME,eAAe,GAAGH,MAAM,CAACI,GAA/B;AACA,MAAMC,WAAW,GAAG5B,MAAM,CAACoB,MAAP,GAAgBpB,MAAM,CAACO,KAA3C;AACA,MAAMJ,QAAQ,GAAGV,GAAG,CAACI,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAChDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoC;AAEhDC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFmC;AAGhDE,IAAAA,WAAW,EAAE;AAHmC,GAA7B,CAAD,EAIhBV,IAAI,GAAGA,IAAI,CAACK,QAAL,CAAcC,WAAd,CAA0B;AACnCC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADuB;AAEnCC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFsB;AAGnCE,IAAAA,WAAW,EAAE;AAHsB,GAA1B,CAAH,GAIH,CARe,CAApB;AASA,MAAMW,UAAU,GAAGxB,QAAQ,CAACQ,QAAQ,CAACC,WAAT,CAAqB;AAC/CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADmC;AAE/CC,IAAAA,WAAW,EAAE,CAACN,MAAM,CAACoB,MAAR,EAAgBE,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBG,SAAlC,EAA6C,CAACH,KAAK,KAAK,CAAV,GAAcI,eAAd,GAAgC,CAAjC,IAAsCD,SAAS,GAAGG,WAA/F;AAFkC,GAArB,CAAD,EAGvB7B,QAHuB,CAA3B;AAIA,MAAMW,cAAc,GAAGP,QAAQ,CAACC,WAAT,CAAqB;AAC1CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,EAAe,CAAf,CAD8B;AAE1CC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,CAAZ;AAF6B,GAArB,CAAvB;AAIA,MAAMuB,KAAK,GAAGL,WAAW,GAAG,CAAH,GAAOrB,QAAQ,CAACC,WAAT,CAAqB;AACnDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADuC;AAEnDC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAON,MAAM,CAACO,KAAP,GAAe,IAAIkB,SAAS,GAAG,CAAZ,GAAgBzB,MAAM,CAACO,KAA1C,GAAkD,CAAzD;AAFsC,GAArB,CAAhC;AAIA,MAAMuB,YAAY,GAAGN,WAAW,GAAG,CAAH,GAAOF,KAAK,KAAK,CAAV,GAAcnB,QAAQ,CAACC,WAAT,CAAqB;AACxEC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,EAAe,CAAf,CAD4D;AAExEC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAOf,SAAS,KAAK,EAAL,GAAU,CAA1B,EAA6B,EAA7B;AAF2D,GAArB,CAAd,GAGlC,EAHL;AAIA,SAAO;AACLqB,IAAAA,SAAS,EAAE;AACTmB,MAAAA,QAAQ,EAAE,QADD;AAETC,MAAAA,mBAAmB,EAAEF,YAFZ;AAGTG,MAAAA,oBAAoB,EAAEH,YAHb;AAITI,MAAAA,SAAS,EAAEZ,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBI,eAJpB;AAKTS,MAAAA,YAAY,EAAEb,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBG,SALvB;AAMTZ,MAAAA,SAAS,EAAE,CAAC;AACVM,QAAAA,UAAU,EAAVA;AADU,OAAD,EAER;AACDU,QAAAA,KAAK,EAALA;AADC,OAFQ;AANF,KADN;AAaLd,IAAAA,YAAY,EAAE;AACZC,MAAAA,OAAO,EAAEN;AADG;AAbT,GAAP;AAiBD;AAKD,OAAO,SAAS0B,wBAAT,QAOJ;AAAA,MANDvC,OAMC,SANDA,OAMC;AAAA,MALDE,QAKC,SALDA,QAKC;AAAA,MAHCC,MAGD,SAJDC,OAIC,CAHCD,MAGD;AAAA,MADDqC,OACC,SADDA,OACC;AACD,MAAMlB,UAAU,GAAGxB,QAAQ,CAACE,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AACvDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD2C;AAEvDC,IAAAA,WAAW,EAAE,CAACN,MAAM,CAACoB,MAAP,GAAgB,IAAjB,EAAuB,CAAvB,CAF0C;AAGvDZ,IAAAA,WAAW,EAAE;AAH0C,GAA7B,CAAD,EAIvBT,QAJuB,CAA3B;AAKA,MAAMiB,OAAO,GAAGxB,WAAW,CAAC6C,OAAD,EAAUxC,OAAO,CAACM,QAAlB,EAA4BN,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAClFC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,CAAd,CADsE;AAElFC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,GAAV,EAAe,CAAf;AAFqE,GAA7B,CAA5B,CAA3B;AAIA,SAAO;AACLM,IAAAA,SAAS,EAAE;AACTI,MAAAA,OAAO,EAAPA,OADS;AAETH,MAAAA,SAAS,EAAE,CAAC;AACVM,QAAAA,UAAU,EAAVA;AADU,OAAD;AAFF;AADN,GAAP;AAQD;AAKD,OAAO,SAASmB,0BAAT,QAOJ;AAAA,MANDzC,OAMC,SANDA,OAMC;AAAA,MALDC,IAKC,SALDA,IAKC;AAAA,MAJDC,QAIC,SAJDA,QAIC;AAAA,MAFCC,MAED,SAHDC,OAGC,CAFCD,MAED;AACD,MAAMuC,mBAAmB,GAAG5C,QAAQ,CAACE,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAChEC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoD;AAEhEC,IAAAA,WAAW,EAAE,CAACN,MAAM,CAACoB,MAAR,EAAgB,CAAhB,CAFmD;AAGhEZ,IAAAA,WAAW,EAAE;AAHmD,GAA7B,CAAD,EAIhCT,QAJgC,CAApC;AAKA,MAAMyC,qBAAqB,GAAG7C,QAAQ,CAACE,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAClEC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADsD;AAElEC,IAAAA,WAAW,EAAE,CAACN,MAAM,CAACoB,MAAP,IAAiB,OAAO,GAAxB,IAA+B,CAAC,CAAjC,EAAoC,CAApC,CAFqD;AAGlEZ,IAAAA,WAAW,EAAE;AAHqD,GAA7B,CAAD,EAIlCT,QAJkC,CAAtC;AAKA,MAAM0C,uBAAuB,GAAG3C,IAAI,GAAGH,QAAQ,CAACG,IAAI,CAACK,QAAL,CAAcC,WAAd,CAA0B;AACxEC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD4D;AAExEC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAIN,MAAM,CAACoB,MAAP,IAAiB,IAAI,GAArB,IAA4B,CAAC,CAAjC,CAF2D;AAGxEZ,IAAAA,WAAW,EAAE;AAH2D,GAA1B,CAAD,EAI3CT,QAJ2C,CAAX,GAIpB,CAJhB;AAKA,MAAMW,cAAc,GAAGb,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAClDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAV,CADsC;AAElDC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CAFqC;AAGlDE,IAAAA,WAAW,EAAE;AAHqC,GAA7B,CAAvB;AAKA,SAAO;AACLkC,IAAAA,cAAc,EAAE;AACdX,MAAAA,QAAQ,EAAE,QADI;AAEdlB,MAAAA,SAAS,EAAE,CAAC;AACVM,QAAAA,UAAU,EAAEoB;AADF,OAAD;AAFG,KADX;AAOL3B,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE,CAAC;AACVM,QAAAA,UAAU,EAAEqB;AADF,OAAD,EAER;AACDrB,QAAAA,UAAU,EAAEsB;AADX,OAFQ;AADF,KAPN;AAcL1B,IAAAA,YAAY,EAAE;AACZC,MAAAA,OAAO,EAAEN;AADG;AAdT,GAAP;AAkBD;AAKD,OAAO,SAASiC,yBAAT,QAIJ;AAAA,MAHD9C,OAGC,SAHDA,OAGC;AAAA,MAFDC,IAEC,SAFDA,IAEC;AAAA,MADDuC,OACC,SADDA,OACC;AACD,MAAMlC,QAAQ,GAAGV,GAAG,CAACI,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAChDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoC;AAEhDC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFmC;AAGhDE,IAAAA,WAAW,EAAE;AAHmC,GAA7B,CAAD,EAIhBV,IAAI,GAAGA,IAAI,CAACK,QAAL,CAAcC,WAAd,CAA0B;AACnCC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADuB;AAEnCC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFsB;AAGnCE,IAAAA,WAAW,EAAE;AAHsB,GAA1B,CAAH,GAIH,CARe,CAApB;AASA,MAAMQ,OAAO,GAAGb,QAAQ,CAACC,WAAT,CAAqB;AACnCC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CADuB;AAEnCC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,EAAY,IAAZ,EAAkB,CAAlB;AAFsB,GAArB,CAAhB;AAIA,MAAMuB,KAAK,GAAGrC,WAAW,CAAC6C,OAAD,EAAUxC,OAAO,CAACM,QAAR,CAAiBC,WAAjB,CAA6B;AAC9DC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkD;AAE9DC,IAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN,CAFiD;AAG9DE,IAAAA,WAAW,EAAE;AAHiD,GAA7B,CAAV,EAIrBL,QAAQ,CAACC,WAAT,CAAqB;AACvBC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADW;AAEvBC,IAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,CAAP,EAAU,GAAV;AAFU,GAArB,CAJqB,CAAzB;AAQA,SAAO;AACLoC,IAAAA,cAAc,EAAE;AACd1B,MAAAA,OAAO,EAAPA,OADc;AAEdH,MAAAA,SAAS,EAAE,CAAC;AACVgB,QAAAA,KAAK,EAALA;AADU,OAAD;AAFG;AADX,GAAP;AAQD;AACD,OAAO,SAASe,cAAT,GAA0B;AAC/B,SAAO,EAAP;AACD","sourcesContent":["import { Animated } from 'react-native';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport conditional from '../utils/conditional';\nconst {\n  add,\n  multiply\n} = Animated;\n/**\n * Standard iOS-style slide in from the right.\n */\n\nexport function forHorizontalIOS({\n  current,\n  next,\n  inverted,\n  layouts: {\n    screen\n  }\n}) {\n  const translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [// Translation for the animation of the current card\n      {\n        translateX: translateFocused\n      }, // Translation for the animation of the card on top of this\n      {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity\n    }\n  };\n}\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\n\nexport function forVerticalIOS({\n  current,\n  inverted,\n  layouts: {\n    screen\n  }\n}) {\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [// Translation for the animation of the current card\n      {\n        translateY\n      }]\n    }\n  };\n}\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\n\nexport function forModalPresentationIOS({\n  index,\n  current,\n  next,\n  inverted,\n  layouts: {\n    screen\n  },\n  insets\n}) {\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, index === 0 ? 0 : topOffset, (index === 0 ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  const scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  const borderRadius = isLandscape ? 0 : index === 0 ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, isIphoneX() ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      marginTop: index === 0 ? 0 : statusBarHeight,\n      marginBottom: index === 0 ? 0 : topOffset,\n      transform: [{\n        translateY\n      }, {\n        scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\n\nexport function forFadeFromBottomAndroid({\n  current,\n  inverted,\n  layouts: {\n    screen\n  },\n  closing\n}) {\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1]\n  }));\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{\n        translateY\n      }]\n    }\n  };\n}\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\n\nexport function forRevealFromBottomAndroid({\n  current,\n  next,\n  inverted,\n  layouts: {\n    screen\n  }\n}) {\n  const containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n/**\n * Standard Android-style reveal from the bottom for Android Q.\n */\n\nexport function forScaleFromCenterAndroid({\n  current,\n  next,\n  closing\n}) {\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.8, 1, 1.2, 2],\n    outputRange: [0, 0.5, 1, 0.33, 0]\n  });\n  const scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.9, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.1]\n  }));\n  return {\n    containerStyle: {\n      opacity,\n      transform: [{\n        scale\n      }]\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}\n//# sourceMappingURL=CardStyleInterpolators.js.map"]},"metadata":{},"sourceType":"module"}