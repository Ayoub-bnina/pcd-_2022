{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"clearAccessibilityLabel\", \"clearIcon\", \"icon\", \"iconColor\", \"inputStyle\", \"onIconPress\", \"placeholder\", \"searchAccessibilityLabel\", \"style\", \"theme\", \"value\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"./IconButton\";\nimport Surface from \"./Surface\";\nimport { withTheme } from \"../core/theming\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nvar Searchbar = React.forwardRef(function (_ref, ref) {\n  var _ref$clearAccessibili = _ref.clearAccessibilityLabel,\n      clearAccessibilityLabel = _ref$clearAccessibili === void 0 ? 'clear' : _ref$clearAccessibili,\n      clearIcon = _ref.clearIcon,\n      icon = _ref.icon,\n      customIconColor = _ref.iconColor,\n      inputStyle = _ref.inputStyle,\n      onIconPress = _ref.onIconPress,\n      placeholder = _ref.placeholder,\n      _ref$searchAccessibil = _ref.searchAccessibilityLabel,\n      searchAccessibilityLabel = _ref$searchAccessibil === void 0 ? 'search' : _ref$searchAccessibil,\n      style = _ref.style,\n      theme = _ref.theme,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var root = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    var input = root.current;\n\n    if (input) {\n      return {\n        focus: function focus() {\n          return input.focus();\n        },\n        clear: function clear() {\n          return input.clear();\n        },\n        setNativeProps: function setNativeProps(args) {\n          return input.setNativeProps(args);\n        },\n        isFocused: function isFocused() {\n          return input.isFocused();\n        },\n        blur: function blur() {\n          return input.blur();\n        }\n      };\n    }\n\n    var noop = function noop() {\n      throw new Error('TextInput is not available');\n    };\n\n    return {\n      focus: noop,\n      clear: noop,\n      setNativeProps: noop,\n      isFocused: noop,\n      blur: noop\n    };\n  });\n\n  var handleClearPress = function handleClearPress() {\n    var _root$current, _rest$onChangeText;\n\n    (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.clear();\n    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 ? void 0 : _rest$onChangeText.call(rest, '');\n  };\n\n  var colors = theme.colors,\n      roundness = theme.roundness,\n      dark = theme.dark,\n      fonts = theme.fonts;\n  var textColor = colors.text;\n  var font = fonts.regular;\n  var iconColor = customIconColor || (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n  var rippleColor = color(textColor).alpha(0.32).rgb().string();\n  return React.createElement(Surface, {\n    style: [{\n      borderRadius: roundness,\n      elevation: 4\n    }, styles.container, style]\n  }, React.createElement(IconButton, {\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onIconPress,\n    color: iconColor,\n    icon: icon || function (_ref2) {\n      var size = _ref2.size,\n          color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"magnify\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    accessibilityLabel: searchAccessibilityLabel\n  }), React.createElement(TextInput, _extends({\n    style: [styles.input, _objectSpread(_objectSpread({\n      color: textColor\n    }, font), Platform.select({\n      web: {\n        outline: 'none'\n      }\n    })), inputStyle],\n    placeholder: placeholder || '',\n    placeholderTextColor: colors.placeholder,\n    selectionColor: colors.primary,\n    underlineColorAndroid: \"transparent\",\n    returnKeyType: \"search\",\n    keyboardAppearance: dark ? 'dark' : 'light',\n    accessibilityTraits: \"search\",\n    accessibilityRole: \"search\",\n    ref: root,\n    value: value\n  }, rest)), React.createElement(IconButton, {\n    borderless: true,\n    disabled: !value,\n    accessibilityLabel: clearAccessibilityLabel,\n    color: value ? iconColor : 'rgba(255, 255, 255, 0)',\n    rippleColor: rippleColor,\n    onPress: handleClearPress,\n    icon: clearIcon || function (_ref3) {\n      var size = _ref3.size,\n          color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"close\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\"\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0\n  }\n});\nexport default withTheme(Searchbar);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Searchbar.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","IconButton","Surface","withTheme","MaterialCommunityIcon","Searchbar","forwardRef","ref","clearAccessibilityLabel","clearIcon","icon","customIconColor","iconColor","inputStyle","onIconPress","placeholder","searchAccessibilityLabel","style","theme","value","rest","root","useRef","useImperativeHandle","input","current","focus","clear","setNativeProps","args","isFocused","blur","noop","Error","handleClearPress","_root$current","_rest$onChangeText","onChangeText","colors","roundness","dark","fonts","textColor","text","font","regular","alpha","rgb","string","rippleColor","createElement","borderRadius","elevation","styles","container","accessibilityTraits","accessibilityComponentType","accessibilityRole","borderless","onPress","size","name","direction","I18nManager","isRTL","accessibilityLabel","TextInput","Platform","select","web","outline","placeholderTextColor","selectionColor","primary","underlineColorAndroid","returnKeyType","keyboardAppearance","disabled","StyleSheet","create","flexDirection","alignItems","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Platform, StyleSheet, TextInput, I18nManager } from 'react-native';\nimport color from 'color';\nimport IconButton from './IconButton';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   const onChangeSearch = query => setSearchQuery(query);\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={onChangeSearch}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nconst Searchbar = /*#__PURE__*/React.forwardRef(({\n  clearAccessibilityLabel = 'clear',\n  clearIcon,\n  icon,\n  iconColor: customIconColor,\n  inputStyle,\n  onIconPress,\n  placeholder,\n  searchAccessibilityLabel = 'search',\n  style,\n  theme,\n  value,\n  ...rest\n}, ref) => {\n  const root = React.useRef(null);\n  React.useImperativeHandle(ref, () => {\n    const input = root.current;\n\n    if (input) {\n      return {\n        focus: () => input.focus(),\n        clear: () => input.clear(),\n        setNativeProps: args => input.setNativeProps(args),\n        isFocused: () => input.isFocused(),\n        blur: () => input.blur()\n      };\n    }\n\n    const noop = () => {\n      throw new Error('TextInput is not available');\n    };\n\n    return {\n      focus: noop,\n      clear: noop,\n      setNativeProps: noop,\n      isFocused: noop,\n      blur: noop\n    };\n  });\n\n  const handleClearPress = () => {\n    var _root$current, _rest$onChangeText;\n\n    (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.clear();\n    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 ? void 0 : _rest$onChangeText.call(rest, '');\n  };\n\n  const {\n    colors,\n    roundness,\n    dark,\n    fonts\n  } = theme;\n  const textColor = colors.text;\n  const font = fonts.regular;\n  const iconColor = customIconColor || (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n  const rippleColor = color(textColor).alpha(0.32).rgb().string();\n  return /*#__PURE__*/React.createElement(Surface, {\n    style: [{\n      borderRadius: roundness,\n      elevation: 4\n    }, styles.container, style]\n  }, /*#__PURE__*/React.createElement(IconButton // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n  , {\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onIconPress,\n    color: iconColor,\n    icon: icon || (({\n      size,\n      color\n    }) => /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n      name: \"magnify\",\n      color: color,\n      size: size,\n      direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n    })),\n    accessibilityLabel: searchAccessibilityLabel\n  }), /*#__PURE__*/React.createElement(TextInput, _extends({\n    style: [styles.input, {\n      color: textColor,\n      ...font,\n      ...Platform.select({\n        web: {\n          outline: 'none'\n        }\n      })\n    }, inputStyle],\n    placeholder: placeholder || '',\n    placeholderTextColor: colors.placeholder,\n    selectionColor: colors.primary,\n    underlineColorAndroid: \"transparent\",\n    returnKeyType: \"search\",\n    keyboardAppearance: dark ? 'dark' : 'light' // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: \"search\",\n    accessibilityRole: \"search\",\n    ref: root,\n    value: value\n  }, rest)), /*#__PURE__*/React.createElement(IconButton, {\n    borderless: true,\n    disabled: !value,\n    accessibilityLabel: clearAccessibilityLabel,\n    color: value ? iconColor : 'rgba(255, 255, 255, 0)',\n    rippleColor: rippleColor,\n    onPress: handleClearPress,\n    icon: clearIcon || (({\n      size,\n      color\n    }) => /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n      name: \"close\",\n      color: color,\n      size: size,\n      direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n    })) // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\"\n  }));\n});\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0\n  }\n});\nexport default withTheme(Searchbar);\n//# sourceMappingURL=Searchbar.js.map"]},"metadata":{},"sourceType":"module"}