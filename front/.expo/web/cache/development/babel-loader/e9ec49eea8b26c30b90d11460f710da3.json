{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { StackActions } from 'react-navigation';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\nimport HeaderSegment, { getDefaultHeaderHeight } from \"./HeaderSegment\";\nimport HeaderTitle from \"./HeaderTitle\";\nimport debounce from \"../../utils/debounce\";\nvar Header = React.memo(function Header(props) {\n  var scene = props.scene,\n      previous = props.previous,\n      layout = props.layout,\n      insets = props.insets,\n      navigation = props.navigation,\n      styleInterpolator = props.styleInterpolator;\n  var options = scene.descriptor.options;\n  var title = typeof options.headerTitle !== 'function' && options.headerTitle !== undefined ? options.headerTitle : options.title !== undefined ? options.title : scene.route.routeName;\n  var leftLabel;\n\n  if (options.headerBackTitle !== undefined) {\n    leftLabel = options.headerBackTitle;\n  } else if (previous) {\n    var o = previous.descriptor.options;\n    leftLabel = typeof o.headerTitle !== 'function' && o.headerTitle !== undefined ? o.headerTitle : o.title !== undefined ? o.title : previous.route.routeName;\n  }\n\n  var goBack = React.useCallback(debounce(function () {\n    var _navigation$dangerous;\n\n    var key = navigation.isFirstRouteInParent() ? (_navigation$dangerous = navigation.dangerouslyGetParent()) === null || _navigation$dangerous === void 0 ? void 0 : _navigation$dangerous.state.key : scene.route.key;\n\n    if (key !== undefined) {\n      navigation.dispatch(StackActions.pop({\n        key: key\n      }));\n    }\n  }, 50), [navigation, scene.route.key]);\n  return React.createElement(HeaderSegment, _extends({}, options, {\n    insets: insets,\n    layout: layout,\n    scene: scene,\n    title: title,\n    leftLabel: leftLabel,\n    headerTitle: typeof options.headerTitle !== 'function' ? function (props) {\n      return React.createElement(HeaderTitle, props);\n    } : options.headerTitle,\n    onGoBack: previous ? goBack : undefined,\n    styleInterpolator: styleInterpolator\n  }));\n});\nObject.defineProperty(Header, 'HEIGHT', {\n  get: function get() {\n    console.warn(\"Deprecation in 'createStackNavigator': 'Header.HEIGHT' will be removed in a future version. Use 'useHeaderHeight' or 'HeaderHeightContext' instead\");\n    return getDefaultHeaderHeight(Dimensions.get('window'), getStatusBarHeight(true));\n  }\n});\nexport default Header;","map":{"version":3,"mappings":"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","names":["React","StackActions","getStatusBarHeight","HeaderSegment","getDefaultHeaderHeight","HeaderTitle","debounce","Header","memo","props","scene","previous","layout","insets","navigation","styleInterpolator","options","descriptor","title","headerTitle","undefined","route","routeName","leftLabel","headerBackTitle","o","goBack","useCallback","key","isFirstRouteInParent","dangerouslyGetParent","_navigation$dangerous","state","dispatch","pop","onGoBack","Object","defineProperty","get","console","warn","Dimensions"],"sources":["Header.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport { StackActions } from 'react-navigation';\nimport { getStatusBarHeight } from 'react-native-iphone-x-helper';\n\nimport HeaderSegment, { getDefaultHeaderHeight } from './HeaderSegment';\n\nimport HeaderTitle from './HeaderTitle';\nimport debounce from '../../utils/debounce';\nimport type { StackHeaderProps, StackHeaderTitleProps } from '../../types';\n\nconst Header = React.memo(function Header(props: StackHeaderProps) {\n  const {\n    scene,\n    previous,\n    layout,\n    insets,\n    navigation,\n    styleInterpolator,\n  } = props;\n  const { options } = scene.descriptor;\n  const title =\n    typeof options.headerTitle !== 'function' &&\n    options.headerTitle !== undefined\n      ? options.headerTitle\n      : options.title !== undefined\n      ? options.title\n      : scene.route.routeName;\n\n  let leftLabel;\n\n  // The label for the left back button shows the title of the previous screen\n  // If a custom label is specified, we use it, otherwise use previous screen's title\n  if (options.headerBackTitle !== undefined) {\n    leftLabel = options.headerBackTitle;\n  } else if (previous) {\n    const o = previous.descriptor.options;\n\n    leftLabel =\n      typeof o.headerTitle !== 'function' && o.headerTitle !== undefined\n        ? o.headerTitle\n        : o.title !== undefined\n        ? o.title\n        : previous.route.routeName;\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goBack = React.useCallback(\n    debounce(() => {\n      const key = navigation.isFirstRouteInParent()\n        ? // If we're the first route, we're going back to a parent navigator\n          // So we need to get the key of the route we're nested in\n          navigation.dangerouslyGetParent()?.state.key\n        : scene.route.key;\n\n      if (key !== undefined) {\n        navigation.dispatch(StackActions.pop({ key }));\n      }\n    }, 50),\n    [navigation, scene.route.key]\n  );\n\n  return (\n    <HeaderSegment\n      {...options}\n      insets={insets}\n      layout={layout}\n      scene={scene}\n      title={title}\n      leftLabel={leftLabel}\n      headerTitle={\n        typeof options.headerTitle !== 'function'\n          ? (props: StackHeaderTitleProps) => {\n              // @ts-ignore\n              return <HeaderTitle {...props} />;\n            }\n          : options.headerTitle\n      }\n      onGoBack={previous ? goBack : undefined}\n      styleInterpolator={styleInterpolator}\n    />\n  );\n});\n\nObject.defineProperty(Header, 'HEIGHT', {\n  get() {\n    console.warn(\n      \"Deprecation in 'createStackNavigator': 'Header.HEIGHT' will be removed in a future version. Use 'useHeaderHeight' or 'HeaderHeightContext' instead\"\n    );\n\n    return getDefaultHeaderHeight(\n      Dimensions.get('window'),\n      getStatusBarHeight(true)\n    );\n  },\n});\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}