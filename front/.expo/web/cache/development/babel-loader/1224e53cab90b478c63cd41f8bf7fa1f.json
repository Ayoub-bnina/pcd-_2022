{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { NavigationActions, ThemeProvider, pathUtils, getNavigation, NavigationProvider } from '@react-navigation/core';\nimport invariant from \"./utils/invariant\";\nimport docsUrl from \"./utils/docsUrl\";\nvar urlToPathAndParams = pathUtils.urlToPathAndParams;\n\nfunction isStateful(props) {\n  return !props.navigation;\n}\n\nfunction validateProps(props) {\n  if (props.persistenceKey) {\n    console.warn('You passed persistenceKey prop to a navigator. ' + 'The persistenceKey prop was replaced by a more flexible persistence mechanism, ' + 'please see the navigation state persistence docs for more information. ' + 'Passing the persistenceKey prop is a no-op.');\n  }\n\n  if (isStateful(props)) {\n    return;\n  }\n\n  var navigation = props.navigation,\n      screenProps = props.screenProps,\n      persistNavigationState = props.persistNavigationState,\n      loadNavigationState = props.loadNavigationState,\n      theme = props.theme,\n      containerProps = _objectWithoutProperties(props, [\"navigation\", \"screenProps\", \"persistNavigationState\", \"loadNavigationState\", \"theme\"]);\n\n  var keys = Object.keys(containerProps);\n\n  if (keys.length !== 0) {\n    throw new Error('This navigator has both navigation and container props, so it is ' + \"unclear if it should own its own state. Remove props: \\\"\".concat(keys.join(', '), \"\\\" \") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n  }\n\n  invariant(persistNavigationState === undefined && loadNavigationState === undefined || typeof persistNavigationState === 'function' && typeof loadNavigationState === 'function', 'both persistNavigationState and loadNavigationState must either be undefined, or be functions');\n}\n\nvar _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n}\nvar _reactNavigationIsHydratingState = false;\nexport default function createNavigationContainer(Component) {\n  var NavigationContainer = function (_React$Component) {\n    _inherits(NavigationContainer, _React$Component);\n\n    var _super = _createSuper(NavigationContainer);\n\n    function NavigationContainer(props) {\n      var _this;\n\n      _classCallCheck(this, NavigationContainer);\n\n      _this = _super.call(this, props);\n\n      _defineProperty(_assertThisInitialized(_this), \"subs\", null);\n\n      _defineProperty(_assertThisInitialized(_this), \"_actionEventSubscribers\", new Set());\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleOpenURL\", function (_ref) {\n        var url = _ref.url;\n        var _this$props = _this.props,\n            enableURLHandling = _this$props.enableURLHandling,\n            uriPrefix = _this$props.uriPrefix;\n\n        if (enableURLHandling === false) {\n          return;\n        }\n\n        var parsedUrl = urlToPathAndParams(url, uriPrefix);\n\n        if (parsedUrl) {\n          var path = parsedUrl.path,\n              params = parsedUrl.params;\n          var action = Component.router.getActionForPathAndParams(path, params);\n\n          if (action) {\n            _this.dispatch(action);\n          }\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_persistNavigationState\", function _callee(nav) {\n        var persistNavigationState;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                persistNavigationState = _this.props.persistNavigationState;\n\n                if (!persistNavigationState) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(persistNavigationState(nav));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.warn('Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.');\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"dispatch\", function (action) {\n        if (_this.props.navigation) {\n          return _this.props.navigation.dispatch(action);\n        }\n\n        _this._navState = _this._navState || _this.state.nav;\n        var lastNavState = _this._navState;\n        invariant(lastNavState, 'should be set in constructor if stateful');\n        var reducedState = Component.router.getStateForAction(action, lastNavState);\n        var navState = reducedState === null ? lastNavState : reducedState;\n\n        var dispatchActionEvents = function dispatchActionEvents() {\n          _this._actionEventSubscribers.forEach(function (subscriber) {\n            return subscriber({\n              type: 'action',\n              action: action,\n              state: navState,\n              lastState: lastNavState\n            });\n          });\n        };\n\n        if (reducedState === null) {\n          dispatchActionEvents();\n          return true;\n        }\n\n        if (navState !== lastNavState) {\n          _this._navState = navState;\n\n          _this.setState({\n            nav: navState\n          }, function () {\n            _this._onNavigationStateChange(lastNavState, navState, action);\n\n            dispatchActionEvents();\n\n            _this._persistNavigationState(navState);\n          });\n\n          return true;\n        }\n\n        dispatchActionEvents();\n        return false;\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_getScreenProps\", function () {\n        return _this.props.screenProps;\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"_getTheme\", function () {\n        if (_this.props.theme === 'light' || _this.props.theme === 'dark') {\n          return _this.props.theme;\n        } else if (_this.props.theme === 'no-preference') {\n          return 'light';\n        } else {\n          console.warn(\"Invalid theme provided: \".concat(_this.props.theme, \". Only 'light' and 'dark' are supported. Falling back to 'light'\"));\n          return 'light';\n        }\n      });\n\n      validateProps(props);\n      _this._initialAction = NavigationActions.init();\n\n      if (_this._isStateful() && BackHandler && typeof BackHandler.addEventListener === 'function') {\n        _this.subs = BackHandler.addEventListener('hardwareBackPress', function () {\n          if (!_this._isMounted) {\n            _this.subs && _this.subs.remove();\n          } else {\n            return _this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n\n      _this.state = {\n        nav: _this._isStateful() && !props.loadNavigationState ? Component.router.getStateForAction(_this._initialAction) : null\n      };\n      return _this;\n    }\n\n    _createClass(NavigationContainer, [{\n      key: \"_renderLoading\",\n      value: function _renderLoading() {\n        return this.props.renderLoadingExperimental ? this.props.renderLoadingExperimental() : null;\n      }\n    }, {\n      key: \"_isStateful\",\n      value: function _isStateful() {\n        return isStateful(this.props);\n      }\n    }, {\n      key: \"_onNavigationStateChange\",\n      value: function _onNavigationStateChange(prevNav, nav, action) {\n        if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {\n          if (console.group) {\n            console.group('Navigation Dispatch: ');\n            console.log('Action: ', action);\n            console.log('New State: ', nav);\n            console.log('Last State: ', prevNav);\n            console.groupEnd();\n          } else {\n            console.log('Navigation Dispatch: ', {\n              action: action,\n              newState: nav,\n              lastState: prevNav\n            });\n          }\n\n          return;\n        }\n\n        if (typeof this.props.onNavigationStateChange === 'function') {\n          this.props.onNavigationStateChange(prevNav, nav, action);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        if (this._navState === this.state.nav) {\n          this._navState = null;\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        var parsedUrl, userProvidedStartupState, _await$this$getStartu, action, startupState, _parsedUrl, path, params, urlAction, dispatchActions;\n\n        return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this._isMounted = true;\n\n                if (this._isStateful()) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                if (process.env.NODE_ENV !== 'production' && !this.props.detached) {\n                  if (_statefulContainerCount > 0) {\n                    if (Platform.OS === 'ios') {\n                      console.warn(\"You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: \".concat(docsUrl('common-mistakes.html#explicitly-rendering-more-than-one-navigator')));\n                    }\n                  }\n                }\n\n                _statefulContainerCount++;\n                Linking.addEventListener('url', this._handleOpenURL);\n                parsedUrl = null;\n                userProvidedStartupState = null;\n\n                if (!(this.props.enableURLHandling !== false)) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                _context2.next = 11;\n                return _regeneratorRuntime.awrap(this.getStartupParams());\n\n              case 11:\n                _await$this$getStartu = _context2.sent;\n                parsedUrl = _await$this$getStartu.parsedUrl;\n                userProvidedStartupState = _await$this$getStartu.userProvidedStartupState;\n\n              case 14:\n                action = this._initialAction;\n                startupState = this.state.nav;\n\n                if (!startupState && !userProvidedStartupState) {\n                  !!process.env.REACT_NAV_LOGGING && console.log('Init new Navigation State');\n                  startupState = Component.router.getStateForAction(action);\n                }\n\n                if (userProvidedStartupState) {\n                  startupState = userProvidedStartupState;\n                  _reactNavigationIsHydratingState = true;\n                }\n\n                if (parsedUrl) {\n                  _parsedUrl = parsedUrl, path = _parsedUrl.path, params = _parsedUrl.params;\n                  urlAction = Component.router.getActionForPathAndParams(path, params);\n\n                  if (urlAction) {\n                    !!process.env.REACT_NAV_LOGGING && console.log('Applying Navigation Action for Initial URL:', parsedUrl);\n                    action = urlAction;\n                    startupState = Component.router.getStateForAction(urlAction, startupState);\n                  }\n                }\n\n                dispatchActions = function dispatchActions() {\n                  return _this2._actionEventSubscribers.forEach(function (subscriber) {\n                    return subscriber({\n                      type: 'action',\n                      action: action,\n                      state: _this2.state.nav,\n                      lastState: null\n                    });\n                  });\n                };\n\n                if (!(startupState === this.state.nav)) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                dispatchActions();\n                return _context2.abrupt(\"return\");\n\n              case 23:\n                this.setState({\n                  nav: startupState\n                }, function () {\n                  _reactNavigationIsHydratingState = false;\n                  dispatchActions();\n                });\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"getStartupParams\",\n      value: function getStartupParams() {\n        var _this$props2, uriPrefix, loadNavigationState, url, loadedNavState, _await$Promise$all, _await$Promise$all2;\n\n        return _regeneratorRuntime.async(function getStartupParams$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$props2 = this.props, uriPrefix = _this$props2.uriPrefix, loadNavigationState = _this$props2.loadNavigationState;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return _regeneratorRuntime.awrap(Promise.all([Linking.getInitialURL(), loadNavigationState && loadNavigationState()]));\n\n              case 4:\n                _await$Promise$all = _context3.sent;\n                _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n                url = _await$Promise$all2[0];\n                loadedNavState = _await$Promise$all2[1];\n                _context3.next = 12;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](1);\n\n              case 12:\n                return _context3.abrupt(\"return\", {\n                  parsedUrl: url && urlToPathAndParams(url, uriPrefix),\n                  userProvidedStartupState: loadedNavState\n                });\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this, [[1, 10]], Promise);\n      }\n    }, {\n      key: \"componentDidCatch\",\n      value: function componentDidCatch(e) {\n        if (_reactNavigationIsHydratingState) {\n          _reactNavigationIsHydratingState = false;\n          console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...');\n          this.dispatch(NavigationActions.init());\n        } else {\n          throw e;\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._isMounted = false;\n        Linking.removeEventListener('url', this._handleOpenURL);\n        this.subs && this.subs.remove();\n\n        if (this._isStateful()) {\n          _statefulContainerCount--;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var navigation = this.props.navigation;\n\n        if (this._isStateful()) {\n          var navState = this.state.nav;\n\n          if (!navState) {\n            return this._renderLoading();\n          }\n\n          if (!this._navigation || this._navigation.state !== navState) {\n            this._navigation = getNavigation(Component.router, navState, this.dispatch, this._actionEventSubscribers, this._getScreenProps, function () {\n              return _this3._navigation;\n            });\n          }\n\n          navigation = this._navigation;\n        }\n\n        invariant(navigation, 'failed to get navigation');\n        return React.createElement(ThemeProvider, {\n          value: this._getTheme()\n        }, React.createElement(NavigationProvider, {\n          value: navigation\n        }, React.createElement(Component, _extends({}, this.props, {\n          navigation: navigation\n        }))));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps) {\n        validateProps(nextProps);\n        return null;\n      }\n    }]);\n\n    return NavigationContainer;\n  }(React.Component);\n\n  _defineProperty(NavigationContainer, \"router\", Component.router);\n\n  _defineProperty(NavigationContainer, \"navigationOptions\", null);\n\n  _defineProperty(NavigationContainer, \"defaultProps\", {\n    theme: 'light'\n  });\n\n  return NavigationContainer;\n}","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-navigation/node_modules/@react-navigation/native/lib/module/createAppContainer.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","NavigationActions","ThemeProvider","pathUtils","getNavigation","NavigationProvider","invariant","docsUrl","urlToPathAndParams","isStateful","props","navigation","validateProps","persistenceKey","console","warn","screenProps","persistNavigationState","loadNavigationState","theme","containerProps","Error","concat","join","undefined","_statefulContainerCount","_TESTING_ONLY_reset_container_count","_reactNavigationIsHydratingState","createNavigationContainer","Component","NavigationContainer","Set","url","enableURLHandling","uriPrefix","parsedUrl","path","params","action","router","getActionForPathAndParams","dispatch","nav","_navState","state","lastNavState","reducedState","getStateForAction","navState","dispatchActionEvents","_actionEventSubscribers","forEach","subscriber","type","lastState","setState","_onNavigationStateChange","_persistNavigationState","_initialAction","init","_isStateful","BackHandler","addEventListener","subs","_isMounted","remove","back","renderLoadingExperimental","prevNav","onNavigationStateChange","process","env","REACT_NAV_LOGGING","group","log","groupEnd","newState","NODE_ENV","detached","Platform","OS","Linking","_handleOpenURL","userProvidedStartupState","getStartupParams","startupState","urlAction","dispatchActions","Promise","all","getInitialURL","loadedNavState","e","removeEventListener","_renderLoading","_navigation","_getScreenProps","createElement","_getTheme","nextProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable react/sort-comp */\nimport React from 'react';\nimport { Linking, Platform, BackHandler } from 'react-native';\nimport { NavigationActions, ThemeProvider, pathUtils, getNavigation, NavigationProvider } from '@react-navigation/core';\nimport invariant from './utils/invariant';\nimport docsUrl from './utils/docsUrl';\nconst {\n  urlToPathAndParams\n} = pathUtils;\n\nfunction isStateful(props) {\n  return !props.navigation;\n}\n\nfunction validateProps(props) {\n  if (props.persistenceKey) {\n    console.warn('You passed persistenceKey prop to a navigator. ' + 'The persistenceKey prop was replaced by a more flexible persistence mechanism, ' + 'please see the navigation state persistence docs for more information. ' + 'Passing the persistenceKey prop is a no-op.');\n  }\n\n  if (isStateful(props)) {\n    return;\n  }\n  /* eslint-disable no-unused-vars */\n\n\n  const {\n    navigation,\n    screenProps,\n    persistNavigationState,\n    loadNavigationState,\n    theme\n  } = props,\n        containerProps = _objectWithoutProperties(props, [\"navigation\", \"screenProps\", \"persistNavigationState\", \"loadNavigationState\", \"theme\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  const keys = Object.keys(containerProps);\n\n  if (keys.length !== 0) {\n    throw new Error('This navigator has both navigation and container props, so it is ' + \"unclear if it should own its own state. Remove props: \\\"\".concat(keys.join(', '), \"\\\" \") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n  }\n\n  invariant(persistNavigationState === undefined && loadNavigationState === undefined || typeof persistNavigationState === 'function' && typeof loadNavigationState === 'function', 'both persistNavigationState and loadNavigationState must either be undefined, or be functions');\n} // Track the number of stateful container instances. Warn if >0 and not using the\n// detached prop to explicitly acknowledge the behavior. We should deprecated implicit\n// stateful navigation containers in a future release and require a provider style pattern\n// instead in order to eliminate confusion entirely.\n\n\nlet _statefulContainerCount = 0;\nexport function _TESTING_ONLY_reset_container_count() {\n  _statefulContainerCount = 0;\n} // We keep a global flag to catch errors during the state persistence hydrating scenario.\n// The innermost navigator who catches the error will dispatch a new init action.\n\nlet _reactNavigationIsHydratingState = false; // Unfortunate to use global state here, but it seems necessesary for the time\n// being. There seems to be some problems with cascading componentDidCatch\n// handlers. Ideally the inner non-stateful navigator catches the error and\n// re-throws it, to be caught by the top-level stateful navigator.\n\n/**\n * Create an HOC that injects the navigation and manages the navigation state\n * in case it's not passed from above.\n * This allows to use e.g. the StackNavigator and TabNavigator as root-level\n * components.\n */\n\nexport default function createNavigationContainer(Component) {\n  class NavigationContainer extends React.Component {\n    static getDerivedStateFromProps(nextProps) {\n      validateProps(nextProps);\n      return null;\n    }\n\n    constructor(props) {\n      super(props);\n\n      _defineProperty(this, \"subs\", null);\n\n      _defineProperty(this, \"_actionEventSubscribers\", new Set());\n\n      _defineProperty(this, \"_handleOpenURL\", ({\n        url\n      }) => {\n        const {\n          enableURLHandling,\n          uriPrefix\n        } = this.props;\n\n        if (enableURLHandling === false) {\n          return;\n        }\n\n        const parsedUrl = urlToPathAndParams(url, uriPrefix);\n\n        if (parsedUrl) {\n          const {\n            path,\n            params\n          } = parsedUrl;\n          const action = Component.router.getActionForPathAndParams(path, params);\n\n          if (action) {\n            this.dispatch(action);\n          }\n        }\n      });\n\n      _defineProperty(this, \"_persistNavigationState\", async nav => {\n        const {\n          persistNavigationState\n        } = this.props;\n\n        if (persistNavigationState) {\n          try {\n            await persistNavigationState(nav);\n          } catch (err) {\n            console.warn('Uncaught exception while calling persistNavigationState()! You should handle exceptions thrown from persistNavigationState(), ignoring them may result in undefined behavior.');\n          }\n        }\n      });\n\n      _defineProperty(this, \"dispatch\", action => {\n        if (this.props.navigation) {\n          return this.props.navigation.dispatch(action);\n        } // navState will have the most up-to-date value, because setState sometimes behaves asyncronously\n\n\n        this._navState = this._navState || this.state.nav;\n        const lastNavState = this._navState;\n        invariant(lastNavState, 'should be set in constructor if stateful');\n        const reducedState = Component.router.getStateForAction(action, lastNavState);\n        const navState = reducedState === null ? lastNavState : reducedState;\n\n        const dispatchActionEvents = () => {\n          this._actionEventSubscribers.forEach(subscriber => subscriber({\n            type: 'action',\n            action,\n            state: navState,\n            lastState: lastNavState\n          }));\n        };\n\n        if (reducedState === null) {\n          // The router will return null when action has been handled and the state hasn't changed.\n          // dispatch returns true when something has been handled.\n          dispatchActionEvents();\n          return true;\n        }\n\n        if (navState !== lastNavState) {\n          // Cache updates to state.nav during the tick to ensure that subsequent calls will not discard this change\n          this._navState = navState;\n          this.setState({\n            nav: navState\n          }, () => {\n            this._onNavigationStateChange(lastNavState, navState, action);\n\n            dispatchActionEvents();\n\n            this._persistNavigationState(navState);\n          });\n          return true;\n        }\n\n        dispatchActionEvents();\n        return false;\n      });\n\n      _defineProperty(this, \"_getScreenProps\", () => this.props.screenProps);\n\n      _defineProperty(this, \"_getTheme\", () => {\n        if (this.props.theme === 'light' || this.props.theme === 'dark') {\n          return this.props.theme;\n        } else if (this.props.theme === 'no-preference') {\n          return 'light';\n        } else {\n          console.warn(\"Invalid theme provided: \".concat(this.props.theme, \". Only 'light' and 'dark' are supported. Falling back to 'light'\"));\n          return 'light';\n        }\n      });\n\n      validateProps(props);\n      this._initialAction = NavigationActions.init();\n\n      if (this._isStateful() && BackHandler && typeof BackHandler.addEventListener === 'function') {\n        this.subs = BackHandler.addEventListener('hardwareBackPress', () => {\n          if (!this._isMounted) {\n            this.subs && this.subs.remove();\n          } else {\n            // dispatch returns true if the action results in a state change,\n            // and false otherwise. This maps well to what BackHandler expects\n            // from a callback -- true if handled, false if not handled\n            return this.dispatch(NavigationActions.back());\n          }\n        });\n      }\n\n      this.state = {\n        nav: this._isStateful() && !props.loadNavigationState ? Component.router.getStateForAction(this._initialAction) : null\n      };\n    }\n\n    _renderLoading() {\n      return this.props.renderLoadingExperimental ? this.props.renderLoadingExperimental() : null;\n    }\n\n    _isStateful() {\n      return isStateful(this.props);\n    }\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {\n        if (console.group) {\n          console.group('Navigation Dispatch: ');\n          console.log('Action: ', action);\n          console.log('New State: ', nav);\n          console.log('Last State: ', prevNav);\n          console.groupEnd();\n        } else {\n          console.log('Navigation Dispatch: ', {\n            action,\n            newState: nav,\n            lastState: prevNav\n          });\n        }\n\n        return;\n      }\n\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    componentDidUpdate() {\n      // Clear cached _navState every tick\n      if (this._navState === this.state.nav) {\n        this._navState = null;\n      }\n    }\n\n    async componentDidMount() {\n      this._isMounted = true;\n\n      if (!this._isStateful()) {\n        return;\n      }\n\n      if (process.env.NODE_ENV !== 'production' && !this.props.detached) {\n        if (_statefulContainerCount > 0) {\n          // Temporarily only show this on iOS due to this issue:\n          // https://github.com/react-navigation/react-navigation/issues/4196#issuecomment-390827829\n          if (Platform.OS === 'ios') {\n            console.warn(\"You should only render one navigator explicitly in your app, and other navigators should be rendered by including them in that navigator. Full details at: \".concat(docsUrl('common-mistakes.html#explicitly-rendering-more-than-one-navigator')));\n          }\n        }\n      }\n\n      _statefulContainerCount++;\n      Linking.addEventListener('url', this._handleOpenURL); // Pull out anything that can impact state\n\n      let parsedUrl = null;\n      let userProvidedStartupState = null;\n\n      if (this.props.enableURLHandling !== false) {\n        ({\n          parsedUrl,\n          userProvidedStartupState\n        } = await this.getStartupParams());\n      } // Initialize state. This must be done *after* any async code\n      // so we don't end up with a different value for this.state.nav\n      // due to changes while async function was resolving\n\n\n      let action = this._initialAction; // eslint-disable-next-line react/no-access-state-in-setstate\n\n      let startupState = this.state.nav;\n\n      if (!startupState && !userProvidedStartupState) {\n        !!process.env.REACT_NAV_LOGGING && console.log('Init new Navigation State');\n        startupState = Component.router.getStateForAction(action);\n      } // Pull user-provided persisted state\n\n\n      if (userProvidedStartupState) {\n        startupState = userProvidedStartupState;\n        _reactNavigationIsHydratingState = true;\n      } // Pull state out of URL\n\n\n      if (parsedUrl) {\n        const {\n          path,\n          params\n        } = parsedUrl;\n        const urlAction = Component.router.getActionForPathAndParams(path, params);\n\n        if (urlAction) {\n          !!process.env.REACT_NAV_LOGGING && console.log('Applying Navigation Action for Initial URL:', parsedUrl);\n          action = urlAction;\n          startupState = Component.router.getStateForAction(urlAction, startupState);\n        }\n      }\n\n      const dispatchActions = () => this._actionEventSubscribers.forEach(subscriber => subscriber({\n        type: 'action',\n        action,\n        state: this.state.nav,\n        lastState: null\n      }));\n\n      if (startupState === this.state.nav) {\n        dispatchActions();\n        return;\n      } // eslint-disable-next-line react/no-did-mount-set-state\n\n\n      this.setState({\n        nav: startupState\n      }, () => {\n        _reactNavigationIsHydratingState = false;\n        dispatchActions();\n      });\n    }\n\n    async getStartupParams() {\n      const {\n        uriPrefix,\n        loadNavigationState\n      } = this.props;\n      let url, loadedNavState;\n\n      try {\n        [url, loadedNavState] = await Promise.all([Linking.getInitialURL(), loadNavigationState && loadNavigationState()]);\n      } catch (err) {// ignore\n      }\n\n      return {\n        parsedUrl: url && urlToPathAndParams(url, uriPrefix),\n        userProvidedStartupState: loadedNavState\n      };\n    }\n\n    componentDidCatch(e) {\n      if (_reactNavigationIsHydratingState) {\n        _reactNavigationIsHydratingState = false;\n        console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state...');\n        this.dispatch(NavigationActions.init());\n      } else {\n        throw e;\n      }\n    }\n\n    componentWillUnmount() {\n      this._isMounted = false;\n      Linking.removeEventListener('url', this._handleOpenURL);\n      this.subs && this.subs.remove();\n\n      if (this._isStateful()) {\n        _statefulContainerCount--;\n      }\n    } // Per-tick temporary storage for state.nav\n\n\n    render() {\n      let navigation = this.props.navigation;\n\n      if (this._isStateful()) {\n        const navState = this.state.nav;\n\n        if (!navState) {\n          return this._renderLoading();\n        }\n\n        if (!this._navigation || this._navigation.state !== navState) {\n          this._navigation = getNavigation(Component.router, navState, this.dispatch, this._actionEventSubscribers, this._getScreenProps, () => this._navigation);\n        }\n\n        navigation = this._navigation;\n      }\n\n      invariant(navigation, 'failed to get navigation');\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        value: this._getTheme()\n      }, /*#__PURE__*/React.createElement(NavigationProvider, {\n        value: navigation\n      }, /*#__PURE__*/React.createElement(Component, _extends({}, this.props, {\n        navigation: navigation\n      }))));\n    }\n\n  }\n\n  _defineProperty(NavigationContainer, \"router\", Component.router);\n\n  _defineProperty(NavigationContainer, \"navigationOptions\", null);\n\n  _defineProperty(NavigationContainer, \"defaultProps\", {\n    theme: 'light'\n  });\n\n  return NavigationContainer;\n}\n//# sourceMappingURL=createAppContainer.js.map"]},"metadata":{},"sourceType":"module"}