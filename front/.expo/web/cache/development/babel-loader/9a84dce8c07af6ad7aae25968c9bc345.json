{"ast":null,"code":"import color from 'color';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar MenuItem = function MenuItem(_ref) {\n  var icon = _ref.icon,\n      title = _ref.title,\n      disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      contentStyle = _ref.contentStyle,\n      testID = _ref.testID,\n      titleStyle = _ref.titleStyle,\n      accessibilityLabel = _ref.accessibilityLabel,\n      theme = _ref.theme;\n  var disabledColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n  var titleColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.87).rgb().string();\n  var iconColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.54).rgb().string();\n  return React.createElement(TouchableRipple, {\n    style: [styles.container, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: {\n      disabled: disabled\n    }\n  }, React.createElement(View, {\n    style: styles.row\n  }, icon ? React.createElement(View, {\n    style: [styles.item, styles.icon],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(View, {\n    style: [styles.item, styles.content, icon ? styles.widthWithIcon : null, contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.title, {\n      color: titleColor\n    }, titleStyle]\n  }, title))));\n};\n\nMenuItem.displayName = 'Menu.Item';\nvar minWidth = 112;\nvar maxWidth = 280;\nvar iconWidth = 40;\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth: minWidth,\n    maxWidth: maxWidth,\n    height: 48,\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: iconWidth\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48)\n  }\n});\nexport default withTheme(MenuItem);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Menu/MenuItem.js"],"names":["color","React","Icon","TouchableRipple","Text","black","white","withTheme","MenuItem","icon","title","disabled","onPress","style","contentStyle","testID","titleStyle","accessibilityLabel","theme","disabledColor","dark","alpha","rgb","string","titleColor","colors","text","iconColor","createElement","styles","container","accessibilityRole","accessibilityState","View","row","item","pointerEvents","source","size","content","widthWithIcon","selectable","numberOfLines","displayName","minWidth","maxWidth","iconWidth","StyleSheet","create","paddingHorizontal","height","justifyContent","flexDirection","width","fontSize","marginHorizontal"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Icon from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item icon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item icon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item icon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item icon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item icon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  icon,\n  title,\n  disabled,\n  onPress,\n  style,\n  contentStyle,\n  testID,\n  titleStyle,\n  accessibilityLabel,\n  theme\n}) => {\n  const disabledColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n  const titleColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.87).rgb().string();\n  const iconColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.54).rgb().string();\n  return /*#__PURE__*/React.createElement(TouchableRipple, {\n    style: [styles.container, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: {\n      disabled\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.row\n  }, icon ? /*#__PURE__*/React.createElement(View, {\n    style: [styles.item, styles.icon],\n    pointerEvents: \"box-none\"\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: iconColor\n  })) : null, /*#__PURE__*/React.createElement(View, {\n    style: [styles.item, styles.content, icon ? styles.widthWithIcon : null, contentStyle],\n    pointerEvents: \"none\"\n  }, /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.title, {\n      color: titleColor\n    }, titleStyle]\n  }, title))));\n};\n\nMenuItem.displayName = 'Menu.Item';\nconst minWidth = 112;\nconst maxWidth = 280;\nconst iconWidth = 40;\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 8,\n    minWidth,\n    maxWidth,\n    height: 48,\n    justifyContent: 'center'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: iconWidth\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48)\n  }\n});\nexport default withTheme(MenuItem);\n//# sourceMappingURL=MenuItem.js.map"]},"metadata":{},"sourceType":"module"}