{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"onPress\", \"theme\", \"value\", \"status\", \"testID\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport { RadioButtonContext } from \"./RadioButtonGroup\";\nimport { handlePress, isChecked } from \"./utils\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\nvar BORDER_WIDTH = 2;\n\nvar RadioButtonAndroid = function RadioButtonAndroid(_ref) {\n  var disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      theme = _ref.theme,\n      value = _ref.value,\n      status = _ref.status,\n      testID = _ref.testID,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(BORDER_WIDTH)),\n      borderAnim = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new Animated.Value(1)),\n      radioAnim = _React$useRef2.current;\n\n  var isFirstRendering = React.useRef(true);\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n  var checkedColor = rest.color || theme.colors.accent;\n  var uncheckedColor = rest.uncheckedColor || color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  var rippleColor, radioColor;\n  return React.createElement(RadioButtonContext.Consumer, null, function (context) {\n    var checked = isChecked({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status: status,\n      value: value\n    }) === 'checked';\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n      radioColor = theme.colors.disabled;\n    } else {\n      rippleColor = color(checkedColor).fade(0.32).rgb().string();\n      radioColor = checked ? checkedColor : uncheckedColor;\n    }\n\n    return React.createElement(TouchableRipple, _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : function () {\n        handlePress({\n          onPress: onPress,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          value: value\n        });\n      },\n      accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n      accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled: disabled,\n        checked: checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID\n    }), React.createElement(Animated.View, {\n      style: [styles.radio, {\n        borderColor: radioColor,\n        borderWidth: borderAnim\n      }]\n    }, checked ? React.createElement(View, {\n      style: [StyleSheet.absoluteFill, styles.radioContainer]\n    }, React.createElement(Animated.View, {\n      style: [styles.dot, {\n        backgroundColor: radioColor,\n        transform: [{\n          scale: radioAnim\n        }]\n      }]\n    })) : null));\n  });\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5\n  }\n});\nexport default withTheme(RadioButtonAndroid);\nvar RadioButtonAndroidWithTheme = withTheme(RadioButtonAndroid);\nexport { RadioButtonAndroidWithTheme as RadioButtonAndroid };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/RadioButton/RadioButtonAndroid.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","RadioButtonContext","handlePress","isChecked","TouchableRipple","withTheme","BORDER_WIDTH","RadioButtonAndroid","disabled","onPress","theme","value","status","testID","rest","useRef","Animated","Value","borderAnim","current","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","checkedColor","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","radioColor","createElement","Consumer","context","checked","contextValue","fade","borderless","undefined","onValueChange","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","radio","borderColor","borderWidth","StyleSheet","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","RadioButtonAndroidWithTheme"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport { RadioButtonContext } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\nconst BORDER_WIDTH = 2;\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\n\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme,\n  value,\n  status,\n  testID,\n  ...rest\n}) => {\n  const {\n    current: borderAnim\n  } = React.useRef(new Animated.Value(BORDER_WIDTH));\n  const {\n    current: radioAnim\n  } = React.useRef(new Animated.Value(1));\n  const isFirstRendering = React.useRef(true);\n  const {\n    scale\n  } = theme.animation;\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n  const checkedColor = rest.color || theme.colors.accent;\n  const uncheckedColor = rest.uncheckedColor || color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  let rippleColor, radioColor;\n  return /*#__PURE__*/React.createElement(RadioButtonContext.Consumer, null, context => {\n    const checked = isChecked({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status,\n      value\n    }) === 'checked';\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n      radioColor = theme.colors.disabled;\n    } else {\n      rippleColor = color(checkedColor).fade(0.32).rgb().string();\n      radioColor = checked ? checkedColor : uncheckedColor;\n    }\n\n    return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : () => {\n        handlePress({\n          onPress,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          value\n        });\n      } // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      ,\n      accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n      accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled,\n        checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID\n    }), /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.radio, {\n        borderColor: radioColor,\n        borderWidth: borderAnim\n      }]\n    }, checked ? /*#__PURE__*/React.createElement(View, {\n      style: [StyleSheet.absoluteFill, styles.radioContainer]\n    }, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.dot, {\n        backgroundColor: radioColor,\n        transform: [{\n          scale: radioAnim\n        }]\n      }]\n    })) : null));\n  });\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5\n  }\n});\nexport default withTheme(RadioButtonAndroid); // @component-docs ignore-next-line\n\nconst RadioButtonAndroidWithTheme = withTheme(RadioButtonAndroid); // @component-docs ignore-next-line\n\nexport { RadioButtonAndroidWithTheme as RadioButtonAndroid };\n//# sourceMappingURL=RadioButtonAndroid.js.map"]},"metadata":{},"sourceType":"module"}