{"ast":null,"code":"export var handlePress = function handlePress(_ref) {\n  var onPress = _ref.onPress,\n      value = _ref.value,\n      onValueChange = _ref.onValueChange;\n\n  if (onPress && onValueChange) {\n    console.warn(\"onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead\");\n  }\n\n  onValueChange ? onValueChange(value) : onPress === null || onPress === void 0 ? void 0 : onPress();\n};\nexport var isChecked = function isChecked(_ref2) {\n  var value = _ref2.value,\n      status = _ref2.status,\n      contextValue = _ref2.contextValue;\n\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/RadioButton/utils.js"],"names":["handlePress","onPress","value","onValueChange","console","warn","isChecked","status","contextValue","undefined"],"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAIrB;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,aACI,QADJA,aACI;;AACJ,MAAIF,OAAO,IAAIE,aAAf,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,IAAR;AACD;;AAEDF,EAAAA,aAAa,GAAGA,aAAa,CAACD,KAAD,CAAhB,GAA0BD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,EAAhG;AACD,CAVM;AAWP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY,QAInB;AAAA,MAHJJ,KAGI,SAHJA,KAGI;AAAA,MAFJK,MAEI,SAFJA,MAEI;AAAA,MADJC,YACI,SADJA,YACI;;AACJ,MAAIA,YAAY,KAAKC,SAAjB,IAA8BD,YAAY,KAAK,IAAnD,EAAyD;AACvD,WAAOA,YAAY,KAAKN,KAAjB,GAAyB,SAAzB,GAAqC,WAA5C;AACD,GAFD,MAEO;AACL,WAAOK,MAAP;AACD;AACF,CAVM","sourcesContent":["export const handlePress = ({\n  onPress,\n  value,\n  onValueChange\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(`onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`);\n  }\n\n  onValueChange ? onValueChange(value) : onPress === null || onPress === void 0 ? void 0 : onPress();\n};\nexport const isChecked = ({\n  value,\n  status,\n  contextValue\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}