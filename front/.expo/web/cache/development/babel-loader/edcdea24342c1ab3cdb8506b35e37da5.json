{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport withNavigation from \"./withNavigation\";\nvar EventNameToPropName = {\n  willFocus: 'onWillFocus',\n  didFocus: 'onDidFocus',\n  willBlur: 'onWillBlur',\n  didBlur: 'onDidBlur'\n};\nvar EventNames = Object.keys(EventNameToPropName);\n\nvar NavigationEvents = function (_React$Component) {\n  _inherits(NavigationEvents, _React$Component);\n\n  var _super = _createSuper(NavigationEvents);\n\n  function NavigationEvents() {\n    var _this;\n\n    _classCallCheck(this, NavigationEvents);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"getPropListener\", function (eventName) {\n      return _this.props[EventNameToPropName[eventName]];\n    });\n\n    return _this;\n  }\n\n  _createClass(NavigationEvents, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.subscriptions = {};\n      EventNames.forEach(function (eventName) {\n        _this2.subscriptions[eventName] = _this2.props.navigation.addListener(eventName, function () {\n          var propListener = _this2.getPropListener(eventName);\n\n          return propListener && propListener.apply(void 0, arguments);\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      EventNames.forEach(function (eventName) {\n        _this3.subscriptions[eventName].remove();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return NavigationEvents;\n}(React.Component);\n\nexport default withNavigation(NavigationEvents);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/@react-navigation/core/lib/module/views/NavigationEvents.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","withNavigation","EventNameToPropName","willFocus","didFocus","willBlur","didBlur","EventNames","keys","NavigationEvents","args","eventName","props","subscriptions","forEach","navigation","addListener","propListener","getPropListener","remove","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;;AAEjN,OAAOQ,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP;AACA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,SAAS,EAAE,aADe;AAE1BC,EAAAA,QAAQ,EAAE,YAFgB;AAG1BC,EAAAA,QAAQ,EAAE,YAHgB;AAI1BC,EAAAA,OAAO,EAAE;AAJiB,CAA5B;AAMA,IAAMC,UAAU,GAAGZ,MAAM,CAACa,IAAP,CAAYN,mBAAZ,CAAnB;;IAEMO,gB;;;;;AACJ,8BAAqB;AAAA;;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACnB,oDAASA,IAAT;;AAEAnB,IAAAA,eAAe,gCAAO,iBAAP,EAA0B,UAAAoB,SAAS;AAAA,aAAI,MAAKC,KAAL,CAAWV,mBAAmB,CAACS,SAAD,CAA9B,CAAJ;AAAA,KAAnC,CAAf;;AAHmB;AAIpB;;;;WAED,6BAAoB;AAAA;;AAClB,WAAKE,aAAL,GAAqB,EAArB;AAIAN,MAAAA,UAAU,CAACO,OAAX,CAAmB,UAAAH,SAAS,EAAI;AAC9B,QAAA,MAAI,CAACE,aAAL,CAAmBF,SAAnB,IAAgC,MAAI,CAACC,KAAL,CAAWG,UAAX,CAAsBC,WAAtB,CAAkCL,SAAlC,EAA6C,YAAa;AACxF,cAAMM,YAAY,GAAG,MAAI,CAACC,eAAL,CAAqBP,SAArB,CAArB;;AACA,iBAAOM,YAAY,IAAIA,YAAY,MAAZ,mBAAvB;AACD,SAH+B,CAAhC;AAID,OALD;AAMD;;;WAED,gCAAuB;AAAA;;AACrBV,MAAAA,UAAU,CAACO,OAAX,CAAmB,UAAAH,SAAS,EAAI;AAC9B,QAAA,MAAI,CAACE,aAAL,CAAmBF,SAAnB,EAA8BQ,MAA9B;AACD,OAFD;AAGD;;;WAED,kBAAS;AACP,aAAO,IAAP;AACD;;;;EA5B4BnB,KAAK,CAACoB,S;;AAgCrC,eAAenB,cAAc,CAACQ,gBAAD,CAA7B","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport withNavigation from './withNavigation';\nconst EventNameToPropName = {\n  willFocus: 'onWillFocus',\n  didFocus: 'onDidFocus',\n  willBlur: 'onWillBlur',\n  didBlur: 'onDidBlur'\n};\nconst EventNames = Object.keys(EventNameToPropName);\n\nclass NavigationEvents extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getPropListener\", eventName => this.props[EventNameToPropName[eventName]]);\n  }\n\n  componentDidMount() {\n    this.subscriptions = {}; // We register all navigation listeners on mount to ensure listener stability across re-render\n    // A former implementation was replacing (removing/adding) listeners on all update (if prop provided)\n    // but there were issues (see https://github.com/react-navigation/react-navigation/issues/5058)\n\n    EventNames.forEach(eventName => {\n      this.subscriptions[eventName] = this.props.navigation.addListener(eventName, (...args) => {\n        const propListener = this.getPropListener(eventName);\n        return propListener && propListener(...args);\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    EventNames.forEach(eventName => {\n      this.subscriptions[eventName].remove();\n    });\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default withNavigation(NavigationEvents);\n//# sourceMappingURL=NavigationEvents.js.map"]},"metadata":{},"sourceType":"module"}