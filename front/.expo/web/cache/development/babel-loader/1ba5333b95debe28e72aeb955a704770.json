{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"dark\", \"style\", \"theme\"],\n    _excluded2 = [\"backgroundColor\", \"elevation\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport AppbarContent from \"./AppbarContent\";\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackAction from \"./AppbarBackAction\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/colors\";\nimport overlay from \"../../styles/overlay\";\nexport var DEFAULT_APPBAR_HEIGHT = 56;\n\nvar Appbar = function Appbar(_ref) {\n  var children = _ref.children,\n      dark = _ref.dark,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var colors = theme.colors,\n      isDarkTheme = theme.dark,\n      mode = theme.mode;\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      customBackground = _ref2.backgroundColor,\n      _ref2$elevation = _ref2.elevation,\n      elevation = _ref2$elevation === void 0 ? 4 : _ref2$elevation,\n      restStyle = _objectWithoutProperties(_ref2, _excluded2);\n\n  var isDark;\n  var backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark = backgroundColor === 'transparent' ? false : typeof backgroundColor === 'string' ? !color(backgroundColor).isLight() : true;\n  }\n\n  var shouldCenterContent = false;\n  var shouldAddLeftSpacing = false;\n  var shouldAddRightSpacing = false;\n\n  if (Platform.OS === 'ios') {\n    var hasAppbarContent = false;\n    var leftItemsCount = 0;\n    var rightItemsCount = 0;\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n    shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n\n  return React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor: backgroundColor\n    }, styles.appbar, {\n      elevation: elevation\n    }, restStyle]\n  }, rest), shouldAddLeftSpacing ? React.createElement(View, {\n    style: styles.spacing\n  }) : null, React.Children.toArray(children).filter(function (child) {\n    return child != null && typeof child !== 'boolean';\n  }).map(function (child, i) {\n    if (!React.isValidElement(child) || ![AppbarContent, AppbarAction, AppbarBackAction].includes(child.type)) {\n      return child;\n    }\n\n    var props = {\n      color: typeof child.props.color !== 'undefined' ? child.props.color : isDark ? white : black\n    };\n\n    if (child.type === AppbarContent) {\n      props.style = [i !== 0 && {\n        marginLeft: 8\n      }, shouldCenterContent && {\n        alignItems: 'center'\n      }, child.props.style];\n    }\n\n    return React.cloneElement(child, props);\n  }), shouldAddRightSpacing ? React.createElement(View, {\n    style: styles.spacing\n  }) : null);\n};\n\nvar styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4\n  },\n  spacing: {\n    width: 48\n  }\n});\nexport default withTheme(Appbar);\nvar AppbarWithTheme = withTheme(Appbar);\nexport { AppbarWithTheme as Appbar };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Appbar/Appbar.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","AppbarContent","AppbarAction","AppbarBackAction","Surface","withTheme","black","white","overlay","DEFAULT_APPBAR_HEIGHT","Appbar","children","dark","style","theme","rest","colors","isDarkTheme","mode","StyleSheet","flatten","customBackground","backgroundColor","elevation","restStyle","isDark","surface","primary","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","createElement","styles","appbar","View","spacing","toArray","filter","map","includes","props","marginLeft","alignItems","cloneElement","create","height","flexDirection","paddingHorizontal","width","AppbarWithTheme"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { View, Platform, StyleSheet } from 'react-native';\nimport color from 'color';\nimport AppbarContent from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport overlay from '../../styles/overlay';\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *  <Appbar style={styles.bottom}>\n *    <Appbar.Action\n *      icon=\"archive\"\n *      onPress={() => console.log('Pressed archive')}\n *     />\n *     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *     <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *     <Appbar.Action\n *       icon=\"delete\"\n *       onPress={() => console.log('Pressed delete')}\n *     />\n *   </Appbar>\n *  );\n *\n * export default MyComponent\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\n\nconst Appbar = ({\n  children,\n  dark,\n  style,\n  theme,\n  ...rest\n}) => {\n  const {\n    colors,\n    dark: isDarkTheme,\n    mode\n  } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  } = StyleSheet.flatten(style) || {};\n  let isDark;\n  const backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark = backgroundColor === 'transparent' ? false : typeof backgroundColor === 'string' ? !color(backgroundColor).isLight() : true;\n  }\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n\n  if (Platform.OS === 'ios') {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n    React.Children.forEach(children, child => {\n      if ( /*#__PURE__*/React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n    shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor\n    }, styles.appbar, {\n      elevation\n    }, restStyle]\n  }, rest), shouldAddLeftSpacing ? /*#__PURE__*/React.createElement(View, {\n    style: styles.spacing\n  }) : null, React.Children.toArray(children).filter(child => child != null && typeof child !== 'boolean').map((child, i) => {\n    if (! /*#__PURE__*/React.isValidElement(child) || ![AppbarContent, AppbarAction, AppbarBackAction].includes( // @ts-expect-error: TypeScript complains about the type of type but it doesn't matter\n    child.type)) {\n      return child;\n    }\n\n    const props = {\n      color: typeof child.props.color !== 'undefined' ? child.props.color : isDark ? white : black\n    };\n\n    if (child.type === AppbarContent) {\n      props.style = [// Since content is not first item, add extra left margin\n      i !== 0 && {\n        marginLeft: 8\n      }, shouldCenterContent && {\n        alignItems: 'center'\n      }, child.props.style];\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, props);\n  }), shouldAddRightSpacing ? /*#__PURE__*/React.createElement(View, {\n    style: styles.spacing\n  }) : null);\n};\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4\n  },\n  spacing: {\n    width: 48\n  }\n});\nexport default withTheme(Appbar); // @component-docs ignore-next-line\n\nconst AppbarWithTheme = withTheme(Appbar); // @component-docs ignore-next-line\n\nexport { AppbarWithTheme as Appbar };\n//# sourceMappingURL=Appbar.js.map"]},"metadata":{},"sourceType":"module"}