{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime/helpers/objectSpread\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"activeUnderlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\"],\n    _excluded2 = [\"fontSize\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\n\nfunction ___ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ___ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ___ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction __ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? __ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : __ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : _ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport InputLabel from \"./Label/InputLabel\";\nimport TextInputAdornment from \"./Adornment/TextInputAdornment\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, FLAT_INPUT_OFFSET } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingFlat, interpolatePlaceholder, calculateFlatAffixTopPosition, calculateFlatInputHorizontalPadding } from \"./helpers\";\nimport { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport { AdornmentSide, AdornmentType, InputMode } from \"./Adornment/enums\";\nvar MINIMIZED_LABEL_Y_OFFSET = -18;\nvar LABEL_PADDING_TOP = 30;\nvar LABEL_PADDING_TOP_DENSE = 24;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT_WL = 52;\nvar MIN_DENSE_HEIGHT = 40;\n\nvar TextInputFlat = function (_React$Component) {\n  _inherits(TextInputFlat, _React$Component);\n\n  var _super = _createSuper(TextInputFlat);\n\n  function TextInputFlat() {\n    _classCallCheck(this, TextInputFlat);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextInputFlat, [{\n    key: \"render\",\n    value: function render() {\n      var _affixTopPosition, _onAffixChange, _topPosition;\n\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          editable = _this$props.editable,\n          label = _this$props.label,\n          error = _this$props.error,\n          selectionColor = _this$props.selectionColor,\n          underlineColor = _this$props.underlineColor,\n          activeUnderlineColor = _this$props.activeUnderlineColor,\n          dense = _this$props.dense,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          render = _this$props.render,\n          multiline = _this$props.multiline,\n          parentState = _this$props.parentState,\n          innerRef = _this$props.innerRef,\n          onFocus = _this$props.onFocus,\n          forceFocus = _this$props.forceFocus,\n          onBlur = _this$props.onBlur,\n          onChangeText = _this$props.onChangeText,\n          onLayoutAnimatedText = _this$props.onLayoutAnimatedText,\n          onLeftAffixLayoutChange = _this$props.onLeftAffixLayoutChange,\n          onRightAffixLayoutChange = _this$props.onRightAffixLayoutChange,\n          left = _this$props.left,\n          right = _this$props.right,\n          placeholderTextColor = _this$props.placeholderTextColor,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var isAndroid = Platform.OS === 'android';\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var font = fonts.regular;\n      var hasActiveOutline = parentState.focused || error;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          fontSizeStyle = _ref.fontSize,\n          fontWeight = _ref.fontWeight,\n          height = _ref.height,\n          paddingHorizontal = _ref.paddingHorizontal,\n          textAlign = _ref.textAlign,\n          viewStyle = _objectWithoutProperties(_ref, _excluded2);\n\n      var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n      var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n      var adornmentConfig = getAdornmentConfig({\n        left: left,\n        right: right\n      });\n\n      var _calculateFlatInputHo = calculateFlatInputHorizontalPadding({\n        adornmentConfig: adornmentConfig\n      }),\n          paddingLeft = _calculateFlatInputHo.paddingLeft,\n          paddingRight = _calculateFlatInputHo.paddingRight;\n\n      if (isPaddingHorizontalPassed) {\n        paddingLeft = paddingHorizontal;\n        paddingRight = paddingHorizontal;\n      }\n\n      var leftLayout = parentState.leftLayout,\n          rightLayout = parentState.rightLayout;\n      var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n      var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n      var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n        adornmentConfig: adornmentConfig,\n        rightAffixWidth: rightAffixWidth,\n        leftAffixWidth: leftAffixWidth,\n        paddingHorizontal: paddingHorizontal,\n        inputOffset: FLAT_INPUT_OFFSET,\n        mode: InputMode.Flat\n      });\n      var inputTextColor, activeColor, underlineColorCustom, placeholderColor, errorColor;\n\n      if (disabled) {\n        inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n        placeholderColor = colors.disabled;\n        underlineColorCustom = 'transparent';\n      } else {\n        inputTextColor = colors.text;\n        activeColor = error ? colors.error : activeUnderlineColor || colors.primary;\n        placeholderColor = colors.placeholder;\n        errorColor = colors.error;\n        underlineColorCustom = underlineColor || colors.disabled;\n      }\n\n      var containerStyle = {\n        backgroundColor: theme.dark ? color(colors.background).lighten(0.24).rgb().string() : color(colors.background).darken(0.06).rgb().string(),\n        borderTopLeftRadius: theme.roundness,\n        borderTopRightRadius: theme.roundness\n      };\n      var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n      var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n      var labelWidth = parentState.labelLayout.width;\n      var labelHeight = parentState.labelLayout.height;\n      var labelHalfWidth = labelWidth / 2;\n      var labelHalfHeight = labelHeight / 2;\n      var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n      var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n      var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n      var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n\n      if (height && typeof height !== 'number') {\n        console.warn('Currently we support only numbers in height prop');\n      }\n\n      var paddingSettings = {\n        height: height ? +height : null,\n        labelHalfHeight: labelHalfHeight,\n        offset: FLAT_INPUT_OFFSET,\n        multiline: multiline ? multiline : null,\n        dense: dense ? dense : null,\n        topPosition: topPosition,\n        fontSize: fontSize,\n        label: label,\n        scale: fontScale,\n        isAndroid: isAndroid,\n        styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n      };\n      var pad = calculatePadding(paddingSettings);\n      var paddingFlat = adjustPaddingFlat(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n        pad: pad\n      }));\n      var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n      var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n      var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n      var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n      var iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n      var leftAffixTopPosition = leftLayout.height ? calculateFlatAffixTopPosition(_objectSpread2(_objectSpread2({\n        height: flatHeight\n      }, paddingFlat), {}, {\n        affixHeight: leftLayout.height\n      })) : null;\n      var rightAffixTopPosition = rightLayout.height ? calculateFlatAffixTopPosition(_objectSpread3(_objectSpread3({\n        height: flatHeight\n      }, paddingFlat), {}, {\n        affixHeight: rightLayout.height\n      })) : null;\n      var labelProps = {\n        label: label,\n        onLayoutAnimatedText: onLayoutAnimatedText,\n        placeholderOpacity: placeholderOpacity,\n        error: error,\n        placeholderStyle: styles.placeholder,\n        baseLabelTranslateY: baseLabelTranslateY,\n        baseLabelTranslateX: baseLabelTranslateX,\n        font: font,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        labelScale: labelScale,\n        wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n        topPosition: topPosition,\n        paddingOffset: {\n          paddingLeft: paddingLeft,\n          paddingRight: paddingRight\n        },\n        hasActiveOutline: hasActiveOutline,\n        activeColor: activeColor,\n        placeholderColor: placeholderColor,\n        errorColor: errorColor,\n        roundness: theme.roundness\n      };\n      var affixTopPosition = (_affixTopPosition = {}, _defineProperty2(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty2(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n      var onAffixChange = (_onAffixChange = {}, _defineProperty2(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty2(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n      var adornmentProps = {\n        paddingHorizontal: paddingHorizontal,\n        adornmentConfig: adornmentConfig,\n        forceFocus: forceFocus,\n        topPosition: (_topPosition = {}, _defineProperty2(_topPosition, AdornmentType.Affix, affixTopPosition), _defineProperty2(_topPosition, AdornmentType.Icon, iconTopPosition), _topPosition),\n        onAffixChange: onAffixChange,\n        isTextInputFocused: this.props.parentState.focused\n      };\n\n      if (adornmentConfig.length) {\n        adornmentProps = _objectSpread2(_objectSpread2({}, adornmentProps), {}, {\n          left: left,\n          right: right,\n          textStyle: _objectSpread4(_objectSpread4({}, font), {}, {\n            fontSize: fontSize,\n            fontWeight: fontWeight\n          }),\n          visible: this.props.parentState.labeled\n        });\n      }\n\n      return React.createElement(View, {\n        style: [containerStyle, viewStyle]\n      }, React.createElement(Underline, {\n        parentState: parentState,\n        underlineColorCustom: underlineColorCustom,\n        error: error,\n        colors: colors,\n        activeColor: activeColor\n      }), React.createElement(View, {\n        style: [styles.labelContainer, {\n          minHeight: minHeight\n        }]\n      }, !isAndroid && multiline && label && React.createElement(View, {\n        testID: \"patch-container\",\n        pointerEvents: \"none\",\n        style: [StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n          backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n          left: paddingLeft,\n          right: paddingRight\n        }]\n      }), React.createElement(InputLabel, {\n        parentState: parentState,\n        labelProps: labelProps\n      }), render === null || render === void 0 ? void 0 : render(_objectSpread2(_objectSpread2({}, rest), {}, {\n        ref: innerRef,\n        onChangeText: onChangeText,\n        placeholder: label ? parentState.placeholder : this.props.placeholder,\n        placeholderTextColor: placeholderTextColor !== null && placeholderTextColor !== void 0 ? placeholderTextColor : placeholderColor,\n        editable: !disabled && editable,\n        selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        underlineColorAndroid: 'transparent',\n        multiline: multiline,\n        style: [styles.input, {\n          paddingLeft: paddingLeft,\n          paddingRight: paddingRight\n        }, !multiline || multiline && height ? {\n          height: flatHeight\n        } : {}, paddingFlat, _objectSpread5(_objectSpread5({}, font), {}, {\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          color: inputTextColor,\n          textAlignVertical: multiline ? 'top' : 'center',\n          textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n        }), Platform.OS === 'web' && {\n          outline: 'none'\n        }, adornmentStyleAdjustmentForNativeInput]\n      }))), React.createElement(TextInputAdornment, adornmentProps));\n    }\n  }]);\n\n  return TextInputFlat;\n}(React.Component);\n\n_defineProperty(TextInputFlat, \"defaultProps\", {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: function render(props) {\n    return React.createElement(NativeTextInput, props);\n  }\n});\n\nexport default TextInputFlat;\n\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n      error = _ref2.error,\n      colors = _ref2.colors,\n      activeColor = _ref2.activeColor,\n      underlineColorCustom = _ref2.underlineColorCustom;\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return React.createElement(Animated.View, {\n    style: [styles.underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: parentState.focused ? 1 : 0.5\n      }]\n    }]\n  });\n};\n\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/TextInput/TextInputFlat.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","color","InputLabel","TextInputAdornment","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","FLAT_INPUT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingFlat","interpolatePlaceholder","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","AdornmentSide","AdornmentType","InputMode","MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","props","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","isAndroid","Platform","OS","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","paddingHorizontal","textAlign","viewStyle","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","paddingOffset","affixTopPosition","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","createElement","View","Underline","labelContainer","testID","pointerEvents","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","textAlignVertical","outline","Component","NativeTextInput","Animated","underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { View, Animated, TextInput as NativeTextInput, StyleSheet, I18nManager, Platform } from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment from './Adornment/TextInputAdornment';\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, FLAT_INPUT_OFFSET } from './constants';\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingFlat, interpolatePlaceholder, calculateFlatAffixTopPosition, calculateFlatInputHorizontalPadding } from './helpers';\nimport { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nclass TextInputFlat extends React.Component {\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      activeUnderlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n    const isAndroid = Platform.OS === 'android';\n    const {\n      colors,\n      fonts\n    } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      textAlign,\n      ...viewStyle\n    } = StyleSheet.flatten(style) || {};\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n    const isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right\n    });\n    let {\n      paddingLeft,\n      paddingRight\n    } = calculateFlatInputHorizontalPadding({\n      adornmentConfig\n    });\n\n    if (isPaddingHorizontalPassed) {\n      paddingLeft = paddingHorizontal;\n      paddingRight = paddingHorizontal;\n    }\n\n    const {\n      leftLayout,\n      rightLayout\n    } = parentState;\n    const rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n    const leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat\n    });\n    let inputTextColor, activeColor, underlineColorCustom, placeholderColor, errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : activeUnderlineColor || colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark ? color(colors.background).lighten(0.24).rgb().string() : color(colors.background).darken(0.06).rgb().string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness\n    };\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n    const baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n    const minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n    const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n    const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: FLAT_INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid,\n      styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n    };\n    const pad = calculatePadding(paddingSettings);\n    const paddingFlat = adjustPaddingFlat({ ...paddingSettings,\n      pad\n    });\n    const baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n    const placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n    const minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n    const flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n    const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n    const leftAffixTopPosition = leftLayout.height ? calculateFlatAffixTopPosition({\n      height: flatHeight,\n      ...paddingFlat,\n      affixHeight: leftLayout.height\n    }) : null;\n    const rightAffixTopPosition = rightLayout.height ? calculateFlatAffixTopPosition({\n      height: flatHeight,\n      ...paddingFlat,\n      affixHeight: rightLayout.height\n    }) : null;\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset: {\n        paddingLeft,\n        paddingRight\n      },\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n      roundness: theme.roundness\n    };\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange\n    };\n    let adornmentProps = {\n      paddingHorizontal,\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Affix]: affixTopPosition,\n        [AdornmentType.Icon]: iconTopPosition\n      },\n      onAffixChange,\n      isTextInputFocused: this.props.parentState.focused\n    };\n\n    if (adornmentConfig.length) {\n      adornmentProps = { ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font,\n          fontSize,\n          fontWeight\n        },\n        visible: this.props.parentState.labeled\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(View, {\n      style: [containerStyle, viewStyle]\n    }, /*#__PURE__*/React.createElement(Underline, {\n      parentState: parentState,\n      underlineColorCustom: underlineColorCustom,\n      error: error,\n      colors: colors,\n      activeColor: activeColor\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.labelContainer, {\n        minHeight\n      }]\n    }, !isAndroid && multiline && label &&\n    /*#__PURE__*/\n    // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n    // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n    React.createElement(View, {\n      testID: \"patch-container\",\n      pointerEvents: \"none\",\n      style: [StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n        backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n        left: paddingLeft,\n        right: paddingRight\n      }]\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      parentState: parentState,\n      labelProps: labelProps\n    }), render === null || render === void 0 ? void 0 : render({ ...rest,\n      ref: innerRef,\n      onChangeText,\n      placeholder: label ? parentState.placeholder : this.props.placeholder,\n      placeholderTextColor: placeholderTextColor !== null && placeholderTextColor !== void 0 ? placeholderTextColor : placeholderColor,\n      editable: !disabled && editable,\n      selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n      onFocus,\n      onBlur,\n      underlineColorAndroid: 'transparent',\n      multiline,\n      style: [styles.input, {\n        paddingLeft,\n        paddingRight\n      }, !multiline || multiline && height ? {\n        height: flatHeight\n      } : {}, paddingFlat, { ...font,\n        fontSize,\n        fontWeight,\n        color: inputTextColor,\n        textAlignVertical: multiline ? 'top' : 'center',\n        textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n      }, Platform.OS === 'web' && {\n        outline: 'none'\n      }, adornmentStyleAdjustmentForNativeInput]\n    })), /*#__PURE__*/React.createElement(TextInputAdornment, adornmentProps));\n  }\n\n}\n\n_defineProperty(TextInputFlat, \"defaultProps\", {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: props => /*#__PURE__*/React.createElement(NativeTextInput, props)\n});\n\nexport default TextInputFlat;\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom\n}) => {\n  let backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.underline, {\n      backgroundColor,\n      // Underlines is thinner when input is not focused\n      transform: [{\n        scaleY: parentState.focused ? 1 : 0.5\n      }]\n    }]\n  });\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});\n//# sourceMappingURL=TextInputFlat.js.map"]},"metadata":{},"sourceType":"module"}