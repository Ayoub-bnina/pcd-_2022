{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\n\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n      _ref$labelProps = _ref.labelProps,\n      placeholderStyle = _ref$labelProps.placeholderStyle,\n      baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n      topPosition = _ref$labelProps.topPosition,\n      hasActiveOutline = _ref$labelProps.hasActiveOutline,\n      label = _ref$labelProps.label,\n      backgroundColor = _ref$labelProps.backgroundColor,\n      roundness = _ref$labelProps.roundness,\n      labelStyle = _ref.labelStyle;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  var labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-baseLabelTranslateX, 0]\n      })\n    }]\n  };\n  return label ? [React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity: opacity,\n      bottom: Math.max(roundness, 2)\n    }, labelTranslationX]\n  }), React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: [].concat(_toConsumableArray(labelStyle.transform), [{\n        scaleY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }]),\n      maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n    }],\n    numberOfLines: 1\n  }, label)] : null;\n};\n\nexport default LabelBackground;\nvar styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/TextInput/Label/LabelBackground.js"],"names":["React","AnimatedText","LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","createElement","Animated","View","key","pointerEvents","style","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","top","scaleY","maxWidth","labelLayout","width","paddingHorizontal","numberOfLines","create","position","left","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport AnimatedText from '../../Typography/AnimatedText';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness\n  },\n  labelStyle\n}) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  const labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-baseLabelTranslateX, 0]\n      })\n    }]\n  };\n  return label ? [/*#__PURE__*/React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity,\n      bottom: Math.max(roundness, 2)\n    }, labelTranslationX]\n  }), /*#__PURE__*/React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor,\n      opacity,\n      transform: [...labelStyle.transform, {\n        scaleY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }],\n      maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n    }],\n    numberOfLines: 1\n  }, label)] : null;\n};\n\nexport default LabelBackground;\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});\n//# sourceMappingURL=LabelBackground.js.map"]},"metadata":{},"sourceType":"module"}