{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { MaybeScreenContainer, MaybeScreen } from \"../Screens\";\nimport { getDefaultHeaderHeight } from \"../Header/HeaderSegment\";\nimport CardContainer from \"./CardContainer\";\nimport { DefaultTransition, ModalTransition } from \"../../TransitionConfigs/TransitionPresets\";\nimport { forNoAnimation as forNoAnimationHeader } from \"../../TransitionConfigs/HeaderStyleInterpolators\";\nimport { forNoAnimation as forNoAnimationCard } from \"../../TransitionConfigs/CardStyleInterpolators\";\nimport HeaderShownContext from \"../../utils/HeaderShownContext\";\nimport getDistanceForDirection from \"../../utils/getDistanceForDirection\";\nvar EPSILON = 0.01;\nvar FALLBACK_DESCRIPTOR = Object.freeze({\n  options: {}\n});\n\nvar getHeaderHeights = function getHeaderHeights(routes, insets, descriptors, layout, previous) {\n  return routes.reduce(function (acc, curr) {\n    var _ref = descriptors[curr.key] || {},\n        _ref$options = _ref.options,\n        options = _ref$options === void 0 ? {} : _ref$options;\n\n    var style = StyleSheet.flatten(options.headerStyle || {});\n    var height = typeof style.height === 'number' ? style.height : previous[curr.key];\n\n    var safeAreaInsets = _objectSpread({}, insets, {}, options.safeAreaInsets);\n\n    var _options$headerStatus = options.headerStatusBarHeight,\n        headerStatusBarHeight = _options$headerStatus === void 0 ? safeAreaInsets.top : _options$headerStatus;\n    acc[curr.key] = typeof height === 'number' ? height : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n    return acc;\n  }, {});\n};\n\nvar getDistanceFromOptions = function getDistanceFromOptions(mode, layout, descriptor) {\n  var _ref2 = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {},\n      _ref2$gestureDirectio = _ref2.gestureDirection,\n      gestureDirection = _ref2$gestureDirectio === void 0 ? mode === 'modal' ? ModalTransition.gestureDirection : DefaultTransition.gestureDirection : _ref2$gestureDirectio;\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nvar getProgressFromGesture = function getProgressFromGesture(mode, gesture, layout, descriptor) {\n  var distance = getDistanceFromOptions(mode, {\n    width: Math.max(1, layout.width),\n    height: Math.max(1, layout.height)\n  }, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0]\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1]\n  });\n};\n\nvar CardStack = function (_React$Component) {\n  _inherits(CardStack, _React$Component);\n\n  var _super = _createSuper(CardStack);\n\n  function CardStack(_props) {\n    var _this;\n\n    _classCallCheck(this, CardStack);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLayout\", function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          height = _e$nativeEvent$layout.height,\n          width = _e$nativeEvent$layout.width;\n      var layout = {\n        width: width,\n        height: height\n      };\n\n      _this.setState(function (state, props) {\n        if (height === state.layout.height && width === state.layout.width) {\n          return null;\n        }\n\n        return {\n          layout: layout,\n          headerHeights: getHeaderHeights(props.routes, props.insets, state.descriptors, layout, state.headerHeights)\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHeaderLayout\", function (_ref3) {\n      var route = _ref3.route,\n          height = _ref3.height;\n\n      _this.setState(function (_ref4) {\n        var headerHeights = _ref4.headerHeights;\n        var previousHeight = headerHeights[route.key];\n\n        if (previousHeight === height) {\n          return null;\n        }\n\n        return {\n          headerHeights: _objectSpread({}, headerHeights, _defineProperty2({}, route.key, height))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getFocusedRoute\", function () {\n      var state = _this.props.state;\n      return state.routes[state.index];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPreviousScene\", function (_ref5) {\n      var route = _ref5.route;\n      var getPreviousRoute = _this.props.getPreviousRoute;\n      var scenes = _this.state.scenes;\n      var previousRoute = getPreviousRoute({\n        route: route\n      });\n\n      if (previousRoute) {\n        var previousScene = scenes.find(function (scene) {\n          return scene.route.key === previousRoute.key;\n        });\n        return previousScene;\n      }\n\n      return undefined;\n    });\n\n    var _Dimensions$get = Dimensions.get('window'),\n        _Dimensions$get$heigh = _Dimensions$get.height,\n        _height = _Dimensions$get$heigh === void 0 ? 0 : _Dimensions$get$heigh,\n        _Dimensions$get$width = _Dimensions$get.width,\n        _width = _Dimensions$get$width === void 0 ? 0 : _Dimensions$get$width;\n\n    _this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: {\n        height: _height,\n        width: _width\n      },\n      descriptors: _this.props.descriptors,\n      headerHeights: {}\n    };\n    return _this;\n  }\n\n  _createClass(CardStack, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          mode = _this$props.mode,\n          insets = _this$props.insets,\n          descriptors = _this$props.descriptors,\n          state = _this$props.state,\n          routes = _this$props.routes,\n          closingRouteKeys = _this$props.closingRouteKeys,\n          onOpenRoute = _this$props.onOpenRoute,\n          onCloseRoute = _this$props.onCloseRoute,\n          getGesturesEnabled = _this$props.getGesturesEnabled,\n          renderHeader = _this$props.renderHeader,\n          renderScene = _this$props.renderScene,\n          headerMode = _this$props.headerMode,\n          onTransitionStart = _this$props.onTransitionStart,\n          onTransitionEnd = _this$props.onTransitionEnd,\n          onPageChangeStart = _this$props.onPageChangeStart,\n          onPageChangeConfirm = _this$props.onPageChangeConfirm,\n          onPageChangeCancel = _this$props.onPageChangeCancel;\n      var _this$state = this.state,\n          scenes = _this$state.scenes,\n          layout = _this$state.layout,\n          gestures = _this$state.gestures,\n          headerHeights = _this$state.headerHeights;\n      var focusedRoute = state.routes[state.index];\n      var focusedDescriptor = descriptors[focusedRoute.key];\n      var focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n      var defaultTransitionPreset = mode === 'modal' ? ModalTransition : DefaultTransition;\n\n      if (headerMode === 'screen') {\n        defaultTransitionPreset = _objectSpread({}, defaultTransitionPreset, {\n          headerStyleInterpolator: forNoAnimationHeader\n        });\n      }\n\n      var _ref6 = focusedOptions.safeAreaInsets || {},\n          _ref6$top = _ref6.top,\n          top = _ref6$top === void 0 ? insets.top : _ref6$top,\n          _ref6$right = _ref6.right,\n          right = _ref6$right === void 0 ? insets.right : _ref6$right,\n          _ref6$bottom = _ref6.bottom,\n          bottom = _ref6$bottom === void 0 ? insets.bottom : _ref6$bottom,\n          _ref6$left = _ref6.left,\n          left = _ref6$left === void 0 ? insets.left : _ref6$left;\n\n      var isScreensEnabled = Platform.OS !== 'ios' && mode !== 'modal';\n      return React.createElement(HeaderShownContext.Consumer, null, function (isParentHeaderShown) {\n        var isFloatHeaderAbsolute = headerMode === 'float' ? _this2.state.scenes.slice(-2).some(function (scene) {\n          var descriptor = scene.descriptor;\n          var options = descriptor ? descriptor.options : {};\n          var headerTransparent = options.headerTransparent,\n              _options$headerShown = options.headerShown,\n              headerShown = _options$headerShown === void 0 ? isParentHeaderShown === false : _options$headerShown;\n\n          if (headerTransparent || headerShown === false) {\n            return true;\n          }\n\n          return false;\n        }) : false;\n        var floatingHeader = headerMode === 'float' ? React.createElement(React.Fragment, {\n          key: \"header\"\n        }, renderHeader({\n          mode: 'float',\n          layout: layout,\n          insets: {\n            top: top,\n            right: right,\n            bottom: bottom,\n            left: left\n          },\n          scenes: scenes,\n          getPreviousScene: _this2.getPreviousScene,\n          getFocusedRoute: _this2.getFocusedRoute,\n          onContentHeightChange: _this2.handleHeaderLayout,\n          gestureDirection: focusedOptions.gestureDirection !== undefined ? focusedOptions.gestureDirection : defaultTransitionPreset.gestureDirection,\n          styleInterpolator: focusedOptions.headerStyleInterpolator !== undefined ? focusedOptions.headerStyleInterpolator : defaultTransitionPreset.headerStyleInterpolator,\n          style: [styles.floating, isFloatHeaderAbsolute && styles.absolute]\n        })) : null;\n        return React.createElement(React.Fragment, null, isFloatHeaderAbsolute ? null : floatingHeader, React.createElement(MaybeScreenContainer, {\n          enabled: isScreensEnabled,\n          style: styles.container,\n          onLayout: _this2.handleLayout\n        }, routes.map(function (route, index, self) {\n          var focused = focusedRoute.key === route.key;\n          var gesture = gestures[route.key];\n          var scene = scenes[index];\n          var isScreenActive = scene.progress.next ? scene.progress.next.interpolate({\n            inputRange: [0, 1 - EPSILON, 1],\n            outputRange: [1, 1, 0],\n            extrapolate: 'clamp'\n          }) : 1;\n\n          var _ref7 = scene.descriptor ? scene.descriptor.options : {},\n              safeAreaInsets = _ref7.safeAreaInsets,\n              _ref7$headerShown = _ref7.headerShown,\n              headerShown = _ref7$headerShown === void 0 ? isParentHeaderShown === false : _ref7$headerShown,\n              headerTransparent = _ref7.headerTransparent,\n              cardShadowEnabled = _ref7.cardShadowEnabled,\n              cardOverlayEnabled = _ref7.cardOverlayEnabled,\n              cardOverlay = _ref7.cardOverlay,\n              cardStyle = _ref7.cardStyle,\n              animationEnabled = _ref7.animationEnabled,\n              gestureResponseDistance = _ref7.gestureResponseDistance,\n              gestureVelocityImpact = _ref7.gestureVelocityImpact,\n              _ref7$gestureDirectio = _ref7.gestureDirection,\n              gestureDirection = _ref7$gestureDirectio === void 0 ? defaultTransitionPreset.gestureDirection : _ref7$gestureDirectio,\n              _ref7$transitionSpec = _ref7.transitionSpec,\n              transitionSpec = _ref7$transitionSpec === void 0 ? defaultTransitionPreset.transitionSpec : _ref7$transitionSpec,\n              _ref7$cardStyleInterp = _ref7.cardStyleInterpolator,\n              cardStyleInterpolator = _ref7$cardStyleInterp === void 0 ? animationEnabled === false ? forNoAnimationCard : defaultTransitionPreset.cardStyleInterpolator : _ref7$cardStyleInterp,\n              _ref7$headerStyleInte = _ref7.headerStyleInterpolator,\n              headerStyleInterpolator = _ref7$headerStyleInte === void 0 ? defaultTransitionPreset.headerStyleInterpolator : _ref7$headerStyleInte;\n\n          var transitionConfig = {\n            gestureDirection: gestureDirection,\n            transitionSpec: transitionSpec,\n            cardStyleInterpolator: cardStyleInterpolator,\n            headerStyleInterpolator: headerStyleInterpolator\n          };\n\n          if (index !== self.length - 1) {\n            var nextScene = scenes[index + 1];\n\n            if (nextScene) {\n              var _ref8 = nextScene.descriptor ? nextScene.descriptor.options : {},\n                  _animationEnabled = _ref8.animationEnabled,\n                  _ref8$gestureDirectio = _ref8.gestureDirection,\n                  _gestureDirection = _ref8$gestureDirectio === void 0 ? defaultTransitionPreset.gestureDirection : _ref8$gestureDirectio,\n                  _ref8$transitionSpec = _ref8.transitionSpec,\n                  _transitionSpec = _ref8$transitionSpec === void 0 ? defaultTransitionPreset.transitionSpec : _ref8$transitionSpec,\n                  _ref8$cardStyleInterp = _ref8.cardStyleInterpolator,\n                  _cardStyleInterpolator = _ref8$cardStyleInterp === void 0 ? _animationEnabled === false ? forNoAnimationCard : defaultTransitionPreset.cardStyleInterpolator : _ref8$cardStyleInterp,\n                  _ref8$headerStyleInte = _ref8.headerStyleInterpolator,\n                  _headerStyleInterpolator = _ref8$headerStyleInte === void 0 ? defaultTransitionPreset.headerStyleInterpolator : _ref8$headerStyleInte;\n\n              transitionConfig = {\n                gestureDirection: _gestureDirection,\n                transitionSpec: _transitionSpec,\n                cardStyleInterpolator: _cardStyleInterpolator,\n                headerStyleInterpolator: _headerStyleInterpolator\n              };\n            }\n          }\n\n          var _ref9 = safeAreaInsets || {},\n              _ref9$top = _ref9.top,\n              safeAreaInsetTop = _ref9$top === void 0 ? insets.top : _ref9$top,\n              _ref9$right = _ref9.right,\n              safeAreaInsetRight = _ref9$right === void 0 ? insets.right : _ref9$right,\n              _ref9$bottom = _ref9.bottom,\n              safeAreaInsetBottom = _ref9$bottom === void 0 ? insets.bottom : _ref9$bottom,\n              _ref9$left = _ref9.left,\n              safeAreaInsetLeft = _ref9$left === void 0 ? insets.left : _ref9$left;\n\n          var headerHeight = headerMode !== 'none' && headerShown !== false ? headerHeights[route.key] : 0;\n          return React.createElement(MaybeScreen, {\n            key: route.key,\n            style: StyleSheet.absoluteFill,\n            enabled: isScreensEnabled,\n            active: isScreenActive,\n            pointerEvents: \"box-none\"\n          }, React.createElement(CardContainer, _extends({\n            index: index,\n            active: index === self.length - 1,\n            focused: focused,\n            closing: closingRouteKeys.includes(route.key),\n            layout: layout,\n            gesture: gesture,\n            scene: scene,\n            safeAreaInsetTop: safeAreaInsetTop,\n            safeAreaInsetRight: safeAreaInsetRight,\n            safeAreaInsetBottom: safeAreaInsetBottom,\n            safeAreaInsetLeft: safeAreaInsetLeft,\n            cardOverlay: cardOverlay,\n            cardOverlayEnabled: cardOverlayEnabled,\n            cardShadowEnabled: cardShadowEnabled,\n            cardStyle: cardStyle,\n            onPageChangeStart: onPageChangeStart,\n            onPageChangeConfirm: onPageChangeConfirm,\n            onPageChangeCancel: onPageChangeCancel,\n            gestureResponseDistance: gestureResponseDistance,\n            headerHeight: headerHeight,\n            onHeaderHeightChange: _this2.handleHeaderLayout,\n            getPreviousScene: _this2.getPreviousScene,\n            getFocusedRoute: _this2.getFocusedRoute,\n            mode: mode,\n            headerMode: headerMode,\n            headerShown: headerShown,\n            hasAbsoluteHeader: isFloatHeaderAbsolute && !headerTransparent,\n            renderHeader: renderHeader,\n            renderScene: renderScene,\n            onOpenRoute: onOpenRoute,\n            onCloseRoute: onCloseRoute,\n            onTransitionStart: onTransitionStart,\n            onTransitionEnd: onTransitionEnd,\n            gestureEnabled: index !== 0 && getGesturesEnabled({\n              route: route\n            }),\n            gestureVelocityImpact: gestureVelocityImpact\n          }, transitionConfig)));\n        })), isFloatHeaderAbsolute ? floatingHeader : null);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.routes === state.routes && props.descriptors === state.descriptors) {\n        return null;\n      }\n\n      var gestures = props.routes.reduce(function (acc, curr) {\n        var descriptor = props.descriptors[curr.key];\n\n        var _ref10 = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {},\n            animationEnabled = _ref10.animationEnabled;\n\n        acc[curr.key] = state.gestures[curr.key] || new Animated.Value(props.openingRouteKeys.includes(curr.key) && animationEnabled !== false ? getDistanceFromOptions(props.mode, state.layout, descriptor) : 0);\n        return acc;\n      }, {});\n      return {\n        routes: props.routes,\n        scenes: props.routes.map(function (route, index, self) {\n          var previousRoute = self[index - 1];\n          var nextRoute = self[index + 1];\n          var oldScene = state.scenes[index];\n          var currentGesture = gestures[route.key];\n          var previousGesture = previousRoute ? gestures[previousRoute.key] : undefined;\n          var nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n          var descriptor = props.descriptors[route.key] || state.descriptors[route.key] || (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n          var nextDescriptor = props.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key] || state.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key];\n          var previousDescriptor = props.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key] || state.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key];\n          var scene = {\n            route: route,\n            descriptor: descriptor,\n            progress: {\n              current: getProgressFromGesture(props.mode, currentGesture, state.layout, descriptor),\n              next: nextGesture ? getProgressFromGesture(props.mode, nextGesture, state.layout, nextDescriptor) : undefined,\n              previous: previousGesture ? getProgressFromGesture(props.mode, previousGesture, state.layout, previousDescriptor) : undefined\n            },\n            __memo: [route, state.layout, descriptor, nextDescriptor, previousDescriptor, currentGesture, nextGesture, previousGesture]\n          };\n\n          if (oldScene && scene.__memo.every(function (it, i) {\n            return oldScene.__memo[i] === it;\n          })) {\n            return oldScene;\n          }\n\n          return scene;\n        }),\n        gestures: gestures,\n        descriptors: props.descriptors,\n        headerHeights: getHeaderHeights(props.routes, props.insets, state.descriptors, state.layout, state.headerHeights)\n      };\n    }\n  }]);\n\n  return CardStack;\n}(React.Component);\n\nexport { CardStack as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  },\n  floating: {\n    zIndex: 1\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-navigation-stack/lib/module/vendor/views/Stack/CardStack.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","React","MaybeScreenContainer","MaybeScreen","getDefaultHeaderHeight","CardContainer","DefaultTransition","ModalTransition","forNoAnimation","forNoAnimationHeader","forNoAnimationCard","HeaderShownContext","getDistanceForDirection","EPSILON","FALLBACK_DESCRIPTOR","freeze","options","getHeaderHeights","routes","insets","descriptors","layout","previous","reduce","acc","curr","style","StyleSheet","flatten","headerStyle","height","safeAreaInsets","headerStatusBarHeight","top","getDistanceFromOptions","mode","descriptor","gestureDirection","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","_props","e","nativeEvent","setState","state","props","headerHeights","route","previousHeight","index","getPreviousRoute","scenes","previousRoute","previousScene","find","scene","undefined","Dimensions","get","_height","_width","gestures","closingRouteKeys","onOpenRoute","onCloseRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","right","bottom","left","isScreensEnabled","Platform","OS","createElement","Consumer","isParentHeaderShown","isFloatHeaderAbsolute","slice","some","headerTransparent","headerShown","floatingHeader","Fragment","getPreviousScene","getFocusedRoute","onContentHeightChange","handleHeaderLayout","styleInterpolator","styles","floating","absolute","enabled","container","onLayout","handleLayout","map","self","focused","isScreenActive","progress","next","extrapolate","cardShadowEnabled","cardOverlayEnabled","cardOverlay","cardStyle","animationEnabled","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","headerHeight","absoluteFill","active","pointerEvents","closing","includes","onHeaderHeightChange","hasAbsoluteHeader","gestureEnabled","Animated","Value","openingRouteKeys","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","current","__memo","every","it","Component","create","flex","position","zIndex"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Animated, StyleSheet, Dimensions, Platform } from 'react-native';\nimport { MaybeScreenContainer, MaybeScreen } from '../Screens';\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport CardContainer from './CardContainer';\nimport { DefaultTransition, ModalTransition } from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nconst EPSILON = 0.01;\nconst FALLBACK_DESCRIPTOR = Object.freeze({\n  options: {}\n});\n\nconst getHeaderHeights = (routes, insets, descriptors, layout, previous) => {\n  return routes.reduce((acc, curr) => {\n    const {\n      options = {}\n    } = descriptors[curr.key] || {};\n    const style = StyleSheet.flatten(options.headerStyle || {});\n    const height = typeof style.height === 'number' ? style.height : previous[curr.key];\n\n    const safeAreaInsets = _objectSpread({}, insets, {}, options.safeAreaInsets);\n\n    const {\n      headerStatusBarHeight = safeAreaInsets.top\n    } = options;\n    acc[curr.key] = typeof height === 'number' ? height : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (mode, layout, descriptor) => {\n  const {\n    gestureDirection = mode === 'modal' ? ModalTransition.gestureDirection : DefaultTransition.gestureDirection\n  } = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {};\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (mode, gesture, layout, descriptor) => {\n  const distance = getDistanceFromOptions(mode, {\n    // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n    // This causes blank screen on web if it was previously inside container with display: none\n    width: Math.max(1, layout.width),\n    height: Math.max(1, layout.height)\n  }, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0]\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1]\n  });\n};\n\nexport default class CardStack extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.routes === state.routes && props.descriptors === state.descriptors) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const {\n        animationEnabled\n      } = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {};\n      acc[curr.key] = state.gestures[curr.key] || new Animated.Value(props.openingRouteKeys.includes(curr.key) && animationEnabled !== false ? getDistanceFromOptions(props.mode, state.layout, descriptor) : 0);\n      return acc;\n    }, {});\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n        const oldScene = state.scenes[index];\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute ? gestures[previousRoute.key] : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n        const descriptor = props.descriptors[route.key] || state.descriptors[route.key] || (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n        const nextDescriptor = props.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key] || state.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key];\n        const previousDescriptor = props.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key] || state.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key];\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(props.mode, currentGesture, state.layout, descriptor),\n            next: nextGesture ? getProgressFromGesture(props.mode, nextGesture, state.layout, nextDescriptor) : undefined,\n            previous: previousGesture ? getProgressFromGesture(props.mode, previousGesture, state.layout, previousDescriptor) : undefined\n          },\n          __memo: [route, state.layout, descriptor, nextDescriptor, previousDescriptor, currentGesture, nextGesture, previousGesture]\n        };\n\n        if (oldScene && scene.__memo.every((it, i) => {\n          // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n          return oldScene.__memo[i] === it;\n        })) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(props.routes, props.insets, state.descriptors, state.layout, state.headerHeights)\n    };\n  }\n\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"handleLayout\", e => {\n      const {\n        height,\n        width\n      } = e.nativeEvent.layout;\n      const layout = {\n        width,\n        height\n      };\n      this.setState((state, props) => {\n        if (height === state.layout.height && width === state.layout.width) {\n          return null;\n        }\n\n        return {\n          layout,\n          headerHeights: getHeaderHeights(props.routes, props.insets, state.descriptors, layout, state.headerHeights)\n        };\n      });\n    });\n\n    _defineProperty(this, \"handleHeaderLayout\", ({\n      route,\n      height\n    }) => {\n      this.setState(({\n        headerHeights\n      }) => {\n        const previousHeight = headerHeights[route.key];\n\n        if (previousHeight === height) {\n          return null;\n        }\n\n        return {\n          headerHeights: _objectSpread({}, headerHeights, {\n            [route.key]: height\n          })\n        };\n      });\n    });\n\n    _defineProperty(this, \"getFocusedRoute\", () => {\n      const {\n        state\n      } = this.props;\n      return state.routes[state.index];\n    });\n\n    _defineProperty(this, \"getPreviousScene\", ({\n      route\n    }) => {\n      const {\n        getPreviousRoute\n      } = this.props;\n      const {\n        scenes\n      } = this.state;\n      const previousRoute = getPreviousRoute({\n        route\n      });\n\n      if (previousRoute) {\n        const previousScene = scenes.find(scene => scene.route.key === previousRoute.key);\n        return previousScene;\n      }\n\n      return undefined;\n    });\n\n    const {\n      height: _height = 0,\n      width: _width = 0\n    } = Dimensions.get('window');\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: {\n        height: _height,\n        width: _width\n      },\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {}\n    };\n  }\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel\n    } = this.props;\n    const {\n      scenes,\n      layout,\n      gestures,\n      headerHeights\n    } = this.state;\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n    let defaultTransitionPreset = mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = _objectSpread({}, defaultTransitionPreset, {\n        headerStyleInterpolator: forNoAnimationHeader\n      });\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left\n    } = focusedOptions.safeAreaInsets || {}; // Screens is buggy on iOS and web, so we only enable it on Android\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n\n    const isScreensEnabled = Platform.OS !== 'ios' && mode !== 'modal';\n    return /*#__PURE__*/React.createElement(HeaderShownContext.Consumer, null, isParentHeaderShown => {\n      const isFloatHeaderAbsolute = headerMode === 'float' ? this.state.scenes.slice(-2).some(scene => {\n        const {\n          descriptor\n        } = scene;\n        const options = descriptor ? descriptor.options : {};\n        const {\n          headerTransparent,\n          headerShown = isParentHeaderShown === false\n        } = options;\n\n        if (headerTransparent || headerShown === false) {\n          return true;\n        }\n\n        return false;\n      }) : false;\n      const floatingHeader = headerMode === 'float' ? /*#__PURE__*/React.createElement(React.Fragment, {\n        key: \"header\"\n      }, renderHeader({\n        mode: 'float',\n        layout,\n        insets: {\n          top,\n          right,\n          bottom,\n          left\n        },\n        scenes,\n        getPreviousScene: this.getPreviousScene,\n        getFocusedRoute: this.getFocusedRoute,\n        onContentHeightChange: this.handleHeaderLayout,\n        gestureDirection: focusedOptions.gestureDirection !== undefined ? focusedOptions.gestureDirection : defaultTransitionPreset.gestureDirection,\n        styleInterpolator: focusedOptions.headerStyleInterpolator !== undefined ? focusedOptions.headerStyleInterpolator : defaultTransitionPreset.headerStyleInterpolator,\n        style: [styles.floating, isFloatHeaderAbsolute && styles.absolute]\n      })) : null;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, isFloatHeaderAbsolute ? null : floatingHeader, /*#__PURE__*/React.createElement(MaybeScreenContainer, {\n        enabled: isScreensEnabled,\n        style: styles.container,\n        onLayout: this.handleLayout\n      }, routes.map((route, index, self) => {\n        const focused = focusedRoute.key === route.key;\n        const gesture = gestures[route.key];\n        const scene = scenes[index];\n        const isScreenActive = scene.progress.next ? scene.progress.next.interpolate({\n          inputRange: [0, 1 - EPSILON, 1],\n          outputRange: [1, 1, 0],\n          extrapolate: 'clamp'\n        }) : 1;\n        const {\n          safeAreaInsets,\n          headerShown = isParentHeaderShown === false,\n          headerTransparent,\n          cardShadowEnabled,\n          cardOverlayEnabled,\n          cardOverlay,\n          cardStyle,\n          animationEnabled,\n          gestureResponseDistance,\n          gestureVelocityImpact,\n          gestureDirection = defaultTransitionPreset.gestureDirection,\n          transitionSpec = defaultTransitionPreset.transitionSpec,\n          cardStyleInterpolator = animationEnabled === false ? forNoAnimationCard : defaultTransitionPreset.cardStyleInterpolator,\n          headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator\n        } = scene.descriptor ? scene.descriptor.options : {};\n        let transitionConfig = {\n          gestureDirection,\n          transitionSpec,\n          cardStyleInterpolator,\n          headerStyleInterpolator\n        }; // When a screen is not the last, it should use next screen's transition config\n        // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n        // For example combining a slide and a modal transition would look wrong otherwise\n        // With this approach, combining different transition styles in the same navigator mostly looks right\n        // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n        // but majority of the transitions look alright\n\n        if (index !== self.length - 1) {\n          const nextScene = scenes[index + 1];\n\n          if (nextScene) {\n            const {\n              animationEnabled,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false ? forNoAnimationCard : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator\n            } = nextScene.descriptor ? nextScene.descriptor.options : {};\n            transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator\n            };\n          }\n        }\n\n        const {\n          top: safeAreaInsetTop = insets.top,\n          right: safeAreaInsetRight = insets.right,\n          bottom: safeAreaInsetBottom = insets.bottom,\n          left: safeAreaInsetLeft = insets.left\n        } = safeAreaInsets || {};\n        const headerHeight = headerMode !== 'none' && headerShown !== false ? headerHeights[route.key] : 0;\n        return /*#__PURE__*/React.createElement(MaybeScreen, {\n          key: route.key,\n          style: StyleSheet.absoluteFill,\n          enabled: isScreensEnabled,\n          active: isScreenActive,\n          pointerEvents: \"box-none\"\n        }, /*#__PURE__*/React.createElement(CardContainer, _extends({\n          index: index,\n          active: index === self.length - 1,\n          focused: focused,\n          closing: closingRouteKeys.includes(route.key),\n          layout: layout,\n          gesture: gesture,\n          scene: scene,\n          safeAreaInsetTop: safeAreaInsetTop,\n          safeAreaInsetRight: safeAreaInsetRight,\n          safeAreaInsetBottom: safeAreaInsetBottom,\n          safeAreaInsetLeft: safeAreaInsetLeft,\n          cardOverlay: cardOverlay,\n          cardOverlayEnabled: cardOverlayEnabled,\n          cardShadowEnabled: cardShadowEnabled,\n          cardStyle: cardStyle,\n          onPageChangeStart: onPageChangeStart,\n          onPageChangeConfirm: onPageChangeConfirm,\n          onPageChangeCancel: onPageChangeCancel,\n          gestureResponseDistance: gestureResponseDistance,\n          headerHeight: headerHeight,\n          onHeaderHeightChange: this.handleHeaderLayout,\n          getPreviousScene: this.getPreviousScene,\n          getFocusedRoute: this.getFocusedRoute,\n          mode: mode,\n          headerMode: headerMode,\n          headerShown: headerShown,\n          hasAbsoluteHeader: isFloatHeaderAbsolute && !headerTransparent,\n          renderHeader: renderHeader,\n          renderScene: renderScene,\n          onOpenRoute: onOpenRoute,\n          onCloseRoute: onCloseRoute,\n          onTransitionStart: onTransitionStart,\n          onTransitionEnd: onTransitionEnd,\n          gestureEnabled: index !== 0 && getGesturesEnabled({\n            route\n          }),\n          gestureVelocityImpact: gestureVelocityImpact\n        }, transitionConfig)));\n      })), isFloatHeaderAbsolute ? floatingHeader : null);\n    });\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  },\n  floating: {\n    zIndex: 1\n  }\n});\n//# sourceMappingURL=CardStack.js.map"]},"metadata":{},"sourceType":"module"}