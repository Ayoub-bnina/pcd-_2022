{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport getNavigationActionCreators from \"./routers/getNavigationActionCreators\";\nimport _getChildNavigation from \"./getChildNavigation\";\nimport getChildrenNavigationCache from \"./getChildrenNavigationCache\";\nexport default function getNavigation(router, state, dispatch, actionSubscribers, getScreenProps, getCurrentNavigation) {\n  var actions = router.getActionCreators(state, null);\n  var navigation = {\n    actions: actions,\n    router: router,\n    state: state,\n    dispatch: dispatch,\n    getScreenProps: getScreenProps,\n    getChildNavigation: function getChildNavigation(childKey) {\n      return _getChildNavigation(navigation, childKey, getCurrentNavigation);\n    },\n    isFocused: function isFocused(childKey) {\n      var _getCurrentNavigation = getCurrentNavigation().state,\n          routes = _getCurrentNavigation.routes,\n          index = _getCurrentNavigation.index;\n\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n\n      return false;\n    },\n    addListener: function addListener(eventName, handler) {\n      if (eventName !== 'action') {\n        return {\n          remove: function remove() {}\n        };\n      }\n\n      actionSubscribers.add(handler);\n      return {\n        remove: function remove() {\n          actionSubscribers.delete(handler);\n        }\n      };\n    },\n    dangerouslyGetParent: function dangerouslyGetParent() {\n      return null;\n    },\n    isFirstRouteInParent: function isFirstRouteInParent() {\n      return true;\n    },\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation())\n  };\n\n  var actionCreators = _objectSpread({}, getNavigationActionCreators(navigation.state), {}, actions);\n\n  Object.keys(actionCreators).forEach(function (actionName) {\n    navigation[actionName] = function () {\n      return navigation.dispatch(actionCreators[actionName].apply(actionCreators, arguments));\n    };\n  });\n  return navigation;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,2BAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,0BAAP;AAEA,eAAe,SAASC,aAAT,CACbC,MADa,EAEbC,KAFa,EAGbC,QAHa,EAIbC,iBAJa,EAKbC,cALa,EAMbC,oBANa,EAOb;AACA,MAAMC,OAAO,GAAGN,MAAM,CAACO,iBAAPP,CAAyBC,KAAzBD,EAAgC,IAAhCA,CAAhB;AAEA,MAAMQ,UAAU,GAAG;AACjBF,WADiB,EACjBA,OADiB;AAEjBN,UAFiB,EAEjBA,MAFiB;AAGjBC,SAHiB,EAGjBA,KAHiB;AAIjBC,YAJiB,EAIjBA,QAJiB;AAKjBE,kBALiB,EAKjBA,cALiB;AAMjBP,sBAAkB,EAAGY,oCAAD;AAAA,aAClBZ,mBAAkB,CAACW,UAAD,EAAaC,QAAb,EAAuBJ,oBAAvB,CADA;AAAA,KANH;AAQjBK,aAAS,EAAGD,2BAAD,EAAc;AACvB,kCAA0BJ,oBAAoB,GAAGJ,KAAjD;AAAA,UAAQU,MAAR,yBAAQA,MAAR;AAAA,UAAgBC,KAAhB,yBAAgBA,KAAhB;;AACA,UAAIH,QAAQ,IAAI,IAAZA,IAAoBE,MAAM,CAACC,KAAD,CAAND,CAAcE,GAAdF,KAAsBF,QAA9C,EAAwD;AACtD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AAbe;AAejBK,eAAW,EAAE,qBAACC,SAAD,EAAYC,OAAZ,EAAwB;AACnC,UAAID,SAAS,KAAK,QAAlB,EAA4B;AAC1B,eAAO;AAAEE,gBAAM,EAAE,kBAAM,CAAE;AAAlB,SAAP;AACD;;AACDd,uBAAiB,CAACe,GAAlBf,CAAsBa,OAAtBb;AACA,aAAO;AACLc,cAAM,EAAE,kBAAM;AACZd,2BAAiB,CAACgB,MAAlBhB,CAAyBa,OAAzBb;AACD;AAHI,OAAP;AApBe;AA0BjBiB,wBAAoB,EAAE;AAAA,aAAM,IAAN;AAAA,KA1BL;AA2BjBC,wBAAoB,EAAE;AAAA,aAAM,IAAN;AAAA,KA3BL;AA4BjBC,uBAAmB,EAAExB,0BAA0B,CAACO,oBAAoB,EAArB;AA5B9B,GAAnB;;AA+BA,MAAMkB,cAAc,qBACf3B,2BAA2B,CAACY,UAAU,CAACP,KAAZ,CADZ,MAEfK,OAFe,CAApB;;AAKAkB,QAAM,CAACC,IAAPD,CAAYD,cAAZC,EAA4BE,OAA5BF,CAAqCG,oBAAD,EAAgB;AAClDnB,cAAU,CAACmB,UAAD,CAAVnB,GAAyB;AAAA,aACvBA,UAAU,CAACN,QAAXM,CAAoBe,cAAc,CAACI,UAAD,CAAdJ,qBAAc,YAAlCf,CADuB;AAAA,KAAzBA;AADF;AAKA,SAAOA,UAAP;AACD","names":["getNavigationActionCreators","getChildNavigation","getChildrenNavigationCache","getNavigation","router","state","dispatch","actionSubscribers","getScreenProps","getCurrentNavigation","actions","getActionCreators","navigation","childKey","isFocused","routes","index","key","addListener","eventName","handler","remove","add","delete","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","actionCreators","Object","keys","forEach","actionName"],"sources":["getNavigation.js"],"sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nexport default function getNavigation(\n  router,\n  state,\n  dispatch,\n  actionSubscribers,\n  getScreenProps,\n  getCurrentNavigation\n) {\n  const actions = router.getActionCreators(state, null);\n\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: (childKey) =>\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: (childKey) => {\n      const { routes, index } = getCurrentNavigation().state;\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return { remove: () => {} };\n      }\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        },\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\n  };\n\n  const actionCreators = {\n    ...getNavigationActionCreators(navigation.state),\n    ...actions,\n  };\n\n  Object.keys(actionCreators).forEach((actionName) => {\n    navigation[actionName] = (...args) =>\n      navigation.dispatch(actionCreators[actionName](...args));\n  });\n\n  return navigation;\n}\n"]},"metadata":{},"sourceType":"module"}