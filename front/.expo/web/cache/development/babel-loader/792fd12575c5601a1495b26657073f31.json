{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"compact\", \"mode\", \"dark\", \"loading\", \"icon\", \"color\", \"children\", \"uppercase\", \"accessibilityLabel\", \"accessibilityHint\", \"onPress\", \"onLongPress\", \"style\", \"theme\", \"contentStyle\", \"labelStyle\", \"testID\", \"accessible\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport ActivityIndicator from \"./ActivityIndicator\";\nimport Icon from \"./Icon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport TouchableRipple from \"./TouchableRipple/TouchableRipple\";\nimport { black, white } from \"../styles/colors\";\nimport { withTheme } from \"../core/theming\";\n\nvar Button = function Button(_ref) {\n  var disabled = _ref.disabled,\n      compact = _ref.compact,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'text' : _ref$mode,\n      dark = _ref.dark,\n      loading = _ref.loading,\n      icon = _ref.icon,\n      buttonColor = _ref.color,\n      children = _ref.children,\n      _ref$uppercase = _ref.uppercase,\n      uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n      accessibilityLabel = _ref.accessibilityLabel,\n      accessibilityHint = _ref.accessibilityHint,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      style = _ref.style,\n      theme = _ref.theme,\n      contentStyle = _ref.contentStyle,\n      labelStyle = _ref.labelStyle,\n      testID = _ref.testID,\n      accessible = _ref.accessible,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _StyleSheet$flatten;\n\n  var _React$useRef = React.useRef(new Animated.Value(mode === 'contained' ? 2 : 0)),\n      elevation = _React$useRef.current;\n\n  React.useEffect(function () {\n    elevation.setValue(mode === 'contained' ? 2 : 0);\n  }, [mode, elevation]);\n\n  var handlePressIn = function handlePressIn() {\n    if (mode === 'contained') {\n      var scale = theme.animation.scale;\n      Animated.timing(elevation, {\n        toValue: 8,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n\n  var handlePressOut = function handlePressOut() {\n    if (mode === 'contained') {\n      var scale = theme.animation.scale;\n      Animated.timing(elevation, {\n        toValue: 2,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n\n  var colors = theme.colors,\n      roundness = theme.roundness;\n  var font = theme.fonts.medium;\n  var backgroundColor, borderColor, textColor, borderWidth;\n\n  if (mode === 'contained') {\n    if (disabled) {\n      backgroundColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n    } else if (buttonColor) {\n      backgroundColor = buttonColor;\n    } else {\n      backgroundColor = colors.primary;\n    }\n  } else {\n    backgroundColor = 'transparent';\n  }\n\n  if (mode === 'outlined') {\n    borderColor = color(theme.dark ? white : black).alpha(0.29).rgb().string();\n    borderWidth = StyleSheet.hairlineWidth;\n  } else {\n    borderColor = 'transparent';\n    borderWidth = 0;\n  }\n\n  if (disabled) {\n    textColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n  } else if (mode === 'contained') {\n    var isDark;\n\n    if (typeof dark === 'boolean') {\n      isDark = dark;\n    } else {\n      isDark = backgroundColor === 'transparent' ? false : !color(backgroundColor).isLight();\n    }\n\n    textColor = isDark ? white : black;\n  } else if (buttonColor) {\n    textColor = buttonColor;\n  } else {\n    textColor = colors.primary;\n  }\n\n  var rippleColor = color(textColor).alpha(0.32).rgb().string();\n  var buttonStyle = {\n    backgroundColor: backgroundColor,\n    borderColor: borderColor,\n    borderWidth: borderWidth,\n    borderRadius: roundness\n  };\n  var touchableStyle = {\n    borderRadius: style ? (StyleSheet.flatten(style) || {}).borderRadius || roundness : roundness\n  };\n\n  var _ref2 = StyleSheet.flatten(labelStyle) || {},\n      customLabelColor = _ref2.color,\n      customLabelSize = _ref2.fontSize;\n\n  var textStyle = _objectSpread({\n    color: textColor\n  }, font);\n\n  var elevationRes = disabled || mode !== 'contained' ? 0 : elevation;\n  var iconStyle = ((_StyleSheet$flatten = StyleSheet.flatten(contentStyle)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.flexDirection) === 'row-reverse' ? styles.iconReverse : styles.icon;\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [styles.button, compact && styles.compact, {\n      elevation: elevationRes\n    }, buttonStyle, style]\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    delayPressIn: 0,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    accessible: accessible,\n    disabled: disabled,\n    rippleColor: rippleColor,\n    style: touchableStyle,\n    testID: testID\n  }, React.createElement(View, {\n    style: [styles.content, contentStyle]\n  }, icon && loading !== true ? React.createElement(View, {\n    style: iconStyle\n  }, React.createElement(Icon, {\n    source: icon,\n    size: customLabelSize !== null && customLabelSize !== void 0 ? customLabelSize : 16,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor\n  })) : null, loading ? React.createElement(ActivityIndicator, {\n    size: customLabelSize !== null && customLabelSize !== void 0 ? customLabelSize : 16,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor,\n    style: iconStyle\n  }) : null, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, compact && styles.compactLabel, uppercase && styles.uppercaseLabel, textStyle, font, labelStyle]\n  }, children))));\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid'\n  },\n  compact: {\n    minWidth: 'auto'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4\n  },\n  label: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    marginVertical: 9,\n    marginHorizontal: 16\n  },\n  compactLabel: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  }\n});\nexport default withTheme(Button);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Button.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","ActivityIndicator","Icon","Surface","Text","TouchableRipple","black","white","withTheme","Button","disabled","compact","mode","dark","loading","icon","buttonColor","children","uppercase","accessibilityLabel","accessibilityHint","onPress","onLongPress","style","theme","contentStyle","labelStyle","testID","accessible","rest","_StyleSheet$flatten","useRef","Animated","Value","elevation","current","useEffect","setValue","handlePressIn","scale","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","colors","roundness","font","fonts","medium","backgroundColor","borderColor","textColor","borderWidth","alpha","rgb","string","primary","StyleSheet","hairlineWidth","isDark","isLight","rippleColor","buttonStyle","borderRadius","touchableStyle","flatten","customLabelColor","customLabelSize","fontSize","textStyle","elevationRes","iconStyle","flexDirection","styles","iconReverse","createElement","button","borderless","delayPressIn","onPressIn","onPressOut","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","View","content","size","selectable","numberOfLines","label","compactLabel","uppercaseLabel","create","minWidth","borderStyle","alignItems","justifyContent","marginLeft","marginRight","textAlign","letterSpacing","marginVertical","marginHorizontal","textTransform"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport ActivityIndicator from './ActivityIndicator';\nimport Icon from './Icon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport TouchableRipple from './TouchableRipple/TouchableRipple';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = ({\n  disabled,\n  compact,\n  mode = 'text',\n  dark,\n  loading,\n  icon,\n  color: buttonColor,\n  children,\n  uppercase = true,\n  accessibilityLabel,\n  accessibilityHint,\n  onPress,\n  onLongPress,\n  style,\n  theme,\n  contentStyle,\n  labelStyle,\n  testID,\n  accessible,\n  ...rest\n}) => {\n  var _StyleSheet$flatten;\n\n  const {\n    current: elevation\n  } = React.useRef(new Animated.Value(mode === 'contained' ? 2 : 0));\n  React.useEffect(() => {\n    elevation.setValue(mode === 'contained' ? 2 : 0);\n  }, [mode, elevation]);\n\n  const handlePressIn = () => {\n    if (mode === 'contained') {\n      const {\n        scale\n      } = theme.animation;\n      Animated.timing(elevation, {\n        toValue: 8,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n\n  const handlePressOut = () => {\n    if (mode === 'contained') {\n      const {\n        scale\n      } = theme.animation;\n      Animated.timing(elevation, {\n        toValue: 2,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n\n  const {\n    colors,\n    roundness\n  } = theme;\n  const font = theme.fonts.medium;\n  let backgroundColor, borderColor, textColor, borderWidth;\n\n  if (mode === 'contained') {\n    if (disabled) {\n      backgroundColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n    } else if (buttonColor) {\n      backgroundColor = buttonColor;\n    } else {\n      backgroundColor = colors.primary;\n    }\n  } else {\n    backgroundColor = 'transparent';\n  }\n\n  if (mode === 'outlined') {\n    borderColor = color(theme.dark ? white : black).alpha(0.29).rgb().string();\n    borderWidth = StyleSheet.hairlineWidth;\n  } else {\n    borderColor = 'transparent';\n    borderWidth = 0;\n  }\n\n  if (disabled) {\n    textColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n  } else if (mode === 'contained') {\n    let isDark;\n\n    if (typeof dark === 'boolean') {\n      isDark = dark;\n    } else {\n      isDark = backgroundColor === 'transparent' ? false : !color(backgroundColor).isLight();\n    }\n\n    textColor = isDark ? white : black;\n  } else if (buttonColor) {\n    textColor = buttonColor;\n  } else {\n    textColor = colors.primary;\n  }\n\n  const rippleColor = color(textColor).alpha(0.32).rgb().string();\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius: roundness\n  };\n  const touchableStyle = {\n    borderRadius: style ? (StyleSheet.flatten(style) || {}).borderRadius || roundness : roundness\n  };\n  const {\n    color: customLabelColor,\n    fontSize: customLabelSize\n  } = StyleSheet.flatten(labelStyle) || {};\n  const textStyle = {\n    color: textColor,\n    ...font\n  };\n  const elevationRes = disabled || mode !== 'contained' ? 0 : elevation;\n  const iconStyle = ((_StyleSheet$flatten = StyleSheet.flatten(contentStyle)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.flexDirection) === 'row-reverse' ? styles.iconReverse : styles.icon;\n  return /*#__PURE__*/React.createElement(Surface, _extends({}, rest, {\n    style: [styles.button, compact && styles.compact, {\n      elevation: elevationRes\n    }, buttonStyle, style]\n  }), /*#__PURE__*/React.createElement(TouchableRipple, {\n    borderless: true,\n    delayPressIn: 0,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled\n    },\n    accessible: accessible,\n    disabled: disabled,\n    rippleColor: rippleColor,\n    style: touchableStyle,\n    testID: testID\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, contentStyle]\n  }, icon && loading !== true ? /*#__PURE__*/React.createElement(View, {\n    style: iconStyle\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    size: customLabelSize !== null && customLabelSize !== void 0 ? customLabelSize : 16,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor\n  })) : null, loading ? /*#__PURE__*/React.createElement(ActivityIndicator, {\n    size: customLabelSize !== null && customLabelSize !== void 0 ? customLabelSize : 16,\n    color: typeof customLabelColor === 'string' ? customLabelColor : textColor,\n    style: iconStyle\n  }) : null, /*#__PURE__*/React.createElement(Text, {\n    selectable: false,\n    numberOfLines: 1,\n    style: [styles.label, compact && styles.compactLabel, uppercase && styles.uppercaseLabel, textStyle, font, labelStyle]\n  }, children))));\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid'\n  },\n  compact: {\n    minWidth: 'auto'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4\n  },\n  label: {\n    textAlign: 'center',\n    letterSpacing: 1,\n    marginVertical: 9,\n    marginHorizontal: 16\n  },\n  compactLabel: {\n    marginHorizontal: 8\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  }\n});\nexport default withTheme(Button);\n//# sourceMappingURL=Button.js.map"]},"metadata":{},"sourceType":"module"}