{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme } from \"../../core/theming\";\nimport { RadioButtonContext } from \"./RadioButtonGroup\";\nimport { handlePress } from \"./utils\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport RadioButton from \"./RadioButton\";\nimport Text from \"../Typography/Text\";\nimport RadioButtonAndroid from \"./RadioButtonAndroid\";\nimport RadioButtonIOS from \"./RadioButtonIOS\";\n\nvar RadioButtonItem = function RadioButtonItem(_ref) {\n  var value = _ref.value,\n      label = _ref.label,\n      style = _ref.style,\n      labelStyle = _ref.labelStyle,\n      onPress = _ref.onPress,\n      disabled = _ref.disabled,\n      color = _ref.color,\n      uncheckedColor = _ref.uncheckedColor,\n      status = _ref.status,\n      colors = _ref.theme.colors,\n      accessibilityLabel = _ref.accessibilityLabel,\n      testID = _ref.testID,\n      mode = _ref.mode,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'trailing' : _ref$position;\n  var radioButtonProps = {\n    value: value,\n    disabled: disabled,\n    status: status,\n    color: color,\n    uncheckedColor: uncheckedColor\n  };\n  var isLeading = position === 'leading';\n  var radioButton;\n\n  if (mode === 'android') {\n    radioButton = React.createElement(RadioButtonAndroid, radioButtonProps);\n  } else if (mode === 'ios') {\n    radioButton = React.createElement(RadioButtonIOS, radioButtonProps);\n  } else {\n    radioButton = React.createElement(RadioButton, radioButtonProps);\n  }\n\n  return React.createElement(RadioButtonContext.Consumer, null, function (context) {\n    return React.createElement(TouchableRipple, {\n      onPress: disabled ? undefined : function () {\n        return handlePress({\n          onPress: onPress,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          value: value\n        });\n      },\n      accessibilityLabel: accessibilityLabel,\n      testID: testID\n    }, React.createElement(View, {\n      style: [styles.container, style],\n      pointerEvents: \"none\"\n    }, isLeading && radioButton, React.createElement(Text, {\n      style: [styles.label, {\n        color: colors.text,\n        textAlign: isLeading ? 'right' : 'left'\n      }, labelStyle]\n    }, label), !isLeading && radioButton));\n  });\n};\n\nRadioButtonItem.displayName = 'RadioButton.Item';\nexport default withTheme(RadioButtonItem);\nvar RadioButtonItemWithTheme = withTheme(RadioButtonItem);\nexport { RadioButtonItemWithTheme as RadioButtonItem };\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/RadioButton/RadioButtonItem.js"],"names":["React","withTheme","RadioButtonContext","handlePress","TouchableRipple","RadioButton","Text","RadioButtonAndroid","RadioButtonIOS","RadioButtonItem","value","label","style","labelStyle","onPress","disabled","color","uncheckedColor","status","colors","theme","accessibilityLabel","testID","mode","position","radioButtonProps","isLeading","radioButton","createElement","Consumer","context","undefined","onValueChange","View","styles","container","pointerEvents","text","textAlign","displayName","RadioButtonItemWithTheme","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize","flexShrink","flexGrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { RadioButtonContext } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport RadioButton from './RadioButton';\nimport Text from '../Typography/Text';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-item.ios.png\" />\n *     <figcaption>Pressed</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonItem = ({\n  value,\n  label,\n  style,\n  labelStyle,\n  onPress,\n  disabled,\n  color,\n  uncheckedColor,\n  status,\n  theme: {\n    colors\n  },\n  accessibilityLabel,\n  testID,\n  mode,\n  position = 'trailing'\n}) => {\n  const radioButtonProps = {\n    value,\n    disabled,\n    status,\n    color,\n    uncheckedColor\n  };\n  const isLeading = position === 'leading';\n  let radioButton;\n\n  if (mode === 'android') {\n    radioButton = /*#__PURE__*/React.createElement(RadioButtonAndroid, radioButtonProps);\n  } else if (mode === 'ios') {\n    radioButton = /*#__PURE__*/React.createElement(RadioButtonIOS, radioButtonProps);\n  } else {\n    radioButton = /*#__PURE__*/React.createElement(RadioButton, radioButtonProps);\n  }\n\n  return /*#__PURE__*/React.createElement(RadioButtonContext.Consumer, null, context => {\n    return /*#__PURE__*/React.createElement(TouchableRipple, {\n      onPress: disabled ? undefined : () => handlePress({\n        onPress: onPress,\n        onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n        value\n      }),\n      accessibilityLabel: accessibilityLabel,\n      testID: testID\n    }, /*#__PURE__*/React.createElement(View, {\n      style: [styles.container, style],\n      pointerEvents: \"none\"\n    }, isLeading && radioButton, /*#__PURE__*/React.createElement(Text, {\n      style: [styles.label, {\n        color: colors.text,\n        textAlign: isLeading ? 'right' : 'left'\n      }, labelStyle]\n    }, label), !isLeading && radioButton));\n  });\n};\n\nRadioButtonItem.displayName = 'RadioButton.Item';\nexport default withTheme(RadioButtonItem); // @component-docs ignore-next-line\n\nconst RadioButtonItemWithTheme = withTheme(RadioButtonItem); // @component-docs ignore-next-line\n\nexport { RadioButtonItemWithTheme as RadioButtonItem };\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1\n  }\n});\n//# sourceMappingURL=RadioButtonItem.js.map"]},"metadata":{},"sourceType":"module"}