{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"elevation\", \"onLongPress\", \"onPress\", \"mode\", \"children\", \"style\", \"theme\", \"testID\", \"accessible\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { white, black } from \"../../styles/colors\";\nimport CardContent from \"./CardContent\";\nimport CardActions from \"./CardActions\";\nimport CardCover from \"./CardCover\";\nimport CardTitle from \"./CardTitle\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\n\nvar Card = function Card(_ref) {\n  var _ref$elevation = _ref.elevation,\n      cardElevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n      onLongPress = _ref.onLongPress,\n      onPress = _ref.onPress,\n      _ref$mode = _ref.mode,\n      cardMode = _ref$mode === void 0 ? 'elevated' : _ref$mode,\n      children = _ref.children,\n      style = _ref.style,\n      theme = _ref.theme,\n      testID = _ref.testID,\n      accessible = _ref.accessible,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(cardElevation)),\n      elevation = _React$useRef.current;\n\n  var animation = theme.animation,\n      dark = theme.dark,\n      mode = theme.mode,\n      roundness = theme.roundness;\n\n  var handlePressIn = function handlePressIn() {\n    var dark = theme.dark,\n        mode = theme.mode,\n        scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact'\n    }).start();\n  };\n\n  var handlePressOut = function handlePressOut() {\n    Animated.timing(elevation, {\n      toValue: cardElevation,\n      duration: 150 * animation.scale,\n      useNativeDriver: !dark || mode === 'exact'\n    }).start();\n  };\n\n  var total = React.Children.count(children);\n  var siblings = React.Children.map(children, function (child) {\n    return React.isValidElement(child) && child.type ? child.type.displayName : null;\n  });\n  var borderColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: roundness,\n      elevation: elevation,\n      borderColor: borderColor\n    }, cardMode === 'outlined' ? styles.outlined : {}, style],\n    theme: theme\n  }, rest), React.createElement(TouchableWithoutFeedback, {\n    delayPressIn: 0,\n    disabled: !(onPress || onLongPress),\n    onLongPress: onLongPress,\n    onPress: onPress,\n    onPressIn: onPress || onLongPress ? handlePressIn : undefined,\n    onPressOut: onPress || onLongPress ? handlePressOut : undefined,\n    testID: testID,\n    accessible: accessible\n  }, React.createElement(View, {\n    style: styles.innerContainer\n  }, React.Children.map(children, function (child, index) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      index: index,\n      total: total,\n      siblings: siblings\n    }) : child;\n  }))));\n};\n\nCard.Content = CardContent;\nCard.Actions = CardActions;\nCard.Cover = CardCover;\nCard.Title = CardTitle;\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  outlined: {\n    elevation: 0,\n    borderWidth: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Card/Card.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","white","black","CardContent","CardActions","CardCover","CardTitle","Surface","withTheme","Card","elevation","cardElevation","onLongPress","onPress","mode","cardMode","children","style","theme","testID","accessible","rest","useRef","Animated","Value","current","animation","dark","roundness","handlePressIn","scale","timing","toValue","duration","useNativeDriver","start","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","borderColor","alpha","rgb","string","createElement","borderRadius","styles","outlined","TouchableWithoutFeedback","delayPressIn","disabled","onPressIn","undefined","onPressOut","View","innerContainer","index","cloneElement","Content","Actions","Cover","Title","StyleSheet","create","flexGrow","flexShrink","borderWidth"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { StyleSheet, Animated, TouchableWithoutFeedback, View } from 'react-native';\nimport color from 'color';\nimport { white, black } from '../../styles/colors';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nimport CardCover from './CardCover'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nimport CardTitle from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = ({\n  elevation: cardElevation = 1,\n  onLongPress,\n  onPress,\n  mode: cardMode = 'elevated',\n  children,\n  style,\n  theme,\n  testID,\n  accessible,\n  ...rest\n}) => {\n  const {\n    current: elevation\n  } = React.useRef(new Animated.Value(cardElevation));\n  const {\n    animation,\n    dark,\n    mode,\n    roundness\n  } = theme;\n\n  const handlePressIn = () => {\n    const {\n      dark,\n      mode,\n      animation: {\n        scale\n      }\n    } = theme;\n    Animated.timing(elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact'\n    }).start();\n  };\n\n  const handlePressOut = () => {\n    Animated.timing(elevation, {\n      toValue: cardElevation,\n      duration: 150 * animation.scale,\n      useNativeDriver: !dark || mode === 'exact'\n    }).start();\n  };\n\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) && child.type ? child.type.displayName : null);\n  const borderColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: roundness,\n      elevation,\n      borderColor\n    }, cardMode === 'outlined' ? styles.outlined : {}, style],\n    theme: theme\n  }, rest), /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    delayPressIn: 0,\n    disabled: !(onPress || onLongPress),\n    onLongPress: onLongPress,\n    onPress: onPress,\n    onPressIn: onPress || onLongPress ? handlePressIn : undefined,\n    onPressOut: onPress || onLongPress ? handlePressOut : undefined,\n    testID: testID,\n    accessible: accessible\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.innerContainer\n  }, React.Children.map(children, (child, index) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n    index,\n    total,\n    siblings\n  }) : child))));\n}; // @component ./CardContent.tsx\n\n\nCard.Content = CardContent; // @component ./CardActions.tsx\n\nCard.Actions = CardActions; // @component ./CardCover.tsx\n\nCard.Cover = CardCover; // @component ./CardTitle.tsx\n\nCard.Title = CardTitle;\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  outlined: {\n    elevation: 0,\n    borderWidth: 1\n  }\n});\nexport default withTheme(Card);\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"module"}