{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"source\", \"style\", \"theme\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nvar defaultSize = 64;\n\nvar AvatarImage = function AvatarImage(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? defaultSize : _ref$size,\n      source = _ref.source,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var colors = theme.colors;\n\n  var _ref2 = StyleSheet.flatten(style) || {},\n      _ref2$backgroundColor = _ref2.backgroundColor,\n      backgroundColor = _ref2$backgroundColor === void 0 ? colors.primary : _ref2$backgroundColor;\n\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, style]\n  }, rest), typeof source === 'function' && source({\n    size: size\n  }), typeof source !== 'function' && React.createElement(Image, {\n    source: source,\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }\n  }));\n};\n\nAvatarImage.displayName = 'Avatar.Image';\nexport default withTheme(AvatarImage);","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Avatar/AvatarImage.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","withTheme","defaultSize","AvatarImage","size","style","theme","rest","colors","StyleSheet","flatten","backgroundColor","primary","createElement","View","width","height","borderRadius","Image","displayName"],"mappings":";;;AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,SAAT;AACA,IAAMC,WAAW,GAAG,EAApB;;AAsBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAMd;AAAA,uBALJC,IAKI;AAAA,MALJA,IAKI,0BALGF,WAKH;AAAA,MAJJR,MAII,QAJJA,MAII;AAAA,MAHJW,KAGI,QAHJA,KAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,IACC;;AACJ,MACEC,MADF,GAEIF,KAFJ,CACEE,MADF;;AAGA,cAEIC,UAAU,CAACC,OAAX,CAAmBL,KAAnB,KAA6B,EAFjC;AAAA,oCACEM,eADF;AAAA,MACEA,eADF,sCACoBH,MAAM,CAACI,OAD3B;;AAGA,SAAoBZ,KAAK,CAACa,aAAN,CAAoBC,IAApB,EAA0B3B,QAAQ,CAAC;AACrDkB,IAAAA,KAAK,EAAE,CAAC;AACNU,MAAAA,KAAK,EAAEX,IADD;AAENY,MAAAA,MAAM,EAAEZ,IAFF;AAGNa,MAAAA,YAAY,EAAEb,IAAI,GAAG,CAHf;AAINO,MAAAA,eAAe,EAAfA;AAJM,KAAD,EAKJN,KALI;AAD8C,GAAD,EAOnDE,IAPmD,CAAlC,EAOV,OAAOb,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAAC;AAC/CU,IAAAA,IAAI,EAAJA;AAD+C,GAAD,CAP5B,EAShB,OAAOV,MAAP,KAAkB,UAAlB,IAA6CM,KAAK,CAACa,aAAN,CAAoBK,KAApB,EAA2B;AAC1ExB,IAAAA,MAAM,EAAEA,MADkE;AAE1EW,IAAAA,KAAK,EAAE;AACLU,MAAAA,KAAK,EAAEX,IADF;AAELY,MAAAA,MAAM,EAAEZ,IAFH;AAGLa,MAAAA,YAAY,EAAEb,IAAI,GAAG;AAHhB;AAFmE,GAA3B,CAT7B,CAApB;AAiBD,CA9BD;;AAgCAD,WAAW,CAACgB,WAAZ,GAA0B,cAA1B;AACA,eAAelB,SAAS,CAACE,WAAD,CAAxB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nimport { withTheme } from '../../core/theming';\nconst defaultSize = 64;\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * export default MyComponent\n * ```\n */\nconst AvatarImage = ({\n  size = defaultSize,\n  source,\n  style,\n  theme,\n  ...rest\n}) => {\n  const {\n    colors\n  } = theme;\n  const {\n    backgroundColor = colors.primary\n  } = StyleSheet.flatten(style) || {};\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor\n    }, style]\n  }, rest), typeof source === 'function' && source({\n    size\n  }), typeof source !== 'function' && /*#__PURE__*/React.createElement(Image, {\n    source: source,\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }\n  }));\n};\n\nAvatarImage.displayName = 'Avatar.Image';\nexport default withTheme(AvatarImage);\n//# sourceMappingURL=AvatarImage.js.map"]},"metadata":{},"sourceType":"module"}