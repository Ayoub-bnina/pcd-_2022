{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport ExponentAV from \"./ExponentAV\";\nimport { requestFullscreen, exitFullscreen } from \"./FullscreenUtils.web\";\nexport default {\n  get name() {\n    return 'ExpoVideoManager';\n  },\n\n  get ScaleNone() {\n    return 'none';\n  },\n\n  get ScaleToFill() {\n    return 'fill';\n  },\n\n  get ScaleAspectFit() {\n    return 'contain';\n  },\n\n  get ScaleAspectFill() {\n    return 'cover';\n  },\n\n  setFullscreen: function setFullscreen(element, isFullScreenEnabled) {\n    return _regeneratorRuntime.async(function setFullscreen$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isFullScreenEnabled) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(requestFullscreen(element));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(exitFullscreen(element));\n\n          case 7:\n            return _context.abrupt(\"return\", ExponentAV.getStatusForVideo(element));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};","map":{"version":3,"mappings":";AACA,OAAOA,UAAP;AACA,SAASC,iBAAT,EAA4BC,cAA5B;AAEA,eAAe;AACb,MAAIC,IAAJ,GAAQ;AACN,WAAO,kBAAP;AACD,GAHY;;AAIb,MAAIC,SAAJ,GAAa;AACX,WAAO,MAAP;AACD,GANY;;AAOb,MAAIC,WAAJ,GAAe;AACb,WAAO,MAAP;AACD,GATY;;AAUb,MAAIC,cAAJ,GAAkB;AAChB,WAAO,SAAP;AACD,GAZY;;AAab,MAAIC,eAAJ,GAAmB;AACjB,WAAO,OAAP;AACD,GAfY;;AAiBPC,eAjBO,yBAkBXC,OAlBW,EAmBXC,mBAnBW;AAAA;AAAA;AAAA;AAAA;AAAA,iBAqBPA,mBArBO;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAsBHT,iBAAiB,CAACQ,OAAD,CAtBd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAwBHP,cAAc,CAACO,OAAD,CAxBX;;AAAA;AAAA,6CA0BJT,UAAU,CAACW,iBAAX,CAA6BF,OAA7B,CA1BI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","names":["ExponentAV","requestFullscreen","exitFullscreen","name","ScaleNone","ScaleToFill","ScaleAspectFit","ScaleAspectFill","setFullscreen","element","isFullScreenEnabled","getStatusForVideo"],"sourceRoot":"","sources":["../src/ExpoVideoManager.web.ts"],"sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}