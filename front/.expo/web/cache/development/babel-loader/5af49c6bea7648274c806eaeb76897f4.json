{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MaskedView from \"../MaskedView\";\nimport { TouchableItem } from \"../TouchableItem\";\nimport useTheme from \"../../../utils/useTheme\";\nexport default function HeaderBackButton(_ref) {\n  var disabled = _ref.disabled,\n      allowFontScaling = _ref.allowFontScaling,\n      backImage = _ref.backImage,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      _ref$labelVisible = _ref.labelVisible,\n      labelVisible = _ref$labelVisible === void 0 ? Platform.OS === 'ios' : _ref$labelVisible,\n      onLabelLayout = _ref.onLabelLayout,\n      onPress = _ref.onPress,\n      customPressColorAndroid = _ref.pressColorAndroid,\n      screenLayout = _ref.screenLayout,\n      customTintColor = _ref.tintColor,\n      titleLayout = _ref.titleLayout,\n      _ref$truncatedLabel = _ref.truncatedLabel,\n      truncatedLabel = _ref$truncatedLabel === void 0 ? 'Back' : _ref$truncatedLabel,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label && label !== 'Back' ? \"\".concat(label, \", back\") : 'Go back' : _ref$accessibilityLab;\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      initialLabelWidth = _React$useState2[0],\n      setInitialLabelWidth = _React$useState2[1];\n\n  var tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n  var pressColorAndroid = customPressColorAndroid !== undefined ? customPressColorAndroid : dark ? 'rgba(255, 255, 255, .32)' : 'rgba(0, 0, 0, .32)';\n\n  var handleLabelLayout = function handleLabelLayout(e) {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  var shouldTruncateLabel = function shouldTruncateLabel() {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  var renderBackImage = function renderBackImage() {\n    if (backImage) {\n      return backImage({\n        tintColor: tintColor\n      });\n    } else {\n      return React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor: tintColor\n        }],\n        source: require(\"../assets/back-icon.png\"),\n        fadeDuration: 0\n      });\n    }\n  };\n\n  var renderLabel = function renderLabel() {\n    var leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    var labelElement = React.createElement(View, {\n      style: screenLayout ? [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout: leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n\n    if (backImage || Platform.OS !== 'ios') {\n      return labelElement;\n    }\n\n    return React.createElement(MaskedView, {\n      maskElement: React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, React.createElement(Image, {\n        source: require(\"../assets/back-icon-mask.png\"),\n        style: styles.iconMask\n      }), React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n\n  var handlePress = function handlePress() {\n    return onPress && requestAnimationFrame(onPress);\n  };\n\n  return React.createElement(TouchableItem, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    testID: \"header-back\",\n    delayPressIn: 0,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColorAndroid,\n    style: [styles.container, disabled && styles.disabled],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    borderless: true\n  }, React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    alignItems: 'center',\n    flexDirection: 'row'\n  }, Platform.select({\n    ios: null,\n    default: {\n      marginVertical: 3,\n      marginHorizontal: 11\n    }\n  })),\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"mappings":"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","names":["React","MaskedView","TouchableItem","useTheme","HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","Platform","OS","onLabelLayout","onPress","customPressColorAndroid","pressColorAndroid","screenLayout","customTintColor","tintColor","titleLayout","truncatedLabel","accessibilityLabel","dark","colors","useState","undefined","initialLabelWidth","setInitialLabelWidth","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","Image","style","styles","icon","Boolean","iconWithLabel","source","require","fadeDuration","renderLabel","leftLabelText","labelElement","View","labelWrapper","minWidth","Animated","Text","accessible","onLayout","color","numberOfLines","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","accessibilityRole","accessibilityComponentType","accessibilityTraits","testID","delayPressIn","pressColor","container","hitSlop","top","right","bottom","left","borderless","Fragment","StyleSheet","create","alignItems","flexDirection","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"sources":["HeaderBackButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\nimport MaskedView from '../MaskedView';\nimport { TouchableItem } from '../TouchableItem';\nimport useTheme from '../../../utils/useTheme';\nimport type { StackHeaderLeftButtonProps } from '../../types';\n\ntype Props = StackHeaderLeftButtonProps;\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible = Platform.OS === 'ios',\n  onLabelLayout,\n  onPress,\n  pressColorAndroid: customPressColorAndroid,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n}: Props) {\n  const { dark, colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const pressColorAndroid =\n    customPressColorAndroid !== undefined\n      ? customPressColorAndroid\n      : dark\n      ? 'rgba(255, 255, 255, .32)'\n      : 'rgba(0, 0, 0, .32)';\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <TouchableItem\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      accessibilityTraits=\"button\"\n      testID=\"header-back\"\n      delayPressIn={0}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColorAndroid}\n      style={[styles.container, disabled && styles.disabled]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </TouchableItem>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}