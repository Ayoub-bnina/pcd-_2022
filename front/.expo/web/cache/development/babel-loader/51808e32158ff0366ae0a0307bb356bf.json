{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleRef\", \"titleStyle\", \"theme\", \"title\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/colors\";\n\nvar AppbarContent = function AppbarContent(_ref) {\n  var _ref$color = _ref.color,\n      titleColor = _ref$color === void 0 ? white : _ref$color,\n      subtitle = _ref.subtitle,\n      subtitleStyle = _ref.subtitleStyle,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      titleRef = _ref.titleRef,\n      titleStyle = _ref.titleStyle,\n      theme = _ref.theme,\n      title = _ref.title,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var fonts = theme.fonts;\n  var subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    disabled: !onPress\n  }, React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), React.createElement(Text, {\n    ref: titleRef,\n    style: [_objectSpread({\n      color: titleColor\n    }, Platform.OS === 'ios' ? fonts.regular : fonts.medium), styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityTraits: \"header\",\n    accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header'\n  }, title), subtitle ? React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null));\n};\n\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent);\nvar AppbarContentWithTheme = withTheme(AppbarContent);\nexport { AppbarContentWithTheme as AppbarContent };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Appbar/AppbarContent.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","Text","withTheme","white","AppbarContent","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","createElement","TouchableWithoutFeedback","disabled","View","styles","container","ref","Platform","OS","regular","medium","numberOfLines","accessible","accessibilityTraits","accessibilityRole","displayName","StyleSheet","create","flex","paddingHorizontal","fontSize","AppbarContentWithTheme"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Platform, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor = white,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  style,\n  titleRef,\n  titleStyle,\n  theme,\n  title,\n  ...rest\n}) => {\n  const {\n    fonts\n  } = theme;\n  const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n  return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    disabled: !onPress\n  }, /*#__PURE__*/React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), /*#__PURE__*/React.createElement(Text, {\n    ref: titleRef,\n    style: [{\n      color: titleColor,\n      ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium)\n    }, styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityTraits: \"header\" // @ts-expect-error React Native doesn't accept 'heading' as it's web-only\n    ,\n    accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header'\n  }, title), subtitle ? /*#__PURE__*/React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null));\n};\n\nAppbarContent.displayName = 'Appbar.Content';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent); // @component-docs ignore-next-line\n\nconst AppbarContentWithTheme = withTheme(AppbarContent); // @component-docs ignore-next-line\n\nexport { AppbarContentWithTheme as AppbarContent };\n//# sourceMappingURL=AppbarContent.js.map"]},"metadata":{},"sourceType":"module"}