{"ast":null,"code":"import _objectSpread2 from \"@babel/runtime/helpers/objectSpread\";\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"outlineColor\", \"activeOutlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\"],\n    _excluded2 = [\"fontSize\", \"fontWeight\", \"lineHeight\", \"height\", \"backgroundColor\", \"textAlign\"];\n\nfunction __ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? __ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : __ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : _ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport InputLabel from \"./Label/InputLabel\";\nimport LabelBackground from \"./Label/LabelBackground\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, ADORNMENT_OFFSET } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, interpolatePlaceholder, calculateOutlinedIconAndAffixTopPosition } from \"./helpers\";\nimport { AdornmentType, AdornmentSide } from \"./Adornment/enums\";\nvar OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nvar LABEL_PADDING_TOP = 8;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT = 48;\nvar INPUT_PADDING_HORIZONTAL = 14;\n\nvar TextInputOutlined = function (_React$Component) {\n  _inherits(TextInputOutlined, _React$Component);\n\n  var _super = _createSuper(TextInputOutlined);\n\n  function TextInputOutlined() {\n    _classCallCheck(this, TextInputOutlined);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextInputOutlined, [{\n    key: \"render\",\n    value: function render() {\n      var _affixTopPosition, _onAffixChange, _topPosition;\n\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          editable = _this$props.editable,\n          label = _this$props.label,\n          error = _this$props.error,\n          selectionColor = _this$props.selectionColor,\n          underlineColor = _this$props.underlineColor,\n          customOutlineColor = _this$props.outlineColor,\n          activeOutlineColor = _this$props.activeOutlineColor,\n          dense = _this$props.dense,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          render = _this$props.render,\n          multiline = _this$props.multiline,\n          parentState = _this$props.parentState,\n          innerRef = _this$props.innerRef,\n          onFocus = _this$props.onFocus,\n          forceFocus = _this$props.forceFocus,\n          onBlur = _this$props.onBlur,\n          onChangeText = _this$props.onChangeText,\n          onLayoutAnimatedText = _this$props.onLayoutAnimatedText,\n          onLeftAffixLayoutChange = _this$props.onLeftAffixLayoutChange,\n          onRightAffixLayoutChange = _this$props.onRightAffixLayoutChange,\n          left = _this$props.left,\n          right = _this$props.right,\n          placeholderTextColor = _this$props.placeholderTextColor,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var adornmentConfig = getAdornmentConfig({\n        left: left,\n        right: right\n      });\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var font = fonts.regular;\n      var hasActiveOutline = parentState.focused || error;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          fontSizeStyle = _ref.fontSize,\n          fontWeight = _ref.fontWeight,\n          lineHeight = _ref.lineHeight,\n          height = _ref.height,\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? colors.background : _ref$backgroundColor,\n          textAlign = _ref.textAlign,\n          viewStyle = _objectWithoutProperties(_ref, _excluded2);\n\n      var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n      var inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n      if (disabled) {\n        var isTransparent = color(customOutlineColor).alpha() === 0;\n        inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n        placeholderColor = colors.disabled;\n        outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n      } else {\n        inputTextColor = colors.text;\n        activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n        placeholderColor = colors.placeholder;\n        outlineColor = customOutlineColor || colors.placeholder;\n        errorColor = colors.error;\n      }\n\n      var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n      var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n      var labelWidth = parentState.labelLayout.width;\n      var labelHeight = parentState.labelLayout.height;\n      var labelHalfWidth = labelWidth / 2;\n      var labelHalfHeight = labelHeight / 2;\n      var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n      var labelTranslationXOffset = 0;\n      var isAdornmentLeftIcon = adornmentConfig.some(function (_ref2) {\n        var side = _ref2.side,\n            type = _ref2.type;\n        return side === AdornmentSide.Left && type === AdornmentType.Icon;\n      });\n\n      if (isAdornmentLeftIcon) {\n        labelTranslationXOffset = (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n      }\n\n      var minInputHeight = (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n      var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n      var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n\n      if (height && typeof height !== 'number') {\n        console.warn('Currently we support only numbers in height prop');\n      }\n\n      var paddingSettings = {\n        height: height ? +height : null,\n        labelHalfHeight: labelHalfHeight,\n        offset: LABEL_PADDING_TOP,\n        multiline: multiline ? multiline : null,\n        dense: dense ? dense : null,\n        topPosition: topPosition,\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        label: label,\n        scale: fontScale,\n        isAndroid: Platform.OS === 'android',\n        styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n      };\n      var pad = calculatePadding(paddingSettings);\n      var paddingOut = adjustPaddingOut(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n        pad: pad\n      }));\n      var baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n      var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n      var labelProps = {\n        label: label,\n        onLayoutAnimatedText: onLayoutAnimatedText,\n        placeholderOpacity: placeholderOpacity,\n        error: error,\n        placeholderStyle: styles.placeholder,\n        baseLabelTranslateY: baseLabelTranslateY,\n        baseLabelTranslateX: baseLabelTranslateX,\n        font: font,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        labelScale: labelScale,\n        wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n        topPosition: topPosition,\n        hasActiveOutline: hasActiveOutline,\n        activeColor: activeColor,\n        placeholderColor: placeholderColor,\n        backgroundColor: backgroundColor,\n        errorColor: errorColor,\n        labelTranslationXOffset: labelTranslationXOffset,\n        roundness: theme.roundness\n      };\n      var minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n      var leftLayout = parentState.leftLayout,\n          rightLayout = parentState.rightLayout;\n      var leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n        height: minHeight,\n        affixHeight: leftLayout.height || 0,\n        labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n      });\n      var rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n        height: minHeight,\n        affixHeight: rightLayout.height || 0,\n        labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n      });\n      var iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n        height: minHeight,\n        affixHeight: ADORNMENT_SIZE,\n        labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n      });\n      var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n      var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n      var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n        adornmentConfig: adornmentConfig,\n        rightAffixWidth: rightAffixWidth,\n        leftAffixWidth: leftAffixWidth,\n        mode: 'outlined'\n      });\n      var affixTopPosition = (_affixTopPosition = {}, _defineProperty2(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty2(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n      var onAffixChange = (_onAffixChange = {}, _defineProperty2(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty2(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n      var adornmentProps = {\n        adornmentConfig: adornmentConfig,\n        forceFocus: forceFocus,\n        topPosition: (_topPosition = {}, _defineProperty2(_topPosition, AdornmentType.Icon, iconTopPosition), _defineProperty2(_topPosition, AdornmentType.Affix, affixTopPosition), _topPosition),\n        onAffixChange: onAffixChange,\n        isTextInputFocused: parentState.focused\n      };\n\n      if (adornmentConfig.length) {\n        adornmentProps = _objectSpread2(_objectSpread2({}, adornmentProps), {}, {\n          left: left,\n          right: right,\n          textStyle: _objectSpread3(_objectSpread3({}, font), {}, {\n            fontSize: fontSize,\n            fontWeight: fontWeight\n          }),\n          visible: this.props.parentState.labeled\n        });\n      }\n\n      return React.createElement(View, {\n        style: viewStyle\n      }, React.createElement(Outline, {\n        theme: theme,\n        hasActiveOutline: hasActiveOutline,\n        focused: parentState.focused,\n        activeColor: activeColor,\n        outlineColor: outlineColor,\n        backgroundColor: backgroundColor\n      }), React.createElement(View, null, React.createElement(View, {\n        style: [styles.labelContainer, {\n          paddingTop: LABEL_PADDING_TOP,\n          minHeight: minHeight\n        }]\n      }, React.createElement(InputLabel, {\n        parentState: parentState,\n        labelProps: labelProps,\n        labelBackground: LabelBackground\n      }), render === null || render === void 0 ? void 0 : render(_objectSpread2(_objectSpread2({\n        testID: 'text-input-outlined'\n      }, rest), {}, {\n        ref: innerRef,\n        onChangeText: onChangeText,\n        placeholder: label ? parentState.placeholder : this.props.placeholder,\n        placeholderTextColor: placeholderTextColor || placeholderColor,\n        editable: !disabled && editable,\n        selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        underlineColorAndroid: 'transparent',\n        multiline: multiline,\n        style: [styles.input, !multiline || multiline && height ? {\n          height: inputHeight\n        } : {}, paddingOut, _objectSpread4(_objectSpread4({}, font), {}, {\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          color: inputTextColor,\n          textAlignVertical: multiline ? 'top' : 'center',\n          textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n        }), Platform.OS === 'web' && {\n          outline: 'none'\n        }, adornmentStyleAdjustmentForNativeInput]\n      }))), React.createElement(TextInputAdornment, adornmentProps)));\n    }\n  }]);\n\n  return TextInputOutlined;\n}(React.Component);\n\n_defineProperty(TextInputOutlined, \"defaultProps\", {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: function render(props) {\n    return React.createElement(NativeTextInput, props);\n  }\n});\n\nexport default TextInputOutlined;\n\nvar Outline = function Outline(_ref3) {\n  var theme = _ref3.theme,\n      hasActiveOutline = _ref3.hasActiveOutline,\n      activeColor = _ref3.activeColor,\n      outlineColor = _ref3.outlineColor,\n      focused = _ref3.focused,\n      backgroundColor = _ref3.backgroundColor;\n  return React.createElement(View, {\n    testID: \"text-input-outline\",\n    pointerEvents: \"none\",\n    style: [styles.outline, {\n      backgroundColor: backgroundColor,\n      borderRadius: theme.roundness,\n      borderWidth: focused ? 2 : 1,\n      borderColor: hasActiveOutline ? activeColor : outlineColor\n    }]\n  });\n};\n\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0\n  },\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/TextInput/TextInputOutlined.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","color","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","ADORNMENT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","AdornmentType","AdornmentSide","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","props","disabled","editable","label","error","selectionColor","underlineColor","customOutlineColor","outlineColor","activeOutlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","adornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","inputTextColor","activeColor","placeholderColor","errorColor","isTransparent","alpha","text","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","roundness","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","createElement","View","Outline","labelContainer","paddingTop","labelBackground","testID","ref","underlineColorAndroid","input","textAlignVertical","outline","Component","NativeTextInput","pointerEvents","borderRadius","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { View, TextInput as NativeTextInput, StyleSheet, I18nManager, Platform } from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from './Adornment/TextInputAdornment';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, ADORNMENT_OFFSET } from './constants';\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, interpolatePlaceholder, calculateOutlinedIconAndAffixTopPosition } from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component {\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      outlineColor: customOutlineColor,\n      activeOutlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right\n    });\n    const {\n      colors,\n      fonts\n    } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      lineHeight,\n      height,\n      backgroundColor = colors.background,\n      textAlign,\n      ...viewStyle\n    } = StyleSheet.flatten(style) || {};\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n    let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n    if (disabled) {\n      const isTransparent = color(customOutlineColor).alpha() === 0;\n      inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n      placeholderColor = colors.disabled;\n      outlineColor = isTransparent ? customOutlineColor : colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : activeOutlineColor || colors.primary;\n      placeholderColor = colors.placeholder;\n      outlineColor = customOutlineColor || colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n    const baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n    let labelTranslationXOffset = 0;\n    const isAdornmentLeftIcon = adornmentConfig.some(({\n      side,\n      type\n    }) => side === AdornmentSide.Left && type === AdornmentType.Icon);\n\n    if (isAdornmentLeftIcon) {\n      labelTranslationXOffset = (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n    }\n\n    const minInputHeight = (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n    const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n    const topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      lineHeight,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n    };\n    const pad = calculatePadding(paddingSettings);\n    const paddingOut = adjustPaddingOut({ ...paddingSettings,\n      pad\n    });\n    const baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n    const placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor: backgroundColor,\n      errorColor,\n      labelTranslationXOffset,\n      roundness: theme.roundness\n    };\n    const minHeight = height || (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT);\n    const {\n      leftLayout,\n      rightLayout\n    } = parentState;\n    const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: leftLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n    });\n    const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: rightLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n    });\n    const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: ADORNMENT_SIZE,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n    });\n    const rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n    const leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined'\n    });\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange\n    };\n    let adornmentProps = {\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Icon]: iconTopPosition,\n        [AdornmentType.Affix]: affixTopPosition\n      },\n      onAffixChange,\n      isTextInputFocused: parentState.focused\n    };\n\n    if (adornmentConfig.length) {\n      adornmentProps = { ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font,\n          fontSize,\n          fontWeight\n        },\n        visible: this.props.parentState.labeled\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(View, {\n      style: viewStyle\n    }, /*#__PURE__*/React.createElement(Outline, {\n      theme: theme,\n      hasActiveOutline: hasActiveOutline,\n      focused: parentState.focused,\n      activeColor: activeColor,\n      outlineColor: outlineColor,\n      backgroundColor: backgroundColor\n    }), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(View, {\n      style: [styles.labelContainer, {\n        paddingTop: LABEL_PADDING_TOP,\n        minHeight\n      }]\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      parentState: parentState,\n      labelProps: labelProps,\n      labelBackground: LabelBackground\n    }), render === null || render === void 0 ? void 0 : render({\n      testID: 'text-input-outlined',\n      ...rest,\n      ref: innerRef,\n      onChangeText,\n      placeholder: label ? parentState.placeholder : this.props.placeholder,\n      placeholderTextColor: placeholderTextColor || placeholderColor,\n      editable: !disabled && editable,\n      selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n      onFocus,\n      onBlur,\n      underlineColorAndroid: 'transparent',\n      multiline,\n      style: [styles.input, !multiline || multiline && height ? {\n        height: inputHeight\n      } : {}, paddingOut, { ...font,\n        fontSize,\n        fontWeight,\n        color: inputTextColor,\n        textAlignVertical: multiline ? 'top' : 'center',\n        textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n      }, Platform.OS === 'web' && {\n        outline: 'none'\n      }, adornmentStyleAdjustmentForNativeInput]\n    })), /*#__PURE__*/React.createElement(TextInputAdornment, adornmentProps)));\n  }\n\n}\n\n_defineProperty(TextInputOutlined, \"defaultProps\", {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: props => /*#__PURE__*/React.createElement(NativeTextInput, props)\n});\n\nexport default TextInputOutlined;\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  focused,\n  backgroundColor\n}) => /*#__PURE__*/React.createElement(View, {\n  testID: \"text-input-outline\",\n  pointerEvents: \"none\",\n  style: [styles.outline, // eslint-disable-next-line react-native/no-inline-styles\n  {\n    backgroundColor,\n    borderRadius: theme.roundness,\n    borderWidth: focused ? 2 : 1,\n    borderColor: hasActiveOutline ? activeColor : outlineColor\n  }]\n});\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0\n  },\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});\n//# sourceMappingURL=TextInputOutlined.js.map"]},"metadata":{},"sourceType":"module"}