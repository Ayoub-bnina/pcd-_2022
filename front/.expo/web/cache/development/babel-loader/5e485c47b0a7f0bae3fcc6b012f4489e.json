{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"status\", \"disabled\", \"onPress\", \"theme\", \"testID\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\n\nvar CheckboxIOS = function CheckboxIOS(_ref) {\n  var status = _ref.status,\n      disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      theme = _ref.theme,\n      testID = _ref.testID,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var checked = status === 'checked';\n  var indeterminate = status === 'indeterminate';\n  var checkedColor = disabled ? theme.colors.disabled : rest.color || theme.colors.accent;\n  var rippleColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n  }\n\n  var icon = indeterminate ? 'minus' : 'check';\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled: disabled,\n      checked: checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID\n  }), React.createElement(View, {\n    style: {\n      opacity: indeterminate || checked ? 1 : 0\n    }\n  }, React.createElement(MaterialCommunityIcon, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: checkedColor,\n    direction: \"ltr\"\n  })));\n};\n\nCheckboxIOS.displayName = 'Checkbox.IOS';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default withTheme(CheckboxIOS);\nvar CheckboxIOSWithTheme = withTheme(CheckboxIOS);\nexport { CheckboxIOSWithTheme as CheckboxIOS };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/Checkbox/CheckboxIOS.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","MaterialCommunityIcon","TouchableRipple","withTheme","CheckboxIOS","status","disabled","onPress","theme","testID","rest","checked","indeterminate","checkedColor","colors","accent","rippleColor","text","alpha","rgb","string","fade","icon","createElement","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","accessibilityLiveRegion","style","styles","container","View","opacity","allowFontScaling","name","size","direction","displayName","StyleSheet","create","borderRadius","padding","CheckboxIOSWithTheme"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxIOS = ({\n  status,\n  disabled,\n  onPress,\n  theme,\n  testID,\n  ...rest\n}) => {\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n  const checkedColor = disabled ? theme.colors.disabled : rest.color || theme.colors.accent;\n  let rippleColor;\n\n  if (disabled) {\n    rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n  } else {\n    rippleColor = color(checkedColor).fade(0.32).rgb().string();\n  }\n\n  const icon = indeterminate ? 'minus' : 'check';\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled,\n      checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID\n  }), /*#__PURE__*/React.createElement(View, {\n    style: {\n      opacity: indeterminate || checked ? 1 : 0\n    }\n  }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: checkedColor,\n    direction: \"ltr\"\n  })));\n};\n\nCheckboxIOS.displayName = 'Checkbox.IOS';\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default withTheme(CheckboxIOS); // @component-docs ignore-next-line\n\nconst CheckboxIOSWithTheme = withTheme(CheckboxIOS); // @component-docs ignore-next-line\n\nexport { CheckboxIOSWithTheme as CheckboxIOS };\n//# sourceMappingURL=CheckboxIOS.js.map"]},"metadata":{},"sourceType":"module"}