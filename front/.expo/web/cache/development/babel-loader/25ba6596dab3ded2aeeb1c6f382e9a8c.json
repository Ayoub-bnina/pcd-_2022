{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"style\", \"theme\", \"children\", \"pointerEvents\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableRow = function DataTableRow(_ref) {\n  var onPress = _ref.onPress,\n      style = _ref.style,\n      theme = _ref.theme,\n      children = _ref.children,\n      pointerEvents = _ref.pointerEvents,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), React.createElement(View, {\n    style: styles.content,\n    pointerEvents: pointerEvents\n  }, children));\n};\n\nDataTableRow.displayName = 'DataTable.Row';\nvar styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow);\nexport { DataTableRow };","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/DataTable/DataTableRow.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","color","TouchableRipple","black","white","withTheme","DataTableRow","onPress","style","theme","children","pointerEvents","rest","borderBottomColor","dark","alpha","rgb","string","createElement","styles","container","View","content","displayName","StyleSheet","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"mappings":";;;AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAO,KAAKQ,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,eAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB;AACA,SAASC,SAAT;;AA6BA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAOf;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,iBAAiB,GAAGZ,KAAK,CAACQ,KAAK,CAACK,IAAN,GAAaV,KAAb,GAAqBD,KAAtB,CAAL,CAAkCY,KAAlC,CAAwC,IAAxC,EAA8CC,GAA9C,GAAoDC,MAApD,EAA1B;AACA,SAAoBjB,KAAK,CAACkB,aAAN,CAAoBhB,eAApB,EAAqCf,QAAQ,CAAC,EAAD,EAAKyB,IAAL,EAAW;AAC1EL,IAAAA,OAAO,EAAEA,OADiE;AAE1EC,IAAAA,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmB;AACxBP,MAAAA,iBAAiB,EAAjBA;AADwB,KAAnB,EAEJL,KAFI;AAFmE,GAAX,CAA7C,EAKHR,KAAK,CAACkB,aAAN,CAAoBG,IAApB,EAA0B;AACzCb,IAAAA,KAAK,EAAEW,MAAM,CAACG,OAD2B;AAEzCX,IAAAA,aAAa,EAAEA;AAF0B,GAA1B,EAGdD,QAHc,CALG,CAApB;AASD,CAlBD;;AAoBAJ,YAAY,CAACiB,WAAb,GAA2B,eAA3B;AACA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,WAAW,EAAE,OADJ;AAETC,IAAAA,iBAAiB,EAAEH,UAAU,CAACI,aAFrB;AAGTC,IAAAA,SAAS,EAAE,EAHF;AAITC,IAAAA,iBAAiB,EAAE;AAJV,GADoB;AAO/BR,EAAAA,OAAO,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE;AAFR;AAPsB,CAAlB,CAAf;AAYA,eAAe3B,SAAS,CAACC,YAAD,CAAxB;AAEA,SAASA,YAAT","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}) => {\n  const borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor\n    }, style]\n  }), /*#__PURE__*/React.createElement(View, {\n    style: styles.content,\n    pointerEvents: pointerEvents\n  }, children));\n};\n\nDataTableRow.displayName = 'DataTable.Row';\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow); // @component-docs ignore-next-line\n\nexport { DataTableRow };\n//# sourceMappingURL=DataTableRow.js.map"]},"metadata":{},"sourceType":"module"}