{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport { Appearance } from \"react-native-web/dist/index\";\nimport { ThemeProvider } from \"./theming\";\nimport { Provider as SettingsProvider } from \"./settings\";\nimport MaterialCommunityIcon from \"../components/MaterialCommunityIcon\";\nimport PortalHost from \"../components/Portal/PortalHost\";\nimport DefaultTheme from \"../styles/DefaultTheme\";\nimport DarkTheme from \"../styles/DarkTheme\";\nimport { addEventListener } from \"../utils/addEventListener\";\n\nvar Provider = function Provider(_ref) {\n  var props = _extends({}, _ref);\n\n  var colorSchemeName = !props.theme && (Appearance === null || Appearance === void 0 ? void 0 : Appearance.getColorScheme()) || 'light';\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reduceMotionEnabled = _React$useState2[0],\n      setReduceMotionEnabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colorSchemeName),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorScheme = _React$useState4[0],\n      setColorScheme = _React$useState4[1];\n\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(function () {\n    var subscription;\n\n    if (!props.theme) {\n      subscription = addEventListener(AccessibilityInfo, 'reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n\n        (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.remove();\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n\n    if (!props.theme) {\n      appearanceSubscription = Appearance === null || Appearance === void 0 ? void 0 : Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return function () {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance === null || Appearance === void 0 ? void 0 : Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  var getTheme = function getTheme() {\n    var providedTheme = props.theme;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      var theme = colorScheme === 'dark' ? DarkTheme : DefaultTheme;\n      return _objectSpread(_objectSpread({}, theme), {}, {\n        animation: _objectSpread(_objectSpread({}, theme.animation), {}, {\n          scale: reduceMotionEnabled ? 0 : 1\n        })\n      });\n    }\n  };\n\n  var children = props.children,\n      settings = props.settings;\n  return React.createElement(PortalHost, null, React.createElement(SettingsProvider, {\n    value: settings || {\n      icon: MaterialCommunityIcon\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\n\nexport default Provider;","map":{"version":3,"mappings":"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","names":["React","Appearance","ThemeProvider","Provider","SettingsProvider","MaterialCommunityIcon","PortalHost","DefaultTheme","DarkTheme","addEventListener","props","colorSchemeName","theme","getColorScheme","useState","reduceMotionEnabled","setReduceMotionEnabled","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","AccessibilityInfo","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","providedTheme","animation","scale","children","settings","value","icon"],"sources":["Provider.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\nimport { addEventListener } from '../utils/addEventListener';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (\n        colorScheme === 'dark' ? DarkTheme : DefaultTheme\n      ) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}