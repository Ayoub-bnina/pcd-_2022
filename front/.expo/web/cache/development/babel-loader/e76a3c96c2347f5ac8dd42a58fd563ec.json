{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContext } from 'react-navigation';\nimport Header from \"./Header\";\nimport { forSlideLeft, forSlideUp, forNoAnimation, forSlideRight } from \"../../TransitionConfigs/HeaderStyleInterpolators\";\nimport HeaderShownContext from \"../../utils/HeaderShownContext\";\nimport PreviousSceneContext from \"../../utils/PreviousSceneContext\";\nexport default function HeaderContainer(_ref) {\n  var mode = _ref.mode,\n      scenes = _ref.scenes,\n      layout = _ref.layout,\n      insets = _ref.insets,\n      getPreviousScene = _ref.getPreviousScene,\n      getFocusedRoute = _ref.getFocusedRoute,\n      onContentHeightChange = _ref.onContentHeightChange,\n      gestureDirection = _ref.gestureDirection,\n      styleInterpolator = _ref.styleInterpolator,\n      style = _ref.style;\n  var focusedRoute = getFocusedRoute();\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n  var parentPreviousScene = React.useContext(PreviousSceneContext);\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map(function (scene, i, self) {\n    var _getPreviousScene;\n\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n\n    var _ref2 = scene.descriptor.options || {},\n        header = _ref2.header,\n        _ref2$headerShown = _ref2.headerShown,\n        headerShown = _ref2$headerShown === void 0 ? isParentHeaderShown === false : _ref2$headerShown,\n        headerTransparent = _ref2.headerTransparent;\n\n    if (!headerShown) {\n      return null;\n    }\n\n    var isFocused = focusedRoute.key === scene.route.key;\n    var previous = (_getPreviousScene = getPreviousScene({\n      route: scene.route\n    })) !== null && _getPreviousScene !== void 0 ? _getPreviousScene : parentPreviousScene;\n    var previousScene = self[i - 1];\n    var nextScene = self[i + 1];\n\n    var _ref3 = (previousScene === null || previousScene === void 0 ? void 0 : previousScene.descriptor.options) || {},\n        _ref3$headerShown = _ref3.headerShown,\n        previousHeaderShown = _ref3$headerShown === void 0 ? isParentHeaderShown === false : _ref3$headerShown;\n\n    var _ref4 = (nextScene === null || nextScene === void 0 ? void 0 : nextScene.descriptor.options) || {},\n        _ref4$headerShown = _ref4.headerShown,\n        nextHeaderShown = _ref4$headerShown === void 0 ? isParentHeaderShown === false : _ref4$headerShown;\n\n    var isHeaderStatic = previousHeaderShown === false && !nextScene || nextHeaderShown === false;\n    var props = {\n      mode: mode,\n      layout: layout,\n      insets: insets,\n      scene: scene,\n      previous: previous,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? forSlideUp : gestureDirection === 'horizontal-inverted' ? forSlideRight : forSlideLeft : styleInterpolator : forNoAnimation\n    };\n    return React.createElement(NavigationContext.Provider, {\n      key: scene.route.key,\n      value: scene.descriptor.navigation\n    }, React.createElement(React.Fragment, null, React.createElement(View, {\n      onLayout: onContentHeightChange ? function (e) {\n        return onContentHeightChange({\n          route: scene.route,\n          height: e.nativeEvent.layout.height\n        });\n      } : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style: mode === 'float' && !isFocused || headerTransparent ? styles.header : null\n    }, header !== undefined ? header(props) : React.createElement(Header, props))));\n  }));\n}\nvar styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-navigation-stack/lib/module/vendor/views/Header/HeaderContainer.js"],"names":["React","NavigationContext","Header","forSlideLeft","forSlideUp","forNoAnimation","forSlideRight","HeaderShownContext","PreviousSceneContext","HeaderContainer","mode","scenes","layout","insets","getPreviousScene","getFocusedRoute","onContentHeightChange","gestureDirection","styleInterpolator","style","focusedRoute","isParentHeaderShown","useContext","parentPreviousScene","createElement","View","pointerEvents","slice","map","scene","i","self","_getPreviousScene","length","descriptor","options","header","headerShown","headerTransparent","isFocused","key","route","previous","previousScene","nextScene","previousHeaderShown","nextHeaderShown","isHeaderStatic","props","navigation","Provider","value","Fragment","onLayout","e","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","styles","StyleSheet","create","position","top","left","right"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { NavigationContext } from 'react-navigation';\nimport Header from './Header';\nimport { forSlideLeft, forSlideUp, forNoAnimation, forSlideRight } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style\n}) {\n  const focusedRoute = getFocusedRoute();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentPreviousScene = React.useContext(PreviousSceneContext);\n  return /*#__PURE__*/React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map((scene, i, self) => {\n    var _getPreviousScene;\n\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n\n    const {\n      header,\n      headerShown = isParentHeaderShown === false,\n      headerTransparent\n    } = scene.descriptor.options || {};\n\n    if (!headerShown) {\n      return null;\n    }\n\n    const isFocused = focusedRoute.key === scene.route.key;\n    const previous = (_getPreviousScene = getPreviousScene({\n      route: scene.route\n    })) !== null && _getPreviousScene !== void 0 ? _getPreviousScene : parentPreviousScene; // If the screen is next to a headerless screen, we need to make the header appear static\n    // This makes the header look like it's moving with the screen\n\n    const previousScene = self[i - 1];\n    const nextScene = self[i + 1];\n    const {\n      headerShown: previousHeaderShown = isParentHeaderShown === false\n    } = (previousScene === null || previousScene === void 0 ? void 0 : previousScene.descriptor.options) || {};\n    const {\n      headerShown: nextHeaderShown = isParentHeaderShown === false\n    } = (nextScene === null || nextScene === void 0 ? void 0 : nextScene.descriptor.options) || {};\n    const isHeaderStatic = previousHeaderShown === false && // We still need to animate when coming back from next scene\n    // A hacky way to check this is if the next scene exists\n    !nextScene || nextHeaderShown === false;\n    const props = {\n      mode,\n      layout,\n      insets,\n      scene,\n      previous,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? forSlideUp : gestureDirection === 'horizontal-inverted' ? forSlideRight : forSlideLeft : styleInterpolator : forNoAnimation\n    };\n    return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n      key: scene.route.key,\n      value: scene.descriptor.navigation\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(View, {\n      onLayout: onContentHeightChange ? e => onContentHeightChange({\n        route: scene.route,\n        height: e.nativeEvent.layout.height\n      }) : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style: // Avoid positioning the focused header absolutely\n      // Otherwise accessibility tools don't seem to be able to find it\n      mode === 'float' && !isFocused || headerTransparent ? styles.header : null\n    }, header !== undefined ? header(props) : /*#__PURE__*/React.createElement(Header, props))));\n  }));\n}\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});\n//# sourceMappingURL=HeaderContainer.js.map"]},"metadata":{},"sourceType":"module"}