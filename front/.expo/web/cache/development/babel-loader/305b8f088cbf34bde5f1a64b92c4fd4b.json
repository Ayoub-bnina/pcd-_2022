{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\n\nvar InputLabel = function InputLabel(props) {\n  var parentState = props.parentState,\n      labelBackground = props.labelBackground;\n  var _props$labelProps = props.labelProps,\n      label = _props$labelProps.label,\n      error = _props$labelProps.error,\n      onLayoutAnimatedText = _props$labelProps.onLayoutAnimatedText,\n      hasActiveOutline = _props$labelProps.hasActiveOutline,\n      activeColor = _props$labelProps.activeColor,\n      placeholderStyle = _props$labelProps.placeholderStyle,\n      baseLabelTranslateX = _props$labelProps.baseLabelTranslateX,\n      baseLabelTranslateY = _props$labelProps.baseLabelTranslateY,\n      font = _props$labelProps.font,\n      fontSize = _props$labelProps.fontSize,\n      fontWeight = _props$labelProps.fontWeight,\n      placeholderOpacity = _props$labelProps.placeholderOpacity,\n      wiggleOffsetX = _props$labelProps.wiggleOffsetX,\n      labelScale = _props$labelProps.labelScale,\n      topPosition = _props$labelProps.topPosition,\n      paddingOffset = _props$labelProps.paddingOffset,\n      placeholderColor = _props$labelProps.placeholderColor,\n      errorColor = _props$labelProps.errorColor,\n      labelTranslationXOffset = _props$labelProps.labelTranslationXOffset;\n  var labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]\n      })\n    }]\n  };\n\n  var labelStyle = _objectSpread(_objectSpread({}, font), {}, {\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    transform: [{\n      translateX: parentState.error.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, parentState.value && error ? wiggleOffsetX : 0, 0]\n      })\n    }, {\n      translateY: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateY, 0]\n      })\n    }, {\n      scale: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelScale, 1]\n      })\n    }]\n  });\n\n  return label ? React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.labelContainer, {\n      opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n    }, labelTranslationX]\n  }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({\n    parentState: parentState,\n    labelStyle: labelStyle,\n    labelProps: props.labelProps\n  }), React.createElement(AnimatedText, {\n    onLayout: onLayoutAnimatedText,\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset || {}, {\n      color: activeColor,\n      opacity: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [hasActiveOutline ? 1 : 0, 0]\n      })\n    }],\n    numberOfLines: 1\n  }, label), React.createElement(AnimatedText, {\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset, {\n      color: error && errorColor ? errorColor : placeholderColor,\n      opacity: placeholderOpacity\n    }],\n    numberOfLines: 1\n  }, label)) : null;\n};\n\nvar styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3\n  }\n});\nexport default InputLabel;","map":{"version":3,"sources":["C:/LearnEZ/node_modules/react-native-paper/lib/module/components/TextInput/Label/InputLabel.js"],"names":["React","AnimatedText","InputLabel","props","parentState","labelBackground","labelProps","label","error","onLayoutAnimatedText","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingOffset","placeholderColor","errorColor","labelTranslationXOffset","labelTranslationX","transform","translateX","labeled","interpolate","inputRange","outputRange","labelStyle","value","translateY","scale","createElement","Animated","View","pointerEvents","style","StyleSheet","absoluteFill","styles","labelContainer","opacity","focused","labelLayout","measured","onLayout","top","color","numberOfLines","create","zIndex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport AnimatedText from '../../Typography/AnimatedText';\n\nconst InputLabel = props => {\n  const {\n    parentState,\n    labelBackground\n  } = props;\n  const {\n    label,\n    error,\n    onLayoutAnimatedText,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingOffset,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset\n  } = props.labelProps;\n  const labelTranslationX = {\n    transform: [{\n      // Offset label scale since RN doesn't support transform origin\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]\n      })\n    }]\n  };\n  const labelStyle = { ...font,\n    fontSize,\n    fontWeight,\n    transform: [{\n      // Wiggle the label when there's an error\n      translateX: parentState.error.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, parentState.value && error ? wiggleOffsetX : 0, 0]\n      })\n    }, {\n      // Move label to top\n      translateY: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateY, 0]\n      })\n    }, {\n      // Make label smaller\n      scale: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelScale, 1]\n      })\n    }]\n  };\n  return label ?\n  /*#__PURE__*/\n  // Position colored placeholder and gray placeholder on top of each other and crossfade them\n  // This gives the effect of animating the color, but allows us to use native driver\n  React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.labelContainer, {\n      opacity: // Hide the label in minimized state until we measure it's width\n      parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n    }, labelTranslationX]\n  }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({\n    parentState,\n    labelStyle,\n    labelProps: props.labelProps\n  }), /*#__PURE__*/React.createElement(AnimatedText, {\n    onLayout: onLayoutAnimatedText,\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset || {}, {\n      color: activeColor,\n      opacity: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [hasActiveOutline ? 1 : 0, 0]\n      })\n    }],\n    numberOfLines: 1\n  }, label), /*#__PURE__*/React.createElement(AnimatedText, {\n    style: [placeholderStyle, {\n      top: topPosition\n    }, labelStyle, paddingOffset, {\n      color: error && errorColor ? errorColor : placeholderColor,\n      opacity: placeholderOpacity\n    }],\n    numberOfLines: 1\n  }, label)) : null;\n};\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3\n  }\n});\nexport default InputLabel;\n//# sourceMappingURL=InputLabel.js.map"]},"metadata":{},"sourceType":"module"}